
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `tbl_loan` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model tbl_loan
 * 
 */
export type tbl_loanModel = runtime.Types.Result.DefaultSelection<Prisma.$tbl_loanPayload>

export type AggregateTbl_loan = {
  _count: Tbl_loanCountAggregateOutputType | null
  _avg: Tbl_loanAvgAggregateOutputType | null
  _sum: Tbl_loanSumAggregateOutputType | null
  _min: Tbl_loanMinAggregateOutputType | null
  _max: Tbl_loanMaxAggregateOutputType | null
}

export type Tbl_loanAvgAggregateOutputType = {
  ln_ID: number | null
  ln_amount: number | null
}

export type Tbl_loanSumAggregateOutputType = {
  ln_ID: number | null
  ln_amount: number | null
}

export type Tbl_loanMinAggregateOutputType = {
  ln_ID: number | null
  ln_user: string | null
  ln_amount: number | null
  ln_date: string | null
  ln_status: string | null
}

export type Tbl_loanMaxAggregateOutputType = {
  ln_ID: number | null
  ln_user: string | null
  ln_amount: number | null
  ln_date: string | null
  ln_status: string | null
}

export type Tbl_loanCountAggregateOutputType = {
  ln_ID: number
  ln_user: number
  ln_amount: number
  ln_date: number
  ln_status: number
  _all: number
}


export type Tbl_loanAvgAggregateInputType = {
  ln_ID?: true
  ln_amount?: true
}

export type Tbl_loanSumAggregateInputType = {
  ln_ID?: true
  ln_amount?: true
}

export type Tbl_loanMinAggregateInputType = {
  ln_ID?: true
  ln_user?: true
  ln_amount?: true
  ln_date?: true
  ln_status?: true
}

export type Tbl_loanMaxAggregateInputType = {
  ln_ID?: true
  ln_user?: true
  ln_amount?: true
  ln_date?: true
  ln_status?: true
}

export type Tbl_loanCountAggregateInputType = {
  ln_ID?: true
  ln_user?: true
  ln_amount?: true
  ln_date?: true
  ln_status?: true
  _all?: true
}

export type Tbl_loanAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_loan to aggregate.
   */
  where?: Prisma.tbl_loanWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_loans to fetch.
   */
  orderBy?: Prisma.tbl_loanOrderByWithRelationInput | Prisma.tbl_loanOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.tbl_loanWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_loans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_loans.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned tbl_loans
  **/
  _count?: true | Tbl_loanCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Tbl_loanAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Tbl_loanSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Tbl_loanMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Tbl_loanMaxAggregateInputType
}

export type GetTbl_loanAggregateType<T extends Tbl_loanAggregateArgs> = {
      [P in keyof T & keyof AggregateTbl_loan]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTbl_loan[P]>
    : Prisma.GetScalarType<T[P], AggregateTbl_loan[P]>
}




export type tbl_loanGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.tbl_loanWhereInput
  orderBy?: Prisma.tbl_loanOrderByWithAggregationInput | Prisma.tbl_loanOrderByWithAggregationInput[]
  by: Prisma.Tbl_loanScalarFieldEnum[] | Prisma.Tbl_loanScalarFieldEnum
  having?: Prisma.tbl_loanScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Tbl_loanCountAggregateInputType | true
  _avg?: Tbl_loanAvgAggregateInputType
  _sum?: Tbl_loanSumAggregateInputType
  _min?: Tbl_loanMinAggregateInputType
  _max?: Tbl_loanMaxAggregateInputType
}

export type Tbl_loanGroupByOutputType = {
  ln_ID: number
  ln_user: string | null
  ln_amount: number
  ln_date: string
  ln_status: string
  _count: Tbl_loanCountAggregateOutputType | null
  _avg: Tbl_loanAvgAggregateOutputType | null
  _sum: Tbl_loanSumAggregateOutputType | null
  _min: Tbl_loanMinAggregateOutputType | null
  _max: Tbl_loanMaxAggregateOutputType | null
}

type GetTbl_loanGroupByPayload<T extends tbl_loanGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Tbl_loanGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Tbl_loanGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Tbl_loanGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Tbl_loanGroupByOutputType[P]>
      }
    >
  >



export type tbl_loanWhereInput = {
  AND?: Prisma.tbl_loanWhereInput | Prisma.tbl_loanWhereInput[]
  OR?: Prisma.tbl_loanWhereInput[]
  NOT?: Prisma.tbl_loanWhereInput | Prisma.tbl_loanWhereInput[]
  ln_ID?: Prisma.IntFilter<"tbl_loan"> | number
  ln_user?: Prisma.StringNullableFilter<"tbl_loan"> | string | null
  ln_amount?: Prisma.FloatFilter<"tbl_loan"> | number
  ln_date?: Prisma.StringFilter<"tbl_loan"> | string
  ln_status?: Prisma.StringFilter<"tbl_loan"> | string
  nasso_users?: Prisma.XOR<Prisma.Nasso_usersNullableScalarRelationFilter, Prisma.nasso_usersWhereInput> | null
}

export type tbl_loanOrderByWithRelationInput = {
  ln_ID?: Prisma.SortOrder
  ln_user?: Prisma.SortOrderInput | Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
  ln_date?: Prisma.SortOrder
  ln_status?: Prisma.SortOrder
  nasso_users?: Prisma.nasso_usersOrderByWithRelationInput
  _relevance?: Prisma.tbl_loanOrderByRelevanceInput
}

export type tbl_loanWhereUniqueInput = Prisma.AtLeast<{
  ln_ID?: number
  AND?: Prisma.tbl_loanWhereInput | Prisma.tbl_loanWhereInput[]
  OR?: Prisma.tbl_loanWhereInput[]
  NOT?: Prisma.tbl_loanWhereInput | Prisma.tbl_loanWhereInput[]
  ln_user?: Prisma.StringNullableFilter<"tbl_loan"> | string | null
  ln_amount?: Prisma.FloatFilter<"tbl_loan"> | number
  ln_date?: Prisma.StringFilter<"tbl_loan"> | string
  ln_status?: Prisma.StringFilter<"tbl_loan"> | string
  nasso_users?: Prisma.XOR<Prisma.Nasso_usersNullableScalarRelationFilter, Prisma.nasso_usersWhereInput> | null
}, "ln_ID">

export type tbl_loanOrderByWithAggregationInput = {
  ln_ID?: Prisma.SortOrder
  ln_user?: Prisma.SortOrderInput | Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
  ln_date?: Prisma.SortOrder
  ln_status?: Prisma.SortOrder
  _count?: Prisma.tbl_loanCountOrderByAggregateInput
  _avg?: Prisma.tbl_loanAvgOrderByAggregateInput
  _max?: Prisma.tbl_loanMaxOrderByAggregateInput
  _min?: Prisma.tbl_loanMinOrderByAggregateInput
  _sum?: Prisma.tbl_loanSumOrderByAggregateInput
}

export type tbl_loanScalarWhereWithAggregatesInput = {
  AND?: Prisma.tbl_loanScalarWhereWithAggregatesInput | Prisma.tbl_loanScalarWhereWithAggregatesInput[]
  OR?: Prisma.tbl_loanScalarWhereWithAggregatesInput[]
  NOT?: Prisma.tbl_loanScalarWhereWithAggregatesInput | Prisma.tbl_loanScalarWhereWithAggregatesInput[]
  ln_ID?: Prisma.IntWithAggregatesFilter<"tbl_loan"> | number
  ln_user?: Prisma.StringNullableWithAggregatesFilter<"tbl_loan"> | string | null
  ln_amount?: Prisma.FloatWithAggregatesFilter<"tbl_loan"> | number
  ln_date?: Prisma.StringWithAggregatesFilter<"tbl_loan"> | string
  ln_status?: Prisma.StringWithAggregatesFilter<"tbl_loan"> | string
}

export type tbl_loanCreateInput = {
  ln_amount?: number
  ln_date: string
  ln_status?: string
  nasso_users?: Prisma.nasso_usersCreateNestedOneWithoutTbl_loanInput
}

export type tbl_loanUncheckedCreateInput = {
  ln_ID?: number
  ln_user?: string | null
  ln_amount?: number
  ln_date: string
  ln_status?: string
}

export type tbl_loanUpdateInput = {
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
  nasso_users?: Prisma.nasso_usersUpdateOneWithoutTbl_loanNestedInput
}

export type tbl_loanUncheckedUpdateInput = {
  ln_ID?: Prisma.IntFieldUpdateOperationsInput | number
  ln_user?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
}

export type tbl_loanCreateManyInput = {
  ln_ID?: number
  ln_user?: string | null
  ln_amount?: number
  ln_date: string
  ln_status?: string
}

export type tbl_loanUpdateManyMutationInput = {
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
}

export type tbl_loanUncheckedUpdateManyInput = {
  ln_ID?: Prisma.IntFieldUpdateOperationsInput | number
  ln_user?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
}

export type Tbl_loanListRelationFilter = {
  every?: Prisma.tbl_loanWhereInput
  some?: Prisma.tbl_loanWhereInput
  none?: Prisma.tbl_loanWhereInput
}

export type tbl_loanOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type tbl_loanOrderByRelevanceInput = {
  fields: Prisma.tbl_loanOrderByRelevanceFieldEnum | Prisma.tbl_loanOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type tbl_loanCountOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  ln_user?: Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
  ln_date?: Prisma.SortOrder
  ln_status?: Prisma.SortOrder
}

export type tbl_loanAvgOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
}

export type tbl_loanMaxOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  ln_user?: Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
  ln_date?: Prisma.SortOrder
  ln_status?: Prisma.SortOrder
}

export type tbl_loanMinOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  ln_user?: Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
  ln_date?: Prisma.SortOrder
  ln_status?: Prisma.SortOrder
}

export type tbl_loanSumOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  ln_amount?: Prisma.SortOrder
}

export type tbl_loanCreateNestedManyWithoutNasso_usersInput = {
  create?: Prisma.XOR<Prisma.tbl_loanCreateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput> | Prisma.tbl_loanCreateWithoutNasso_usersInput[] | Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput | Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput[]
  createMany?: Prisma.tbl_loanCreateManyNasso_usersInputEnvelope
  connect?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
}

export type tbl_loanUncheckedCreateNestedManyWithoutNasso_usersInput = {
  create?: Prisma.XOR<Prisma.tbl_loanCreateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput> | Prisma.tbl_loanCreateWithoutNasso_usersInput[] | Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput | Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput[]
  createMany?: Prisma.tbl_loanCreateManyNasso_usersInputEnvelope
  connect?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
}

export type tbl_loanUpdateManyWithoutNasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.tbl_loanCreateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput> | Prisma.tbl_loanCreateWithoutNasso_usersInput[] | Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput | Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput[]
  upsert?: Prisma.tbl_loanUpsertWithWhereUniqueWithoutNasso_usersInput | Prisma.tbl_loanUpsertWithWhereUniqueWithoutNasso_usersInput[]
  createMany?: Prisma.tbl_loanCreateManyNasso_usersInputEnvelope
  set?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  disconnect?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  delete?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  connect?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  update?: Prisma.tbl_loanUpdateWithWhereUniqueWithoutNasso_usersInput | Prisma.tbl_loanUpdateWithWhereUniqueWithoutNasso_usersInput[]
  updateMany?: Prisma.tbl_loanUpdateManyWithWhereWithoutNasso_usersInput | Prisma.tbl_loanUpdateManyWithWhereWithoutNasso_usersInput[]
  deleteMany?: Prisma.tbl_loanScalarWhereInput | Prisma.tbl_loanScalarWhereInput[]
}

export type tbl_loanUncheckedUpdateManyWithoutNasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.tbl_loanCreateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput> | Prisma.tbl_loanCreateWithoutNasso_usersInput[] | Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput | Prisma.tbl_loanCreateOrConnectWithoutNasso_usersInput[]
  upsert?: Prisma.tbl_loanUpsertWithWhereUniqueWithoutNasso_usersInput | Prisma.tbl_loanUpsertWithWhereUniqueWithoutNasso_usersInput[]
  createMany?: Prisma.tbl_loanCreateManyNasso_usersInputEnvelope
  set?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  disconnect?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  delete?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  connect?: Prisma.tbl_loanWhereUniqueInput | Prisma.tbl_loanWhereUniqueInput[]
  update?: Prisma.tbl_loanUpdateWithWhereUniqueWithoutNasso_usersInput | Prisma.tbl_loanUpdateWithWhereUniqueWithoutNasso_usersInput[]
  updateMany?: Prisma.tbl_loanUpdateManyWithWhereWithoutNasso_usersInput | Prisma.tbl_loanUpdateManyWithWhereWithoutNasso_usersInput[]
  deleteMany?: Prisma.tbl_loanScalarWhereInput | Prisma.tbl_loanScalarWhereInput[]
}

export type tbl_loanCreateWithoutNasso_usersInput = {
  ln_amount?: number
  ln_date: string
  ln_status?: string
}

export type tbl_loanUncheckedCreateWithoutNasso_usersInput = {
  ln_ID?: number
  ln_amount?: number
  ln_date: string
  ln_status?: string
}

export type tbl_loanCreateOrConnectWithoutNasso_usersInput = {
  where: Prisma.tbl_loanWhereUniqueInput
  create: Prisma.XOR<Prisma.tbl_loanCreateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput>
}

export type tbl_loanCreateManyNasso_usersInputEnvelope = {
  data: Prisma.tbl_loanCreateManyNasso_usersInput | Prisma.tbl_loanCreateManyNasso_usersInput[]
  skipDuplicates?: boolean
}

export type tbl_loanUpsertWithWhereUniqueWithoutNasso_usersInput = {
  where: Prisma.tbl_loanWhereUniqueInput
  update: Prisma.XOR<Prisma.tbl_loanUpdateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedUpdateWithoutNasso_usersInput>
  create: Prisma.XOR<Prisma.tbl_loanCreateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedCreateWithoutNasso_usersInput>
}

export type tbl_loanUpdateWithWhereUniqueWithoutNasso_usersInput = {
  where: Prisma.tbl_loanWhereUniqueInput
  data: Prisma.XOR<Prisma.tbl_loanUpdateWithoutNasso_usersInput, Prisma.tbl_loanUncheckedUpdateWithoutNasso_usersInput>
}

export type tbl_loanUpdateManyWithWhereWithoutNasso_usersInput = {
  where: Prisma.tbl_loanScalarWhereInput
  data: Prisma.XOR<Prisma.tbl_loanUpdateManyMutationInput, Prisma.tbl_loanUncheckedUpdateManyWithoutNasso_usersInput>
}

export type tbl_loanScalarWhereInput = {
  AND?: Prisma.tbl_loanScalarWhereInput | Prisma.tbl_loanScalarWhereInput[]
  OR?: Prisma.tbl_loanScalarWhereInput[]
  NOT?: Prisma.tbl_loanScalarWhereInput | Prisma.tbl_loanScalarWhereInput[]
  ln_ID?: Prisma.IntFilter<"tbl_loan"> | number
  ln_user?: Prisma.StringNullableFilter<"tbl_loan"> | string | null
  ln_amount?: Prisma.FloatFilter<"tbl_loan"> | number
  ln_date?: Prisma.StringFilter<"tbl_loan"> | string
  ln_status?: Prisma.StringFilter<"tbl_loan"> | string
}

export type tbl_loanCreateManyNasso_usersInput = {
  ln_ID?: number
  ln_amount?: number
  ln_date: string
  ln_status?: string
}

export type tbl_loanUpdateWithoutNasso_usersInput = {
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
}

export type tbl_loanUncheckedUpdateWithoutNasso_usersInput = {
  ln_ID?: Prisma.IntFieldUpdateOperationsInput | number
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
}

export type tbl_loanUncheckedUpdateManyWithoutNasso_usersInput = {
  ln_ID?: Prisma.IntFieldUpdateOperationsInput | number
  ln_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  ln_date?: Prisma.StringFieldUpdateOperationsInput | string
  ln_status?: Prisma.StringFieldUpdateOperationsInput | string
}



export type tbl_loanSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ln_ID?: boolean
  ln_user?: boolean
  ln_amount?: boolean
  ln_date?: boolean
  ln_status?: boolean
  nasso_users?: boolean | Prisma.tbl_loan$nasso_usersArgs<ExtArgs>
}, ExtArgs["result"]["tbl_loan"]>



export type tbl_loanSelectScalar = {
  ln_ID?: boolean
  ln_user?: boolean
  ln_amount?: boolean
  ln_date?: boolean
  ln_status?: boolean
}

export type tbl_loanOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"ln_ID" | "ln_user" | "ln_amount" | "ln_date" | "ln_status", ExtArgs["result"]["tbl_loan"]>
export type tbl_loanInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  nasso_users?: boolean | Prisma.tbl_loan$nasso_usersArgs<ExtArgs>
}

export type $tbl_loanPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "tbl_loan"
  objects: {
    nasso_users: Prisma.$nasso_usersPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    ln_ID: number
    ln_user: string | null
    ln_amount: number
    ln_date: string
    ln_status: string
  }, ExtArgs["result"]["tbl_loan"]>
  composites: {}
}

export type tbl_loanGetPayload<S extends boolean | null | undefined | tbl_loanDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload, S>

export type tbl_loanCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<tbl_loanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Tbl_loanCountAggregateInputType | true
  }

export interface tbl_loanDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_loan'], meta: { name: 'tbl_loan' } }
  /**
   * Find zero or one Tbl_loan that matches the filter.
   * @param {tbl_loanFindUniqueArgs} args - Arguments to find a Tbl_loan
   * @example
   * // Get one Tbl_loan
   * const tbl_loan = await prisma.tbl_loan.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends tbl_loanFindUniqueArgs>(args: Prisma.SelectSubset<T, tbl_loanFindUniqueArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Tbl_loan that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {tbl_loanFindUniqueOrThrowArgs} args - Arguments to find a Tbl_loan
   * @example
   * // Get one Tbl_loan
   * const tbl_loan = await prisma.tbl_loan.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends tbl_loanFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, tbl_loanFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_loan that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_loanFindFirstArgs} args - Arguments to find a Tbl_loan
   * @example
   * // Get one Tbl_loan
   * const tbl_loan = await prisma.tbl_loan.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends tbl_loanFindFirstArgs>(args?: Prisma.SelectSubset<T, tbl_loanFindFirstArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_loan that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_loanFindFirstOrThrowArgs} args - Arguments to find a Tbl_loan
   * @example
   * // Get one Tbl_loan
   * const tbl_loan = await prisma.tbl_loan.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends tbl_loanFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, tbl_loanFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Tbl_loans that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_loanFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Tbl_loans
   * const tbl_loans = await prisma.tbl_loan.findMany()
   * 
   * // Get first 10 Tbl_loans
   * const tbl_loans = await prisma.tbl_loan.findMany({ take: 10 })
   * 
   * // Only select the `ln_ID`
   * const tbl_loanWithLn_IDOnly = await prisma.tbl_loan.findMany({ select: { ln_ID: true } })
   * 
   */
  findMany<T extends tbl_loanFindManyArgs>(args?: Prisma.SelectSubset<T, tbl_loanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Tbl_loan.
   * @param {tbl_loanCreateArgs} args - Arguments to create a Tbl_loan.
   * @example
   * // Create one Tbl_loan
   * const Tbl_loan = await prisma.tbl_loan.create({
   *   data: {
   *     // ... data to create a Tbl_loan
   *   }
   * })
   * 
   */
  create<T extends tbl_loanCreateArgs>(args: Prisma.SelectSubset<T, tbl_loanCreateArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Tbl_loans.
   * @param {tbl_loanCreateManyArgs} args - Arguments to create many Tbl_loans.
   * @example
   * // Create many Tbl_loans
   * const tbl_loan = await prisma.tbl_loan.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends tbl_loanCreateManyArgs>(args?: Prisma.SelectSubset<T, tbl_loanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Tbl_loan.
   * @param {tbl_loanDeleteArgs} args - Arguments to delete one Tbl_loan.
   * @example
   * // Delete one Tbl_loan
   * const Tbl_loan = await prisma.tbl_loan.delete({
   *   where: {
   *     // ... filter to delete one Tbl_loan
   *   }
   * })
   * 
   */
  delete<T extends tbl_loanDeleteArgs>(args: Prisma.SelectSubset<T, tbl_loanDeleteArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Tbl_loan.
   * @param {tbl_loanUpdateArgs} args - Arguments to update one Tbl_loan.
   * @example
   * // Update one Tbl_loan
   * const tbl_loan = await prisma.tbl_loan.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends tbl_loanUpdateArgs>(args: Prisma.SelectSubset<T, tbl_loanUpdateArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Tbl_loans.
   * @param {tbl_loanDeleteManyArgs} args - Arguments to filter Tbl_loans to delete.
   * @example
   * // Delete a few Tbl_loans
   * const { count } = await prisma.tbl_loan.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends tbl_loanDeleteManyArgs>(args?: Prisma.SelectSubset<T, tbl_loanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Tbl_loans.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_loanUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Tbl_loans
   * const tbl_loan = await prisma.tbl_loan.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends tbl_loanUpdateManyArgs>(args: Prisma.SelectSubset<T, tbl_loanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Tbl_loan.
   * @param {tbl_loanUpsertArgs} args - Arguments to update or create a Tbl_loan.
   * @example
   * // Update or create a Tbl_loan
   * const tbl_loan = await prisma.tbl_loan.upsert({
   *   create: {
   *     // ... data to create a Tbl_loan
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Tbl_loan we want to update
   *   }
   * })
   */
  upsert<T extends tbl_loanUpsertArgs>(args: Prisma.SelectSubset<T, tbl_loanUpsertArgs<ExtArgs>>): Prisma.Prisma__tbl_loanClient<runtime.Types.Result.GetResult<Prisma.$tbl_loanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Tbl_loans.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_loanCountArgs} args - Arguments to filter Tbl_loans to count.
   * @example
   * // Count the number of Tbl_loans
   * const count = await prisma.tbl_loan.count({
   *   where: {
   *     // ... the filter for the Tbl_loans we want to count
   *   }
   * })
  **/
  count<T extends tbl_loanCountArgs>(
    args?: Prisma.Subset<T, tbl_loanCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Tbl_loanCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Tbl_loan.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Tbl_loanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Tbl_loanAggregateArgs>(args: Prisma.Subset<T, Tbl_loanAggregateArgs>): Prisma.PrismaPromise<GetTbl_loanAggregateType<T>>

  /**
   * Group by Tbl_loan.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_loanGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends tbl_loanGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: tbl_loanGroupByArgs['orderBy'] }
      : { orderBy?: tbl_loanGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, tbl_loanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_loanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the tbl_loan model
 */
readonly fields: tbl_loanFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for tbl_loan.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__tbl_loanClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  nasso_users<T extends Prisma.tbl_loan$nasso_usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.tbl_loan$nasso_usersArgs<ExtArgs>>): Prisma.Prisma__nasso_usersClient<runtime.Types.Result.GetResult<Prisma.$nasso_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the tbl_loan model
 */
export interface tbl_loanFieldRefs {
  readonly ln_ID: Prisma.FieldRef<"tbl_loan", 'Int'>
  readonly ln_user: Prisma.FieldRef<"tbl_loan", 'String'>
  readonly ln_amount: Prisma.FieldRef<"tbl_loan", 'Float'>
  readonly ln_date: Prisma.FieldRef<"tbl_loan", 'String'>
  readonly ln_status: Prisma.FieldRef<"tbl_loan", 'String'>
}
    

// Custom InputTypes
/**
 * tbl_loan findUnique
 */
export type tbl_loanFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * Filter, which tbl_loan to fetch.
   */
  where: Prisma.tbl_loanWhereUniqueInput
}

/**
 * tbl_loan findUniqueOrThrow
 */
export type tbl_loanFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * Filter, which tbl_loan to fetch.
   */
  where: Prisma.tbl_loanWhereUniqueInput
}

/**
 * tbl_loan findFirst
 */
export type tbl_loanFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * Filter, which tbl_loan to fetch.
   */
  where?: Prisma.tbl_loanWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_loans to fetch.
   */
  orderBy?: Prisma.tbl_loanOrderByWithRelationInput | Prisma.tbl_loanOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_loans.
   */
  cursor?: Prisma.tbl_loanWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_loans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_loans.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_loans.
   */
  distinct?: Prisma.Tbl_loanScalarFieldEnum | Prisma.Tbl_loanScalarFieldEnum[]
}

/**
 * tbl_loan findFirstOrThrow
 */
export type tbl_loanFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * Filter, which tbl_loan to fetch.
   */
  where?: Prisma.tbl_loanWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_loans to fetch.
   */
  orderBy?: Prisma.tbl_loanOrderByWithRelationInput | Prisma.tbl_loanOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_loans.
   */
  cursor?: Prisma.tbl_loanWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_loans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_loans.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_loans.
   */
  distinct?: Prisma.Tbl_loanScalarFieldEnum | Prisma.Tbl_loanScalarFieldEnum[]
}

/**
 * tbl_loan findMany
 */
export type tbl_loanFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * Filter, which tbl_loans to fetch.
   */
  where?: Prisma.tbl_loanWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_loans to fetch.
   */
  orderBy?: Prisma.tbl_loanOrderByWithRelationInput | Prisma.tbl_loanOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing tbl_loans.
   */
  cursor?: Prisma.tbl_loanWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_loans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_loans.
   */
  skip?: number
  distinct?: Prisma.Tbl_loanScalarFieldEnum | Prisma.Tbl_loanScalarFieldEnum[]
}

/**
 * tbl_loan create
 */
export type tbl_loanCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * The data needed to create a tbl_loan.
   */
  data: Prisma.XOR<Prisma.tbl_loanCreateInput, Prisma.tbl_loanUncheckedCreateInput>
}

/**
 * tbl_loan createMany
 */
export type tbl_loanCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many tbl_loans.
   */
  data: Prisma.tbl_loanCreateManyInput | Prisma.tbl_loanCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * tbl_loan update
 */
export type tbl_loanUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * The data needed to update a tbl_loan.
   */
  data: Prisma.XOR<Prisma.tbl_loanUpdateInput, Prisma.tbl_loanUncheckedUpdateInput>
  /**
   * Choose, which tbl_loan to update.
   */
  where: Prisma.tbl_loanWhereUniqueInput
}

/**
 * tbl_loan updateMany
 */
export type tbl_loanUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update tbl_loans.
   */
  data: Prisma.XOR<Prisma.tbl_loanUpdateManyMutationInput, Prisma.tbl_loanUncheckedUpdateManyInput>
  /**
   * Filter which tbl_loans to update
   */
  where?: Prisma.tbl_loanWhereInput
  /**
   * Limit how many tbl_loans to update.
   */
  limit?: number
}

/**
 * tbl_loan upsert
 */
export type tbl_loanUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * The filter to search for the tbl_loan to update in case it exists.
   */
  where: Prisma.tbl_loanWhereUniqueInput
  /**
   * In case the tbl_loan found by the `where` argument doesn't exist, create a new tbl_loan with this data.
   */
  create: Prisma.XOR<Prisma.tbl_loanCreateInput, Prisma.tbl_loanUncheckedCreateInput>
  /**
   * In case the tbl_loan was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.tbl_loanUpdateInput, Prisma.tbl_loanUncheckedUpdateInput>
}

/**
 * tbl_loan delete
 */
export type tbl_loanDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
  /**
   * Filter which tbl_loan to delete.
   */
  where: Prisma.tbl_loanWhereUniqueInput
}

/**
 * tbl_loan deleteMany
 */
export type tbl_loanDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_loans to delete
   */
  where?: Prisma.tbl_loanWhereInput
  /**
   * Limit how many tbl_loans to delete.
   */
  limit?: number
}

/**
 * tbl_loan.nasso_users
 */
export type tbl_loan$nasso_usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_users
   */
  select?: Prisma.nasso_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_users
   */
  omit?: Prisma.nasso_usersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_usersInclude<ExtArgs> | null
  where?: Prisma.nasso_usersWhereInput
}

/**
 * tbl_loan without action
 */
export type tbl_loanDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_loan
   */
  select?: Prisma.tbl_loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_loan
   */
  omit?: Prisma.tbl_loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tbl_loanInclude<ExtArgs> | null
}
