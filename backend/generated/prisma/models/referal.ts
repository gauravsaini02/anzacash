
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `referal` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model referal
 * 
 */
export type referalModel = runtime.Types.Result.DefaultSelection<Prisma.$referalPayload>

export type AggregateReferal = {
  _count: ReferalCountAggregateOutputType | null
  _avg: ReferalAvgAggregateOutputType | null
  _sum: ReferalSumAggregateOutputType | null
  _min: ReferalMinAggregateOutputType | null
  _max: ReferalMaxAggregateOutputType | null
}

export type ReferalAvgAggregateOutputType = {
  ref_Id: number | null
  r_year: number | null
}

export type ReferalSumAggregateOutputType = {
  ref_Id: number | null
  r_year: number | null
}

export type ReferalMinAggregateOutputType = {
  ref_Id: number | null
  userID: string | null
  user_ref_Id: string | null
  pay_status: string | null
  r_week: string | null
  r_year: number | null
  r_date: string | null
  r_month: string | null
}

export type ReferalMaxAggregateOutputType = {
  ref_Id: number | null
  userID: string | null
  user_ref_Id: string | null
  pay_status: string | null
  r_week: string | null
  r_year: number | null
  r_date: string | null
  r_month: string | null
}

export type ReferalCountAggregateOutputType = {
  ref_Id: number
  userID: number
  user_ref_Id: number
  pay_status: number
  r_week: number
  r_year: number
  r_date: number
  r_month: number
  _all: number
}


export type ReferalAvgAggregateInputType = {
  ref_Id?: true
  r_year?: true
}

export type ReferalSumAggregateInputType = {
  ref_Id?: true
  r_year?: true
}

export type ReferalMinAggregateInputType = {
  ref_Id?: true
  userID?: true
  user_ref_Id?: true
  pay_status?: true
  r_week?: true
  r_year?: true
  r_date?: true
  r_month?: true
}

export type ReferalMaxAggregateInputType = {
  ref_Id?: true
  userID?: true
  user_ref_Id?: true
  pay_status?: true
  r_week?: true
  r_year?: true
  r_date?: true
  r_month?: true
}

export type ReferalCountAggregateInputType = {
  ref_Id?: true
  userID?: true
  user_ref_Id?: true
  pay_status?: true
  r_week?: true
  r_year?: true
  r_date?: true
  r_month?: true
  _all?: true
}

export type ReferalAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which referal to aggregate.
   */
  where?: Prisma.referalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of referals to fetch.
   */
  orderBy?: Prisma.referalOrderByWithRelationInput | Prisma.referalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.referalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` referals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` referals.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned referals
  **/
  _count?: true | ReferalCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ReferalAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ReferalSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ReferalMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ReferalMaxAggregateInputType
}

export type GetReferalAggregateType<T extends ReferalAggregateArgs> = {
      [P in keyof T & keyof AggregateReferal]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateReferal[P]>
    : Prisma.GetScalarType<T[P], AggregateReferal[P]>
}




export type referalGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.referalWhereInput
  orderBy?: Prisma.referalOrderByWithAggregationInput | Prisma.referalOrderByWithAggregationInput[]
  by: Prisma.ReferalScalarFieldEnum[] | Prisma.ReferalScalarFieldEnum
  having?: Prisma.referalScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ReferalCountAggregateInputType | true
  _avg?: ReferalAvgAggregateInputType
  _sum?: ReferalSumAggregateInputType
  _min?: ReferalMinAggregateInputType
  _max?: ReferalMaxAggregateInputType
}

export type ReferalGroupByOutputType = {
  ref_Id: number
  userID: string | null
  user_ref_Id: string | null
  pay_status: string | null
  r_week: string | null
  r_year: number | null
  r_date: string | null
  r_month: string | null
  _count: ReferalCountAggregateOutputType | null
  _avg: ReferalAvgAggregateOutputType | null
  _sum: ReferalSumAggregateOutputType | null
  _min: ReferalMinAggregateOutputType | null
  _max: ReferalMaxAggregateOutputType | null
}

type GetReferalGroupByPayload<T extends referalGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ReferalGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ReferalGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ReferalGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ReferalGroupByOutputType[P]>
      }
    >
  >



export type referalWhereInput = {
  AND?: Prisma.referalWhereInput | Prisma.referalWhereInput[]
  OR?: Prisma.referalWhereInput[]
  NOT?: Prisma.referalWhereInput | Prisma.referalWhereInput[]
  ref_Id?: Prisma.IntFilter<"referal"> | number
  userID?: Prisma.StringNullableFilter<"referal"> | string | null
  user_ref_Id?: Prisma.StringNullableFilter<"referal"> | string | null
  pay_status?: Prisma.StringNullableFilter<"referal"> | string | null
  r_week?: Prisma.StringNullableFilter<"referal"> | string | null
  r_year?: Prisma.IntNullableFilter<"referal"> | number | null
  r_date?: Prisma.StringNullableFilter<"referal"> | string | null
  r_month?: Prisma.StringNullableFilter<"referal"> | string | null
  nasso_users_referal_userIDTonasso_users?: Prisma.XOR<Prisma.Nasso_usersNullableScalarRelationFilter, Prisma.nasso_usersWhereInput> | null
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.XOR<Prisma.Nasso_usersNullableScalarRelationFilter, Prisma.nasso_usersWhereInput> | null
}

export type referalOrderByWithRelationInput = {
  ref_Id?: Prisma.SortOrder
  userID?: Prisma.SortOrderInput | Prisma.SortOrder
  user_ref_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_status?: Prisma.SortOrderInput | Prisma.SortOrder
  r_week?: Prisma.SortOrderInput | Prisma.SortOrder
  r_year?: Prisma.SortOrderInput | Prisma.SortOrder
  r_date?: Prisma.SortOrderInput | Prisma.SortOrder
  r_month?: Prisma.SortOrderInput | Prisma.SortOrder
  nasso_users_referal_userIDTonasso_users?: Prisma.nasso_usersOrderByWithRelationInput
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.nasso_usersOrderByWithRelationInput
  _relevance?: Prisma.referalOrderByRelevanceInput
}

export type referalWhereUniqueInput = Prisma.AtLeast<{
  ref_Id?: number
  AND?: Prisma.referalWhereInput | Prisma.referalWhereInput[]
  OR?: Prisma.referalWhereInput[]
  NOT?: Prisma.referalWhereInput | Prisma.referalWhereInput[]
  userID?: Prisma.StringNullableFilter<"referal"> | string | null
  user_ref_Id?: Prisma.StringNullableFilter<"referal"> | string | null
  pay_status?: Prisma.StringNullableFilter<"referal"> | string | null
  r_week?: Prisma.StringNullableFilter<"referal"> | string | null
  r_year?: Prisma.IntNullableFilter<"referal"> | number | null
  r_date?: Prisma.StringNullableFilter<"referal"> | string | null
  r_month?: Prisma.StringNullableFilter<"referal"> | string | null
  nasso_users_referal_userIDTonasso_users?: Prisma.XOR<Prisma.Nasso_usersNullableScalarRelationFilter, Prisma.nasso_usersWhereInput> | null
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.XOR<Prisma.Nasso_usersNullableScalarRelationFilter, Prisma.nasso_usersWhereInput> | null
}, "ref_Id">

export type referalOrderByWithAggregationInput = {
  ref_Id?: Prisma.SortOrder
  userID?: Prisma.SortOrderInput | Prisma.SortOrder
  user_ref_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_status?: Prisma.SortOrderInput | Prisma.SortOrder
  r_week?: Prisma.SortOrderInput | Prisma.SortOrder
  r_year?: Prisma.SortOrderInput | Prisma.SortOrder
  r_date?: Prisma.SortOrderInput | Prisma.SortOrder
  r_month?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.referalCountOrderByAggregateInput
  _avg?: Prisma.referalAvgOrderByAggregateInput
  _max?: Prisma.referalMaxOrderByAggregateInput
  _min?: Prisma.referalMinOrderByAggregateInput
  _sum?: Prisma.referalSumOrderByAggregateInput
}

export type referalScalarWhereWithAggregatesInput = {
  AND?: Prisma.referalScalarWhereWithAggregatesInput | Prisma.referalScalarWhereWithAggregatesInput[]
  OR?: Prisma.referalScalarWhereWithAggregatesInput[]
  NOT?: Prisma.referalScalarWhereWithAggregatesInput | Prisma.referalScalarWhereWithAggregatesInput[]
  ref_Id?: Prisma.IntWithAggregatesFilter<"referal"> | number
  userID?: Prisma.StringNullableWithAggregatesFilter<"referal"> | string | null
  user_ref_Id?: Prisma.StringNullableWithAggregatesFilter<"referal"> | string | null
  pay_status?: Prisma.StringNullableWithAggregatesFilter<"referal"> | string | null
  r_week?: Prisma.StringNullableWithAggregatesFilter<"referal"> | string | null
  r_year?: Prisma.IntNullableWithAggregatesFilter<"referal"> | number | null
  r_date?: Prisma.StringNullableWithAggregatesFilter<"referal"> | string | null
  r_month?: Prisma.StringNullableWithAggregatesFilter<"referal"> | string | null
}

export type referalCreateInput = {
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
  nasso_users_referal_userIDTonasso_users?: Prisma.nasso_usersCreateNestedOneWithoutReferal_referal_userIDTonasso_usersInput
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.nasso_usersCreateNestedOneWithoutReferal_referal_user_ref_IdTonasso_usersInput
}

export type referalUncheckedCreateInput = {
  ref_Id?: number
  userID?: string | null
  user_ref_Id?: string | null
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
}

export type referalUpdateInput = {
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nasso_users_referal_userIDTonasso_users?: Prisma.nasso_usersUpdateOneWithoutReferal_referal_userIDTonasso_usersNestedInput
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.nasso_usersUpdateOneWithoutReferal_referal_user_ref_IdTonasso_usersNestedInput
}

export type referalUncheckedUpdateInput = {
  ref_Id?: Prisma.IntFieldUpdateOperationsInput | number
  userID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_ref_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type referalCreateManyInput = {
  ref_Id?: number
  userID?: string | null
  user_ref_Id?: string | null
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
}

export type referalUpdateManyMutationInput = {
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type referalUncheckedUpdateManyInput = {
  ref_Id?: Prisma.IntFieldUpdateOperationsInput | number
  userID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_ref_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ReferalListRelationFilter = {
  every?: Prisma.referalWhereInput
  some?: Prisma.referalWhereInput
  none?: Prisma.referalWhereInput
}

export type referalOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type referalOrderByRelevanceInput = {
  fields: Prisma.referalOrderByRelevanceFieldEnum | Prisma.referalOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type referalCountOrderByAggregateInput = {
  ref_Id?: Prisma.SortOrder
  userID?: Prisma.SortOrder
  user_ref_Id?: Prisma.SortOrder
  pay_status?: Prisma.SortOrder
  r_week?: Prisma.SortOrder
  r_year?: Prisma.SortOrder
  r_date?: Prisma.SortOrder
  r_month?: Prisma.SortOrder
}

export type referalAvgOrderByAggregateInput = {
  ref_Id?: Prisma.SortOrder
  r_year?: Prisma.SortOrder
}

export type referalMaxOrderByAggregateInput = {
  ref_Id?: Prisma.SortOrder
  userID?: Prisma.SortOrder
  user_ref_Id?: Prisma.SortOrder
  pay_status?: Prisma.SortOrder
  r_week?: Prisma.SortOrder
  r_year?: Prisma.SortOrder
  r_date?: Prisma.SortOrder
  r_month?: Prisma.SortOrder
}

export type referalMinOrderByAggregateInput = {
  ref_Id?: Prisma.SortOrder
  userID?: Prisma.SortOrder
  user_ref_Id?: Prisma.SortOrder
  pay_status?: Prisma.SortOrder
  r_week?: Prisma.SortOrder
  r_year?: Prisma.SortOrder
  r_date?: Prisma.SortOrder
  r_month?: Prisma.SortOrder
}

export type referalSumOrderByAggregateInput = {
  ref_Id?: Prisma.SortOrder
  r_year?: Prisma.SortOrder
}

export type referalCreateNestedManyWithoutNasso_users_referal_userIDTonasso_usersInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_userIDTonasso_usersInputEnvelope
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
}

export type referalCreateNestedManyWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInputEnvelope
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
}

export type referalUncheckedCreateNestedManyWithoutNasso_users_referal_userIDTonasso_usersInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_userIDTonasso_usersInputEnvelope
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
}

export type referalUncheckedCreateNestedManyWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInputEnvelope
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
}

export type referalUpdateManyWithoutNasso_users_referal_userIDTonasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput[]
  upsert?: Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_userIDTonasso_usersInputEnvelope
  set?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  disconnect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  delete?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  update?: Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput[]
  updateMany?: Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_userIDTonasso_usersInput[]
  deleteMany?: Prisma.referalScalarWhereInput | Prisma.referalScalarWhereInput[]
}

export type referalUpdateManyWithoutNasso_users_referal_user_ref_IdTonasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  upsert?: Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInputEnvelope
  set?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  disconnect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  delete?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  update?: Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  updateMany?: Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  deleteMany?: Prisma.referalScalarWhereInput | Prisma.referalScalarWhereInput[]
}

export type referalUncheckedUpdateManyWithoutNasso_users_referal_userIDTonasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput[]
  upsert?: Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_userIDTonasso_usersInputEnvelope
  set?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  disconnect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  delete?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  update?: Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput[]
  updateMany?: Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_userIDTonasso_usersInput | Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_userIDTonasso_usersInput[]
  deleteMany?: Prisma.referalScalarWhereInput | Prisma.referalScalarWhereInput[]
}

export type referalUncheckedUpdateManyWithoutNasso_users_referal_user_ref_IdTonasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput> | Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[] | Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  connectOrCreate?: Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  upsert?: Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalUpsertWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  createMany?: Prisma.referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInputEnvelope
  set?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  disconnect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  delete?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  connect?: Prisma.referalWhereUniqueInput | Prisma.referalWhereUniqueInput[]
  update?: Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalUpdateWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  updateMany?: Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalUpdateManyWithWhereWithoutNasso_users_referal_user_ref_IdTonasso_usersInput[]
  deleteMany?: Prisma.referalScalarWhereInput | Prisma.referalScalarWhereInput[]
}

export type referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput = {
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.nasso_usersCreateNestedOneWithoutReferal_referal_user_ref_IdTonasso_usersInput
}

export type referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput = {
  ref_Id?: number
  user_ref_Id?: string | null
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
}

export type referalCreateOrConnectWithoutNasso_users_referal_userIDTonasso_usersInput = {
  where: Prisma.referalWhereUniqueInput
  create: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput>
}

export type referalCreateManyNasso_users_referal_userIDTonasso_usersInputEnvelope = {
  data: Prisma.referalCreateManyNasso_users_referal_userIDTonasso_usersInput | Prisma.referalCreateManyNasso_users_referal_userIDTonasso_usersInput[]
  skipDuplicates?: boolean
}

export type referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
  nasso_users_referal_userIDTonasso_users?: Prisma.nasso_usersCreateNestedOneWithoutReferal_referal_userIDTonasso_usersInput
}

export type referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  ref_Id?: number
  userID?: string | null
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
}

export type referalCreateOrConnectWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  where: Prisma.referalWhereUniqueInput
  create: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput>
}

export type referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInputEnvelope = {
  data: Prisma.referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInput | Prisma.referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInput[]
  skipDuplicates?: boolean
}

export type referalUpsertWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput = {
  where: Prisma.referalWhereUniqueInput
  update: Prisma.XOR<Prisma.referalUpdateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedUpdateWithoutNasso_users_referal_userIDTonasso_usersInput>
  create: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_userIDTonasso_usersInput>
}

export type referalUpdateWithWhereUniqueWithoutNasso_users_referal_userIDTonasso_usersInput = {
  where: Prisma.referalWhereUniqueInput
  data: Prisma.XOR<Prisma.referalUpdateWithoutNasso_users_referal_userIDTonasso_usersInput, Prisma.referalUncheckedUpdateWithoutNasso_users_referal_userIDTonasso_usersInput>
}

export type referalUpdateManyWithWhereWithoutNasso_users_referal_userIDTonasso_usersInput = {
  where: Prisma.referalScalarWhereInput
  data: Prisma.XOR<Prisma.referalUpdateManyMutationInput, Prisma.referalUncheckedUpdateManyWithoutNasso_users_referal_userIDTonasso_usersInput>
}

export type referalScalarWhereInput = {
  AND?: Prisma.referalScalarWhereInput | Prisma.referalScalarWhereInput[]
  OR?: Prisma.referalScalarWhereInput[]
  NOT?: Prisma.referalScalarWhereInput | Prisma.referalScalarWhereInput[]
  ref_Id?: Prisma.IntFilter<"referal"> | number
  userID?: Prisma.StringNullableFilter<"referal"> | string | null
  user_ref_Id?: Prisma.StringNullableFilter<"referal"> | string | null
  pay_status?: Prisma.StringNullableFilter<"referal"> | string | null
  r_week?: Prisma.StringNullableFilter<"referal"> | string | null
  r_year?: Prisma.IntNullableFilter<"referal"> | number | null
  r_date?: Prisma.StringNullableFilter<"referal"> | string | null
  r_month?: Prisma.StringNullableFilter<"referal"> | string | null
}

export type referalUpsertWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  where: Prisma.referalWhereUniqueInput
  update: Prisma.XOR<Prisma.referalUpdateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedUpdateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput>
  create: Prisma.XOR<Prisma.referalCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedCreateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput>
}

export type referalUpdateWithWhereUniqueWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  where: Prisma.referalWhereUniqueInput
  data: Prisma.XOR<Prisma.referalUpdateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput, Prisma.referalUncheckedUpdateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput>
}

export type referalUpdateManyWithWhereWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  where: Prisma.referalScalarWhereInput
  data: Prisma.XOR<Prisma.referalUpdateManyMutationInput, Prisma.referalUncheckedUpdateManyWithoutNasso_users_referal_user_ref_IdTonasso_usersInput>
}

export type referalCreateManyNasso_users_referal_userIDTonasso_usersInput = {
  ref_Id?: number
  user_ref_Id?: string | null
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
}

export type referalCreateManyNasso_users_referal_user_ref_IdTonasso_usersInput = {
  ref_Id?: number
  userID?: string | null
  pay_status?: string | null
  r_week?: string | null
  r_year?: number | null
  r_date?: string | null
  r_month?: string | null
}

export type referalUpdateWithoutNasso_users_referal_userIDTonasso_usersInput = {
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nasso_users_referal_user_ref_IdTonasso_users?: Prisma.nasso_usersUpdateOneWithoutReferal_referal_user_ref_IdTonasso_usersNestedInput
}

export type referalUncheckedUpdateWithoutNasso_users_referal_userIDTonasso_usersInput = {
  ref_Id?: Prisma.IntFieldUpdateOperationsInput | number
  user_ref_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type referalUncheckedUpdateManyWithoutNasso_users_referal_userIDTonasso_usersInput = {
  ref_Id?: Prisma.IntFieldUpdateOperationsInput | number
  user_ref_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type referalUpdateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nasso_users_referal_userIDTonasso_users?: Prisma.nasso_usersUpdateOneWithoutReferal_referal_userIDTonasso_usersNestedInput
}

export type referalUncheckedUpdateWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  ref_Id?: Prisma.IntFieldUpdateOperationsInput | number
  userID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type referalUncheckedUpdateManyWithoutNasso_users_referal_user_ref_IdTonasso_usersInput = {
  ref_Id?: Prisma.IntFieldUpdateOperationsInput | number
  userID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_week?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_year?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  r_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  r_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type referalSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ref_Id?: boolean
  userID?: boolean
  user_ref_Id?: boolean
  pay_status?: boolean
  r_week?: boolean
  r_year?: boolean
  r_date?: boolean
  r_month?: boolean
  nasso_users_referal_userIDTonasso_users?: boolean | Prisma.referal$nasso_users_referal_userIDTonasso_usersArgs<ExtArgs>
  nasso_users_referal_user_ref_IdTonasso_users?: boolean | Prisma.referal$nasso_users_referal_user_ref_IdTonasso_usersArgs<ExtArgs>
}, ExtArgs["result"]["referal"]>



export type referalSelectScalar = {
  ref_Id?: boolean
  userID?: boolean
  user_ref_Id?: boolean
  pay_status?: boolean
  r_week?: boolean
  r_year?: boolean
  r_date?: boolean
  r_month?: boolean
}

export type referalOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"ref_Id" | "userID" | "user_ref_Id" | "pay_status" | "r_week" | "r_year" | "r_date" | "r_month", ExtArgs["result"]["referal"]>
export type referalInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  nasso_users_referal_userIDTonasso_users?: boolean | Prisma.referal$nasso_users_referal_userIDTonasso_usersArgs<ExtArgs>
  nasso_users_referal_user_ref_IdTonasso_users?: boolean | Prisma.referal$nasso_users_referal_user_ref_IdTonasso_usersArgs<ExtArgs>
}

export type $referalPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "referal"
  objects: {
    nasso_users_referal_userIDTonasso_users: Prisma.$nasso_usersPayload<ExtArgs> | null
    nasso_users_referal_user_ref_IdTonasso_users: Prisma.$nasso_usersPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    ref_Id: number
    userID: string | null
    user_ref_Id: string | null
    pay_status: string | null
    r_week: string | null
    r_year: number | null
    r_date: string | null
    r_month: string | null
  }, ExtArgs["result"]["referal"]>
  composites: {}
}

export type referalGetPayload<S extends boolean | null | undefined | referalDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$referalPayload, S>

export type referalCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<referalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ReferalCountAggregateInputType | true
  }

export interface referalDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['referal'], meta: { name: 'referal' } }
  /**
   * Find zero or one Referal that matches the filter.
   * @param {referalFindUniqueArgs} args - Arguments to find a Referal
   * @example
   * // Get one Referal
   * const referal = await prisma.referal.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends referalFindUniqueArgs>(args: Prisma.SelectSubset<T, referalFindUniqueArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Referal that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {referalFindUniqueOrThrowArgs} args - Arguments to find a Referal
   * @example
   * // Get one Referal
   * const referal = await prisma.referal.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends referalFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, referalFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Referal that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {referalFindFirstArgs} args - Arguments to find a Referal
   * @example
   * // Get one Referal
   * const referal = await prisma.referal.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends referalFindFirstArgs>(args?: Prisma.SelectSubset<T, referalFindFirstArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Referal that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {referalFindFirstOrThrowArgs} args - Arguments to find a Referal
   * @example
   * // Get one Referal
   * const referal = await prisma.referal.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends referalFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, referalFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Referals that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {referalFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Referals
   * const referals = await prisma.referal.findMany()
   * 
   * // Get first 10 Referals
   * const referals = await prisma.referal.findMany({ take: 10 })
   * 
   * // Only select the `ref_Id`
   * const referalWithRef_IdOnly = await prisma.referal.findMany({ select: { ref_Id: true } })
   * 
   */
  findMany<T extends referalFindManyArgs>(args?: Prisma.SelectSubset<T, referalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Referal.
   * @param {referalCreateArgs} args - Arguments to create a Referal.
   * @example
   * // Create one Referal
   * const Referal = await prisma.referal.create({
   *   data: {
   *     // ... data to create a Referal
   *   }
   * })
   * 
   */
  create<T extends referalCreateArgs>(args: Prisma.SelectSubset<T, referalCreateArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Referals.
   * @param {referalCreateManyArgs} args - Arguments to create many Referals.
   * @example
   * // Create many Referals
   * const referal = await prisma.referal.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends referalCreateManyArgs>(args?: Prisma.SelectSubset<T, referalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Referal.
   * @param {referalDeleteArgs} args - Arguments to delete one Referal.
   * @example
   * // Delete one Referal
   * const Referal = await prisma.referal.delete({
   *   where: {
   *     // ... filter to delete one Referal
   *   }
   * })
   * 
   */
  delete<T extends referalDeleteArgs>(args: Prisma.SelectSubset<T, referalDeleteArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Referal.
   * @param {referalUpdateArgs} args - Arguments to update one Referal.
   * @example
   * // Update one Referal
   * const referal = await prisma.referal.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends referalUpdateArgs>(args: Prisma.SelectSubset<T, referalUpdateArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Referals.
   * @param {referalDeleteManyArgs} args - Arguments to filter Referals to delete.
   * @example
   * // Delete a few Referals
   * const { count } = await prisma.referal.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends referalDeleteManyArgs>(args?: Prisma.SelectSubset<T, referalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Referals.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {referalUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Referals
   * const referal = await prisma.referal.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends referalUpdateManyArgs>(args: Prisma.SelectSubset<T, referalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Referal.
   * @param {referalUpsertArgs} args - Arguments to update or create a Referal.
   * @example
   * // Update or create a Referal
   * const referal = await prisma.referal.upsert({
   *   create: {
   *     // ... data to create a Referal
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Referal we want to update
   *   }
   * })
   */
  upsert<T extends referalUpsertArgs>(args: Prisma.SelectSubset<T, referalUpsertArgs<ExtArgs>>): Prisma.Prisma__referalClient<runtime.Types.Result.GetResult<Prisma.$referalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Referals.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {referalCountArgs} args - Arguments to filter Referals to count.
   * @example
   * // Count the number of Referals
   * const count = await prisma.referal.count({
   *   where: {
   *     // ... the filter for the Referals we want to count
   *   }
   * })
  **/
  count<T extends referalCountArgs>(
    args?: Prisma.Subset<T, referalCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ReferalCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Referal.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ReferalAggregateArgs>(args: Prisma.Subset<T, ReferalAggregateArgs>): Prisma.PrismaPromise<GetReferalAggregateType<T>>

  /**
   * Group by Referal.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {referalGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends referalGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: referalGroupByArgs['orderBy'] }
      : { orderBy?: referalGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, referalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReferalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the referal model
 */
readonly fields: referalFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for referal.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__referalClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  nasso_users_referal_userIDTonasso_users<T extends Prisma.referal$nasso_users_referal_userIDTonasso_usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.referal$nasso_users_referal_userIDTonasso_usersArgs<ExtArgs>>): Prisma.Prisma__nasso_usersClient<runtime.Types.Result.GetResult<Prisma.$nasso_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  nasso_users_referal_user_ref_IdTonasso_users<T extends Prisma.referal$nasso_users_referal_user_ref_IdTonasso_usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.referal$nasso_users_referal_user_ref_IdTonasso_usersArgs<ExtArgs>>): Prisma.Prisma__nasso_usersClient<runtime.Types.Result.GetResult<Prisma.$nasso_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the referal model
 */
export interface referalFieldRefs {
  readonly ref_Id: Prisma.FieldRef<"referal", 'Int'>
  readonly userID: Prisma.FieldRef<"referal", 'String'>
  readonly user_ref_Id: Prisma.FieldRef<"referal", 'String'>
  readonly pay_status: Prisma.FieldRef<"referal", 'String'>
  readonly r_week: Prisma.FieldRef<"referal", 'String'>
  readonly r_year: Prisma.FieldRef<"referal", 'Int'>
  readonly r_date: Prisma.FieldRef<"referal", 'String'>
  readonly r_month: Prisma.FieldRef<"referal", 'String'>
}
    

// Custom InputTypes
/**
 * referal findUnique
 */
export type referalFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * Filter, which referal to fetch.
   */
  where: Prisma.referalWhereUniqueInput
}

/**
 * referal findUniqueOrThrow
 */
export type referalFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * Filter, which referal to fetch.
   */
  where: Prisma.referalWhereUniqueInput
}

/**
 * referal findFirst
 */
export type referalFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * Filter, which referal to fetch.
   */
  where?: Prisma.referalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of referals to fetch.
   */
  orderBy?: Prisma.referalOrderByWithRelationInput | Prisma.referalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for referals.
   */
  cursor?: Prisma.referalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` referals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` referals.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of referals.
   */
  distinct?: Prisma.ReferalScalarFieldEnum | Prisma.ReferalScalarFieldEnum[]
}

/**
 * referal findFirstOrThrow
 */
export type referalFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * Filter, which referal to fetch.
   */
  where?: Prisma.referalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of referals to fetch.
   */
  orderBy?: Prisma.referalOrderByWithRelationInput | Prisma.referalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for referals.
   */
  cursor?: Prisma.referalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` referals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` referals.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of referals.
   */
  distinct?: Prisma.ReferalScalarFieldEnum | Prisma.ReferalScalarFieldEnum[]
}

/**
 * referal findMany
 */
export type referalFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * Filter, which referals to fetch.
   */
  where?: Prisma.referalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of referals to fetch.
   */
  orderBy?: Prisma.referalOrderByWithRelationInput | Prisma.referalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing referals.
   */
  cursor?: Prisma.referalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` referals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` referals.
   */
  skip?: number
  distinct?: Prisma.ReferalScalarFieldEnum | Prisma.ReferalScalarFieldEnum[]
}

/**
 * referal create
 */
export type referalCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * The data needed to create a referal.
   */
  data?: Prisma.XOR<Prisma.referalCreateInput, Prisma.referalUncheckedCreateInput>
}

/**
 * referal createMany
 */
export type referalCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many referals.
   */
  data: Prisma.referalCreateManyInput | Prisma.referalCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * referal update
 */
export type referalUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * The data needed to update a referal.
   */
  data: Prisma.XOR<Prisma.referalUpdateInput, Prisma.referalUncheckedUpdateInput>
  /**
   * Choose, which referal to update.
   */
  where: Prisma.referalWhereUniqueInput
}

/**
 * referal updateMany
 */
export type referalUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update referals.
   */
  data: Prisma.XOR<Prisma.referalUpdateManyMutationInput, Prisma.referalUncheckedUpdateManyInput>
  /**
   * Filter which referals to update
   */
  where?: Prisma.referalWhereInput
  /**
   * Limit how many referals to update.
   */
  limit?: number
}

/**
 * referal upsert
 */
export type referalUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * The filter to search for the referal to update in case it exists.
   */
  where: Prisma.referalWhereUniqueInput
  /**
   * In case the referal found by the `where` argument doesn't exist, create a new referal with this data.
   */
  create: Prisma.XOR<Prisma.referalCreateInput, Prisma.referalUncheckedCreateInput>
  /**
   * In case the referal was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.referalUpdateInput, Prisma.referalUncheckedUpdateInput>
}

/**
 * referal delete
 */
export type referalDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
  /**
   * Filter which referal to delete.
   */
  where: Prisma.referalWhereUniqueInput
}

/**
 * referal deleteMany
 */
export type referalDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which referals to delete
   */
  where?: Prisma.referalWhereInput
  /**
   * Limit how many referals to delete.
   */
  limit?: number
}

/**
 * referal.nasso_users_referal_userIDTonasso_users
 */
export type referal$nasso_users_referal_userIDTonasso_usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_users
   */
  select?: Prisma.nasso_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_users
   */
  omit?: Prisma.nasso_usersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_usersInclude<ExtArgs> | null
  where?: Prisma.nasso_usersWhereInput
}

/**
 * referal.nasso_users_referal_user_ref_IdTonasso_users
 */
export type referal$nasso_users_referal_user_ref_IdTonasso_usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_users
   */
  select?: Prisma.nasso_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_users
   */
  omit?: Prisma.nasso_usersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_usersInclude<ExtArgs> | null
  where?: Prisma.nasso_usersWhereInput
}

/**
 * referal without action
 */
export type referalDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the referal
   */
  select?: Prisma.referalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the referal
   */
  omit?: Prisma.referalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.referalInclude<ExtArgs> | null
}
