
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `tbl_sh_orders` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model tbl_sh_orders
 * 
 */
export type tbl_sh_ordersModel = runtime.Types.Result.DefaultSelection<Prisma.$tbl_sh_ordersPayload>

export type AggregateTbl_sh_orders = {
  _count: Tbl_sh_ordersCountAggregateOutputType | null
  _avg: Tbl_sh_ordersAvgAggregateOutputType | null
  _sum: Tbl_sh_ordersSumAggregateOutputType | null
  _min: Tbl_sh_ordersMinAggregateOutputType | null
  _max: Tbl_sh_ordersMaxAggregateOutputType | null
}

export type Tbl_sh_ordersAvgAggregateOutputType = {
  o_ID: number | null
  o_pro_Id: number | null
  o_user: number | null
  o_idadi: number | null
}

export type Tbl_sh_ordersSumAggregateOutputType = {
  o_ID: number | null
  o_pro_Id: number | null
  o_user: number | null
  o_idadi: number | null
}

export type Tbl_sh_ordersMinAggregateOutputType = {
  o_ID: number | null
  o_pro_Id: number | null
  order_ID: string | null
  o_user: number | null
  o_date: string | null
  oda_status: string | null
  o_idadi: number | null
  o_datetimes: string | null
  o_delivery: string | null
}

export type Tbl_sh_ordersMaxAggregateOutputType = {
  o_ID: number | null
  o_pro_Id: number | null
  order_ID: string | null
  o_user: number | null
  o_date: string | null
  oda_status: string | null
  o_idadi: number | null
  o_datetimes: string | null
  o_delivery: string | null
}

export type Tbl_sh_ordersCountAggregateOutputType = {
  o_ID: number
  o_pro_Id: number
  order_ID: number
  o_user: number
  o_date: number
  oda_status: number
  o_idadi: number
  o_datetimes: number
  o_delivery: number
  _all: number
}


export type Tbl_sh_ordersAvgAggregateInputType = {
  o_ID?: true
  o_pro_Id?: true
  o_user?: true
  o_idadi?: true
}

export type Tbl_sh_ordersSumAggregateInputType = {
  o_ID?: true
  o_pro_Id?: true
  o_user?: true
  o_idadi?: true
}

export type Tbl_sh_ordersMinAggregateInputType = {
  o_ID?: true
  o_pro_Id?: true
  order_ID?: true
  o_user?: true
  o_date?: true
  oda_status?: true
  o_idadi?: true
  o_datetimes?: true
  o_delivery?: true
}

export type Tbl_sh_ordersMaxAggregateInputType = {
  o_ID?: true
  o_pro_Id?: true
  order_ID?: true
  o_user?: true
  o_date?: true
  oda_status?: true
  o_idadi?: true
  o_datetimes?: true
  o_delivery?: true
}

export type Tbl_sh_ordersCountAggregateInputType = {
  o_ID?: true
  o_pro_Id?: true
  order_ID?: true
  o_user?: true
  o_date?: true
  oda_status?: true
  o_idadi?: true
  o_datetimes?: true
  o_delivery?: true
  _all?: true
}

export type Tbl_sh_ordersAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_sh_orders to aggregate.
   */
  where?: Prisma.tbl_sh_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_sh_orders to fetch.
   */
  orderBy?: Prisma.tbl_sh_ordersOrderByWithRelationInput | Prisma.tbl_sh_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.tbl_sh_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_sh_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_sh_orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned tbl_sh_orders
  **/
  _count?: true | Tbl_sh_ordersCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Tbl_sh_ordersAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Tbl_sh_ordersSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Tbl_sh_ordersMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Tbl_sh_ordersMaxAggregateInputType
}

export type GetTbl_sh_ordersAggregateType<T extends Tbl_sh_ordersAggregateArgs> = {
      [P in keyof T & keyof AggregateTbl_sh_orders]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTbl_sh_orders[P]>
    : Prisma.GetScalarType<T[P], AggregateTbl_sh_orders[P]>
}




export type tbl_sh_ordersGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.tbl_sh_ordersWhereInput
  orderBy?: Prisma.tbl_sh_ordersOrderByWithAggregationInput | Prisma.tbl_sh_ordersOrderByWithAggregationInput[]
  by: Prisma.Tbl_sh_ordersScalarFieldEnum[] | Prisma.Tbl_sh_ordersScalarFieldEnum
  having?: Prisma.tbl_sh_ordersScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Tbl_sh_ordersCountAggregateInputType | true
  _avg?: Tbl_sh_ordersAvgAggregateInputType
  _sum?: Tbl_sh_ordersSumAggregateInputType
  _min?: Tbl_sh_ordersMinAggregateInputType
  _max?: Tbl_sh_ordersMaxAggregateInputType
}

export type Tbl_sh_ordersGroupByOutputType = {
  o_ID: number
  o_pro_Id: number | null
  order_ID: string
  o_user: number | null
  o_date: string | null
  oda_status: string | null
  o_idadi: number | null
  o_datetimes: string | null
  o_delivery: string | null
  _count: Tbl_sh_ordersCountAggregateOutputType | null
  _avg: Tbl_sh_ordersAvgAggregateOutputType | null
  _sum: Tbl_sh_ordersSumAggregateOutputType | null
  _min: Tbl_sh_ordersMinAggregateOutputType | null
  _max: Tbl_sh_ordersMaxAggregateOutputType | null
}

type GetTbl_sh_ordersGroupByPayload<T extends tbl_sh_ordersGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Tbl_sh_ordersGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Tbl_sh_ordersGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Tbl_sh_ordersGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Tbl_sh_ordersGroupByOutputType[P]>
      }
    >
  >



export type tbl_sh_ordersWhereInput = {
  AND?: Prisma.tbl_sh_ordersWhereInput | Prisma.tbl_sh_ordersWhereInput[]
  OR?: Prisma.tbl_sh_ordersWhereInput[]
  NOT?: Prisma.tbl_sh_ordersWhereInput | Prisma.tbl_sh_ordersWhereInput[]
  o_ID?: Prisma.IntFilter<"tbl_sh_orders"> | number
  o_pro_Id?: Prisma.IntNullableFilter<"tbl_sh_orders"> | number | null
  order_ID?: Prisma.StringFilter<"tbl_sh_orders"> | string
  o_user?: Prisma.IntNullableFilter<"tbl_sh_orders"> | number | null
  o_date?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
  oda_status?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
  o_idadi?: Prisma.IntNullableFilter<"tbl_sh_orders"> | number | null
  o_datetimes?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
  o_delivery?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
}

export type tbl_sh_ordersOrderByWithRelationInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  order_ID?: Prisma.SortOrder
  o_user?: Prisma.SortOrderInput | Prisma.SortOrder
  o_date?: Prisma.SortOrderInput | Prisma.SortOrder
  oda_status?: Prisma.SortOrderInput | Prisma.SortOrder
  o_idadi?: Prisma.SortOrderInput | Prisma.SortOrder
  o_datetimes?: Prisma.SortOrderInput | Prisma.SortOrder
  o_delivery?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.tbl_sh_ordersOrderByRelevanceInput
}

export type tbl_sh_ordersWhereUniqueInput = Prisma.AtLeast<{
  o_ID?: number
  AND?: Prisma.tbl_sh_ordersWhereInput | Prisma.tbl_sh_ordersWhereInput[]
  OR?: Prisma.tbl_sh_ordersWhereInput[]
  NOT?: Prisma.tbl_sh_ordersWhereInput | Prisma.tbl_sh_ordersWhereInput[]
  o_pro_Id?: Prisma.IntNullableFilter<"tbl_sh_orders"> | number | null
  order_ID?: Prisma.StringFilter<"tbl_sh_orders"> | string
  o_user?: Prisma.IntNullableFilter<"tbl_sh_orders"> | number | null
  o_date?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
  oda_status?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
  o_idadi?: Prisma.IntNullableFilter<"tbl_sh_orders"> | number | null
  o_datetimes?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
  o_delivery?: Prisma.StringNullableFilter<"tbl_sh_orders"> | string | null
}, "o_ID">

export type tbl_sh_ordersOrderByWithAggregationInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  order_ID?: Prisma.SortOrder
  o_user?: Prisma.SortOrderInput | Prisma.SortOrder
  o_date?: Prisma.SortOrderInput | Prisma.SortOrder
  oda_status?: Prisma.SortOrderInput | Prisma.SortOrder
  o_idadi?: Prisma.SortOrderInput | Prisma.SortOrder
  o_datetimes?: Prisma.SortOrderInput | Prisma.SortOrder
  o_delivery?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.tbl_sh_ordersCountOrderByAggregateInput
  _avg?: Prisma.tbl_sh_ordersAvgOrderByAggregateInput
  _max?: Prisma.tbl_sh_ordersMaxOrderByAggregateInput
  _min?: Prisma.tbl_sh_ordersMinOrderByAggregateInput
  _sum?: Prisma.tbl_sh_ordersSumOrderByAggregateInput
}

export type tbl_sh_ordersScalarWhereWithAggregatesInput = {
  AND?: Prisma.tbl_sh_ordersScalarWhereWithAggregatesInput | Prisma.tbl_sh_ordersScalarWhereWithAggregatesInput[]
  OR?: Prisma.tbl_sh_ordersScalarWhereWithAggregatesInput[]
  NOT?: Prisma.tbl_sh_ordersScalarWhereWithAggregatesInput | Prisma.tbl_sh_ordersScalarWhereWithAggregatesInput[]
  o_ID?: Prisma.IntWithAggregatesFilter<"tbl_sh_orders"> | number
  o_pro_Id?: Prisma.IntNullableWithAggregatesFilter<"tbl_sh_orders"> | number | null
  order_ID?: Prisma.StringWithAggregatesFilter<"tbl_sh_orders"> | string
  o_user?: Prisma.IntNullableWithAggregatesFilter<"tbl_sh_orders"> | number | null
  o_date?: Prisma.StringNullableWithAggregatesFilter<"tbl_sh_orders"> | string | null
  oda_status?: Prisma.StringNullableWithAggregatesFilter<"tbl_sh_orders"> | string | null
  o_idadi?: Prisma.IntNullableWithAggregatesFilter<"tbl_sh_orders"> | number | null
  o_datetimes?: Prisma.StringNullableWithAggregatesFilter<"tbl_sh_orders"> | string | null
  o_delivery?: Prisma.StringNullableWithAggregatesFilter<"tbl_sh_orders"> | string | null
}

export type tbl_sh_ordersCreateInput = {
  o_pro_Id?: number | null
  order_ID: string
  o_user?: number | null
  o_date?: string | null
  oda_status?: string | null
  o_idadi?: number | null
  o_datetimes?: string | null
  o_delivery?: string | null
}

export type tbl_sh_ordersUncheckedCreateInput = {
  o_ID?: number
  o_pro_Id?: number | null
  order_ID: string
  o_user?: number | null
  o_date?: string | null
  oda_status?: string | null
  o_idadi?: number | null
  o_datetimes?: string | null
  o_delivery?: string | null
}

export type tbl_sh_ordersUpdateInput = {
  o_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  order_ID?: Prisma.StringFieldUpdateOperationsInput | string
  o_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  oda_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_idadi?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_datetimes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_delivery?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type tbl_sh_ordersUncheckedUpdateInput = {
  o_ID?: Prisma.IntFieldUpdateOperationsInput | number
  o_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  order_ID?: Prisma.StringFieldUpdateOperationsInput | string
  o_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  oda_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_idadi?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_datetimes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_delivery?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type tbl_sh_ordersCreateManyInput = {
  o_ID?: number
  o_pro_Id?: number | null
  order_ID: string
  o_user?: number | null
  o_date?: string | null
  oda_status?: string | null
  o_idadi?: number | null
  o_datetimes?: string | null
  o_delivery?: string | null
}

export type tbl_sh_ordersUpdateManyMutationInput = {
  o_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  order_ID?: Prisma.StringFieldUpdateOperationsInput | string
  o_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  oda_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_idadi?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_datetimes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_delivery?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type tbl_sh_ordersUncheckedUpdateManyInput = {
  o_ID?: Prisma.IntFieldUpdateOperationsInput | number
  o_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  order_ID?: Prisma.StringFieldUpdateOperationsInput | string
  o_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  oda_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_idadi?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  o_datetimes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  o_delivery?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type tbl_sh_ordersOrderByRelevanceInput = {
  fields: Prisma.tbl_sh_ordersOrderByRelevanceFieldEnum | Prisma.tbl_sh_ordersOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type tbl_sh_ordersCountOrderByAggregateInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrder
  order_ID?: Prisma.SortOrder
  o_user?: Prisma.SortOrder
  o_date?: Prisma.SortOrder
  oda_status?: Prisma.SortOrder
  o_idadi?: Prisma.SortOrder
  o_datetimes?: Prisma.SortOrder
  o_delivery?: Prisma.SortOrder
}

export type tbl_sh_ordersAvgOrderByAggregateInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrder
  o_user?: Prisma.SortOrder
  o_idadi?: Prisma.SortOrder
}

export type tbl_sh_ordersMaxOrderByAggregateInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrder
  order_ID?: Prisma.SortOrder
  o_user?: Prisma.SortOrder
  o_date?: Prisma.SortOrder
  oda_status?: Prisma.SortOrder
  o_idadi?: Prisma.SortOrder
  o_datetimes?: Prisma.SortOrder
  o_delivery?: Prisma.SortOrder
}

export type tbl_sh_ordersMinOrderByAggregateInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrder
  order_ID?: Prisma.SortOrder
  o_user?: Prisma.SortOrder
  o_date?: Prisma.SortOrder
  oda_status?: Prisma.SortOrder
  o_idadi?: Prisma.SortOrder
  o_datetimes?: Prisma.SortOrder
  o_delivery?: Prisma.SortOrder
}

export type tbl_sh_ordersSumOrderByAggregateInput = {
  o_ID?: Prisma.SortOrder
  o_pro_Id?: Prisma.SortOrder
  o_user?: Prisma.SortOrder
  o_idadi?: Prisma.SortOrder
}



export type tbl_sh_ordersSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  o_ID?: boolean
  o_pro_Id?: boolean
  order_ID?: boolean
  o_user?: boolean
  o_date?: boolean
  oda_status?: boolean
  o_idadi?: boolean
  o_datetimes?: boolean
  o_delivery?: boolean
}, ExtArgs["result"]["tbl_sh_orders"]>



export type tbl_sh_ordersSelectScalar = {
  o_ID?: boolean
  o_pro_Id?: boolean
  order_ID?: boolean
  o_user?: boolean
  o_date?: boolean
  oda_status?: boolean
  o_idadi?: boolean
  o_datetimes?: boolean
  o_delivery?: boolean
}

export type tbl_sh_ordersOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"o_ID" | "o_pro_Id" | "order_ID" | "o_user" | "o_date" | "oda_status" | "o_idadi" | "o_datetimes" | "o_delivery", ExtArgs["result"]["tbl_sh_orders"]>

export type $tbl_sh_ordersPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "tbl_sh_orders"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    o_ID: number
    o_pro_Id: number | null
    order_ID: string
    o_user: number | null
    o_date: string | null
    oda_status: string | null
    o_idadi: number | null
    o_datetimes: string | null
    o_delivery: string | null
  }, ExtArgs["result"]["tbl_sh_orders"]>
  composites: {}
}

export type tbl_sh_ordersGetPayload<S extends boolean | null | undefined | tbl_sh_ordersDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload, S>

export type tbl_sh_ordersCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<tbl_sh_ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Tbl_sh_ordersCountAggregateInputType | true
  }

export interface tbl_sh_ordersDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_sh_orders'], meta: { name: 'tbl_sh_orders' } }
  /**
   * Find zero or one Tbl_sh_orders that matches the filter.
   * @param {tbl_sh_ordersFindUniqueArgs} args - Arguments to find a Tbl_sh_orders
   * @example
   * // Get one Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends tbl_sh_ordersFindUniqueArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersFindUniqueArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Tbl_sh_orders that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {tbl_sh_ordersFindUniqueOrThrowArgs} args - Arguments to find a Tbl_sh_orders
   * @example
   * // Get one Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends tbl_sh_ordersFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_sh_orders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_sh_ordersFindFirstArgs} args - Arguments to find a Tbl_sh_orders
   * @example
   * // Get one Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends tbl_sh_ordersFindFirstArgs>(args?: Prisma.SelectSubset<T, tbl_sh_ordersFindFirstArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_sh_orders that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_sh_ordersFindFirstOrThrowArgs} args - Arguments to find a Tbl_sh_orders
   * @example
   * // Get one Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends tbl_sh_ordersFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, tbl_sh_ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Tbl_sh_orders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_sh_ordersFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.findMany()
   * 
   * // Get first 10 Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.findMany({ take: 10 })
   * 
   * // Only select the `o_ID`
   * const tbl_sh_ordersWithO_IDOnly = await prisma.tbl_sh_orders.findMany({ select: { o_ID: true } })
   * 
   */
  findMany<T extends tbl_sh_ordersFindManyArgs>(args?: Prisma.SelectSubset<T, tbl_sh_ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Tbl_sh_orders.
   * @param {tbl_sh_ordersCreateArgs} args - Arguments to create a Tbl_sh_orders.
   * @example
   * // Create one Tbl_sh_orders
   * const Tbl_sh_orders = await prisma.tbl_sh_orders.create({
   *   data: {
   *     // ... data to create a Tbl_sh_orders
   *   }
   * })
   * 
   */
  create<T extends tbl_sh_ordersCreateArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersCreateArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Tbl_sh_orders.
   * @param {tbl_sh_ordersCreateManyArgs} args - Arguments to create many Tbl_sh_orders.
   * @example
   * // Create many Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends tbl_sh_ordersCreateManyArgs>(args?: Prisma.SelectSubset<T, tbl_sh_ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Tbl_sh_orders.
   * @param {tbl_sh_ordersDeleteArgs} args - Arguments to delete one Tbl_sh_orders.
   * @example
   * // Delete one Tbl_sh_orders
   * const Tbl_sh_orders = await prisma.tbl_sh_orders.delete({
   *   where: {
   *     // ... filter to delete one Tbl_sh_orders
   *   }
   * })
   * 
   */
  delete<T extends tbl_sh_ordersDeleteArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersDeleteArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Tbl_sh_orders.
   * @param {tbl_sh_ordersUpdateArgs} args - Arguments to update one Tbl_sh_orders.
   * @example
   * // Update one Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends tbl_sh_ordersUpdateArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersUpdateArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Tbl_sh_orders.
   * @param {tbl_sh_ordersDeleteManyArgs} args - Arguments to filter Tbl_sh_orders to delete.
   * @example
   * // Delete a few Tbl_sh_orders
   * const { count } = await prisma.tbl_sh_orders.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends tbl_sh_ordersDeleteManyArgs>(args?: Prisma.SelectSubset<T, tbl_sh_ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Tbl_sh_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_sh_ordersUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends tbl_sh_ordersUpdateManyArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Tbl_sh_orders.
   * @param {tbl_sh_ordersUpsertArgs} args - Arguments to update or create a Tbl_sh_orders.
   * @example
   * // Update or create a Tbl_sh_orders
   * const tbl_sh_orders = await prisma.tbl_sh_orders.upsert({
   *   create: {
   *     // ... data to create a Tbl_sh_orders
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Tbl_sh_orders we want to update
   *   }
   * })
   */
  upsert<T extends tbl_sh_ordersUpsertArgs>(args: Prisma.SelectSubset<T, tbl_sh_ordersUpsertArgs<ExtArgs>>): Prisma.Prisma__tbl_sh_ordersClient<runtime.Types.Result.GetResult<Prisma.$tbl_sh_ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Tbl_sh_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_sh_ordersCountArgs} args - Arguments to filter Tbl_sh_orders to count.
   * @example
   * // Count the number of Tbl_sh_orders
   * const count = await prisma.tbl_sh_orders.count({
   *   where: {
   *     // ... the filter for the Tbl_sh_orders we want to count
   *   }
   * })
  **/
  count<T extends tbl_sh_ordersCountArgs>(
    args?: Prisma.Subset<T, tbl_sh_ordersCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Tbl_sh_ordersCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Tbl_sh_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Tbl_sh_ordersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Tbl_sh_ordersAggregateArgs>(args: Prisma.Subset<T, Tbl_sh_ordersAggregateArgs>): Prisma.PrismaPromise<GetTbl_sh_ordersAggregateType<T>>

  /**
   * Group by Tbl_sh_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_sh_ordersGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends tbl_sh_ordersGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: tbl_sh_ordersGroupByArgs['orderBy'] }
      : { orderBy?: tbl_sh_ordersGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, tbl_sh_ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_sh_ordersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the tbl_sh_orders model
 */
readonly fields: tbl_sh_ordersFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for tbl_sh_orders.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__tbl_sh_ordersClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the tbl_sh_orders model
 */
export interface tbl_sh_ordersFieldRefs {
  readonly o_ID: Prisma.FieldRef<"tbl_sh_orders", 'Int'>
  readonly o_pro_Id: Prisma.FieldRef<"tbl_sh_orders", 'Int'>
  readonly order_ID: Prisma.FieldRef<"tbl_sh_orders", 'String'>
  readonly o_user: Prisma.FieldRef<"tbl_sh_orders", 'Int'>
  readonly o_date: Prisma.FieldRef<"tbl_sh_orders", 'String'>
  readonly oda_status: Prisma.FieldRef<"tbl_sh_orders", 'String'>
  readonly o_idadi: Prisma.FieldRef<"tbl_sh_orders", 'Int'>
  readonly o_datetimes: Prisma.FieldRef<"tbl_sh_orders", 'String'>
  readonly o_delivery: Prisma.FieldRef<"tbl_sh_orders", 'String'>
}
    

// Custom InputTypes
/**
 * tbl_sh_orders findUnique
 */
export type tbl_sh_ordersFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * Filter, which tbl_sh_orders to fetch.
   */
  where: Prisma.tbl_sh_ordersWhereUniqueInput
}

/**
 * tbl_sh_orders findUniqueOrThrow
 */
export type tbl_sh_ordersFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * Filter, which tbl_sh_orders to fetch.
   */
  where: Prisma.tbl_sh_ordersWhereUniqueInput
}

/**
 * tbl_sh_orders findFirst
 */
export type tbl_sh_ordersFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * Filter, which tbl_sh_orders to fetch.
   */
  where?: Prisma.tbl_sh_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_sh_orders to fetch.
   */
  orderBy?: Prisma.tbl_sh_ordersOrderByWithRelationInput | Prisma.tbl_sh_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_sh_orders.
   */
  cursor?: Prisma.tbl_sh_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_sh_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_sh_orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_sh_orders.
   */
  distinct?: Prisma.Tbl_sh_ordersScalarFieldEnum | Prisma.Tbl_sh_ordersScalarFieldEnum[]
}

/**
 * tbl_sh_orders findFirstOrThrow
 */
export type tbl_sh_ordersFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * Filter, which tbl_sh_orders to fetch.
   */
  where?: Prisma.tbl_sh_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_sh_orders to fetch.
   */
  orderBy?: Prisma.tbl_sh_ordersOrderByWithRelationInput | Prisma.tbl_sh_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_sh_orders.
   */
  cursor?: Prisma.tbl_sh_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_sh_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_sh_orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_sh_orders.
   */
  distinct?: Prisma.Tbl_sh_ordersScalarFieldEnum | Prisma.Tbl_sh_ordersScalarFieldEnum[]
}

/**
 * tbl_sh_orders findMany
 */
export type tbl_sh_ordersFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * Filter, which tbl_sh_orders to fetch.
   */
  where?: Prisma.tbl_sh_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_sh_orders to fetch.
   */
  orderBy?: Prisma.tbl_sh_ordersOrderByWithRelationInput | Prisma.tbl_sh_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing tbl_sh_orders.
   */
  cursor?: Prisma.tbl_sh_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_sh_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_sh_orders.
   */
  skip?: number
  distinct?: Prisma.Tbl_sh_ordersScalarFieldEnum | Prisma.Tbl_sh_ordersScalarFieldEnum[]
}

/**
 * tbl_sh_orders create
 */
export type tbl_sh_ordersCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * The data needed to create a tbl_sh_orders.
   */
  data: Prisma.XOR<Prisma.tbl_sh_ordersCreateInput, Prisma.tbl_sh_ordersUncheckedCreateInput>
}

/**
 * tbl_sh_orders createMany
 */
export type tbl_sh_ordersCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many tbl_sh_orders.
   */
  data: Prisma.tbl_sh_ordersCreateManyInput | Prisma.tbl_sh_ordersCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * tbl_sh_orders update
 */
export type tbl_sh_ordersUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * The data needed to update a tbl_sh_orders.
   */
  data: Prisma.XOR<Prisma.tbl_sh_ordersUpdateInput, Prisma.tbl_sh_ordersUncheckedUpdateInput>
  /**
   * Choose, which tbl_sh_orders to update.
   */
  where: Prisma.tbl_sh_ordersWhereUniqueInput
}

/**
 * tbl_sh_orders updateMany
 */
export type tbl_sh_ordersUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update tbl_sh_orders.
   */
  data: Prisma.XOR<Prisma.tbl_sh_ordersUpdateManyMutationInput, Prisma.tbl_sh_ordersUncheckedUpdateManyInput>
  /**
   * Filter which tbl_sh_orders to update
   */
  where?: Prisma.tbl_sh_ordersWhereInput
  /**
   * Limit how many tbl_sh_orders to update.
   */
  limit?: number
}

/**
 * tbl_sh_orders upsert
 */
export type tbl_sh_ordersUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * The filter to search for the tbl_sh_orders to update in case it exists.
   */
  where: Prisma.tbl_sh_ordersWhereUniqueInput
  /**
   * In case the tbl_sh_orders found by the `where` argument doesn't exist, create a new tbl_sh_orders with this data.
   */
  create: Prisma.XOR<Prisma.tbl_sh_ordersCreateInput, Prisma.tbl_sh_ordersUncheckedCreateInput>
  /**
   * In case the tbl_sh_orders was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.tbl_sh_ordersUpdateInput, Prisma.tbl_sh_ordersUncheckedUpdateInput>
}

/**
 * tbl_sh_orders delete
 */
export type tbl_sh_ordersDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
  /**
   * Filter which tbl_sh_orders to delete.
   */
  where: Prisma.tbl_sh_ordersWhereUniqueInput
}

/**
 * tbl_sh_orders deleteMany
 */
export type tbl_sh_ordersDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_sh_orders to delete
   */
  where?: Prisma.tbl_sh_ordersWhereInput
  /**
   * Limit how many tbl_sh_orders to delete.
   */
  limit?: number
}

/**
 * tbl_sh_orders without action
 */
export type tbl_sh_ordersDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_sh_orders
   */
  select?: Prisma.tbl_sh_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_sh_orders
   */
  omit?: Prisma.tbl_sh_ordersOmit<ExtArgs> | null
}
