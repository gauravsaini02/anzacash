
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `nasso_accounts` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model nasso_accounts
 * 
 */
export type nasso_accountsModel = runtime.Types.Result.DefaultSelection<Prisma.$nasso_accountsPayload>

export type AggregateNasso_accounts = {
  _count: Nasso_accountsCountAggregateOutputType | null
  _avg: Nasso_accountsAvgAggregateOutputType | null
  _sum: Nasso_accountsSumAggregateOutputType | null
  _min: Nasso_accountsMinAggregateOutputType | null
  _max: Nasso_accountsMaxAggregateOutputType | null
}

export type Nasso_accountsAvgAggregateOutputType = {
  ac_Id: number | null
  ac_bonus: number | null
  ac_profit: number | null
  ac_withdraw: number | null
  ac_spin: number | null
  ac_video: number | null
  ac_trivia: number | null
  ac_status: number | null
  ac_balance: number | null
  ac_expense: number | null
  ac_media: number | null
  ac_mshahara: number | null
  ac_ads: number | null
  task_balance: number | null
  task_withdraw: number | null
  aff_balance: number | null
}

export type Nasso_accountsSumAggregateOutputType = {
  ac_Id: number | null
  ac_bonus: bigint | null
  ac_profit: bigint | null
  ac_withdraw: bigint | null
  ac_spin: bigint | null
  ac_video: bigint | null
  ac_trivia: bigint | null
  ac_status: bigint | null
  ac_balance: bigint | null
  ac_expense: bigint | null
  ac_media: bigint | null
  ac_mshahara: bigint | null
  ac_ads: bigint | null
  task_balance: bigint | null
  task_withdraw: number | null
  aff_balance: number | null
}

export type Nasso_accountsMinAggregateOutputType = {
  ac_Id: number | null
  ac_usr: string | null
  ac_bonus: bigint | null
  ac_profit: bigint | null
  ac_withdraw: bigint | null
  ac_spin: bigint | null
  ac_video: bigint | null
  ac_trivia: bigint | null
  ac_status: bigint | null
  ac_balance: bigint | null
  ac_expense: bigint | null
  ac_media: bigint | null
  ac_mshahara: bigint | null
  paid_month: string | null
  ac_ads: bigint | null
  task_balance: bigint | null
  task_withdraw: number | null
  aff_balance: number | null
}

export type Nasso_accountsMaxAggregateOutputType = {
  ac_Id: number | null
  ac_usr: string | null
  ac_bonus: bigint | null
  ac_profit: bigint | null
  ac_withdraw: bigint | null
  ac_spin: bigint | null
  ac_video: bigint | null
  ac_trivia: bigint | null
  ac_status: bigint | null
  ac_balance: bigint | null
  ac_expense: bigint | null
  ac_media: bigint | null
  ac_mshahara: bigint | null
  paid_month: string | null
  ac_ads: bigint | null
  task_balance: bigint | null
  task_withdraw: number | null
  aff_balance: number | null
}

export type Nasso_accountsCountAggregateOutputType = {
  ac_Id: number
  ac_usr: number
  ac_bonus: number
  ac_profit: number
  ac_withdraw: number
  ac_spin: number
  ac_video: number
  ac_trivia: number
  ac_status: number
  ac_balance: number
  ac_expense: number
  ac_media: number
  ac_mshahara: number
  paid_month: number
  ac_ads: number
  task_balance: number
  task_withdraw: number
  aff_balance: number
  _all: number
}


export type Nasso_accountsAvgAggregateInputType = {
  ac_Id?: true
  ac_bonus?: true
  ac_profit?: true
  ac_withdraw?: true
  ac_spin?: true
  ac_video?: true
  ac_trivia?: true
  ac_status?: true
  ac_balance?: true
  ac_expense?: true
  ac_media?: true
  ac_mshahara?: true
  ac_ads?: true
  task_balance?: true
  task_withdraw?: true
  aff_balance?: true
}

export type Nasso_accountsSumAggregateInputType = {
  ac_Id?: true
  ac_bonus?: true
  ac_profit?: true
  ac_withdraw?: true
  ac_spin?: true
  ac_video?: true
  ac_trivia?: true
  ac_status?: true
  ac_balance?: true
  ac_expense?: true
  ac_media?: true
  ac_mshahara?: true
  ac_ads?: true
  task_balance?: true
  task_withdraw?: true
  aff_balance?: true
}

export type Nasso_accountsMinAggregateInputType = {
  ac_Id?: true
  ac_usr?: true
  ac_bonus?: true
  ac_profit?: true
  ac_withdraw?: true
  ac_spin?: true
  ac_video?: true
  ac_trivia?: true
  ac_status?: true
  ac_balance?: true
  ac_expense?: true
  ac_media?: true
  ac_mshahara?: true
  paid_month?: true
  ac_ads?: true
  task_balance?: true
  task_withdraw?: true
  aff_balance?: true
}

export type Nasso_accountsMaxAggregateInputType = {
  ac_Id?: true
  ac_usr?: true
  ac_bonus?: true
  ac_profit?: true
  ac_withdraw?: true
  ac_spin?: true
  ac_video?: true
  ac_trivia?: true
  ac_status?: true
  ac_balance?: true
  ac_expense?: true
  ac_media?: true
  ac_mshahara?: true
  paid_month?: true
  ac_ads?: true
  task_balance?: true
  task_withdraw?: true
  aff_balance?: true
}

export type Nasso_accountsCountAggregateInputType = {
  ac_Id?: true
  ac_usr?: true
  ac_bonus?: true
  ac_profit?: true
  ac_withdraw?: true
  ac_spin?: true
  ac_video?: true
  ac_trivia?: true
  ac_status?: true
  ac_balance?: true
  ac_expense?: true
  ac_media?: true
  ac_mshahara?: true
  paid_month?: true
  ac_ads?: true
  task_balance?: true
  task_withdraw?: true
  aff_balance?: true
  _all?: true
}

export type Nasso_accountsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which nasso_accounts to aggregate.
   */
  where?: Prisma.nasso_accountsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_accounts to fetch.
   */
  orderBy?: Prisma.nasso_accountsOrderByWithRelationInput | Prisma.nasso_accountsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.nasso_accountsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_accounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned nasso_accounts
  **/
  _count?: true | Nasso_accountsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Nasso_accountsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Nasso_accountsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Nasso_accountsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Nasso_accountsMaxAggregateInputType
}

export type GetNasso_accountsAggregateType<T extends Nasso_accountsAggregateArgs> = {
      [P in keyof T & keyof AggregateNasso_accounts]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateNasso_accounts[P]>
    : Prisma.GetScalarType<T[P], AggregateNasso_accounts[P]>
}




export type nasso_accountsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.nasso_accountsWhereInput
  orderBy?: Prisma.nasso_accountsOrderByWithAggregationInput | Prisma.nasso_accountsOrderByWithAggregationInput[]
  by: Prisma.Nasso_accountsScalarFieldEnum[] | Prisma.Nasso_accountsScalarFieldEnum
  having?: Prisma.nasso_accountsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Nasso_accountsCountAggregateInputType | true
  _avg?: Nasso_accountsAvgAggregateInputType
  _sum?: Nasso_accountsSumAggregateInputType
  _min?: Nasso_accountsMinAggregateInputType
  _max?: Nasso_accountsMaxAggregateInputType
}

export type Nasso_accountsGroupByOutputType = {
  ac_Id: number
  ac_usr: string
  ac_bonus: bigint
  ac_profit: bigint
  ac_withdraw: bigint
  ac_spin: bigint
  ac_video: bigint
  ac_trivia: bigint
  ac_status: bigint
  ac_balance: bigint
  ac_expense: bigint
  ac_media: bigint
  ac_mshahara: bigint | null
  paid_month: string | null
  ac_ads: bigint
  task_balance: bigint
  task_withdraw: number
  aff_balance: number | null
  _count: Nasso_accountsCountAggregateOutputType | null
  _avg: Nasso_accountsAvgAggregateOutputType | null
  _sum: Nasso_accountsSumAggregateOutputType | null
  _min: Nasso_accountsMinAggregateOutputType | null
  _max: Nasso_accountsMaxAggregateOutputType | null
}

type GetNasso_accountsGroupByPayload<T extends nasso_accountsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Nasso_accountsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Nasso_accountsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Nasso_accountsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Nasso_accountsGroupByOutputType[P]>
      }
    >
  >



export type nasso_accountsWhereInput = {
  AND?: Prisma.nasso_accountsWhereInput | Prisma.nasso_accountsWhereInput[]
  OR?: Prisma.nasso_accountsWhereInput[]
  NOT?: Prisma.nasso_accountsWhereInput | Prisma.nasso_accountsWhereInput[]
  ac_Id?: Prisma.IntFilter<"nasso_accounts"> | number
  ac_usr?: Prisma.StringFilter<"nasso_accounts"> | string
  ac_bonus?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_profit?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_withdraw?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_spin?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_video?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_trivia?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_status?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_balance?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_expense?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_media?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_mshahara?: Prisma.BigIntNullableFilter<"nasso_accounts"> | bigint | number | null
  paid_month?: Prisma.StringNullableFilter<"nasso_accounts"> | string | null
  ac_ads?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  task_balance?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  task_withdraw?: Prisma.FloatFilter<"nasso_accounts"> | number
  aff_balance?: Prisma.FloatNullableFilter<"nasso_accounts"> | number | null
  nasso_users?: Prisma.XOR<Prisma.Nasso_usersScalarRelationFilter, Prisma.nasso_usersWhereInput>
}

export type nasso_accountsOrderByWithRelationInput = {
  ac_Id?: Prisma.SortOrder
  ac_usr?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_month?: Prisma.SortOrderInput | Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrderInput | Prisma.SortOrder
  nasso_users?: Prisma.nasso_usersOrderByWithRelationInput
  _relevance?: Prisma.nasso_accountsOrderByRelevanceInput
}

export type nasso_accountsWhereUniqueInput = Prisma.AtLeast<{
  ac_Id?: number
  AND?: Prisma.nasso_accountsWhereInput | Prisma.nasso_accountsWhereInput[]
  OR?: Prisma.nasso_accountsWhereInput[]
  NOT?: Prisma.nasso_accountsWhereInput | Prisma.nasso_accountsWhereInput[]
  ac_usr?: Prisma.StringFilter<"nasso_accounts"> | string
  ac_bonus?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_profit?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_withdraw?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_spin?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_video?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_trivia?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_status?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_balance?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_expense?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_media?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_mshahara?: Prisma.BigIntNullableFilter<"nasso_accounts"> | bigint | number | null
  paid_month?: Prisma.StringNullableFilter<"nasso_accounts"> | string | null
  ac_ads?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  task_balance?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  task_withdraw?: Prisma.FloatFilter<"nasso_accounts"> | number
  aff_balance?: Prisma.FloatNullableFilter<"nasso_accounts"> | number | null
  nasso_users?: Prisma.XOR<Prisma.Nasso_usersScalarRelationFilter, Prisma.nasso_usersWhereInput>
}, "ac_Id">

export type nasso_accountsOrderByWithAggregationInput = {
  ac_Id?: Prisma.SortOrder
  ac_usr?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_month?: Prisma.SortOrderInput | Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.nasso_accountsCountOrderByAggregateInput
  _avg?: Prisma.nasso_accountsAvgOrderByAggregateInput
  _max?: Prisma.nasso_accountsMaxOrderByAggregateInput
  _min?: Prisma.nasso_accountsMinOrderByAggregateInput
  _sum?: Prisma.nasso_accountsSumOrderByAggregateInput
}

export type nasso_accountsScalarWhereWithAggregatesInput = {
  AND?: Prisma.nasso_accountsScalarWhereWithAggregatesInput | Prisma.nasso_accountsScalarWhereWithAggregatesInput[]
  OR?: Prisma.nasso_accountsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.nasso_accountsScalarWhereWithAggregatesInput | Prisma.nasso_accountsScalarWhereWithAggregatesInput[]
  ac_Id?: Prisma.IntWithAggregatesFilter<"nasso_accounts"> | number
  ac_usr?: Prisma.StringWithAggregatesFilter<"nasso_accounts"> | string
  ac_bonus?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_profit?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_withdraw?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_spin?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_video?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_trivia?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_status?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_balance?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_expense?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_media?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  ac_mshahara?: Prisma.BigIntNullableWithAggregatesFilter<"nasso_accounts"> | bigint | number | null
  paid_month?: Prisma.StringNullableWithAggregatesFilter<"nasso_accounts"> | string | null
  ac_ads?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  task_balance?: Prisma.BigIntWithAggregatesFilter<"nasso_accounts"> | bigint | number
  task_withdraw?: Prisma.FloatWithAggregatesFilter<"nasso_accounts"> | number
  aff_balance?: Prisma.FloatNullableWithAggregatesFilter<"nasso_accounts"> | number | null
}

export type nasso_accountsCreateInput = {
  ac_bonus?: bigint | number
  ac_profit?: bigint | number
  ac_withdraw?: bigint | number
  ac_spin?: bigint | number
  ac_video?: bigint | number
  ac_trivia?: bigint | number
  ac_status?: bigint | number
  ac_balance?: bigint | number
  ac_expense?: bigint | number
  ac_media?: bigint | number
  ac_mshahara?: bigint | number | null
  paid_month?: string | null
  ac_ads?: bigint | number
  task_balance?: bigint | number
  task_withdraw?: number
  aff_balance?: number | null
  nasso_users?: Prisma.nasso_usersCreateNestedOneWithoutNasso_accountsInput
}

export type nasso_accountsUncheckedCreateInput = {
  ac_Id?: number
  ac_usr?: string
  ac_bonus?: bigint | number
  ac_profit?: bigint | number
  ac_withdraw?: bigint | number
  ac_spin?: bigint | number
  ac_video?: bigint | number
  ac_trivia?: bigint | number
  ac_status?: bigint | number
  ac_balance?: bigint | number
  ac_expense?: bigint | number
  ac_media?: bigint | number
  ac_mshahara?: bigint | number | null
  paid_month?: string | null
  ac_ads?: bigint | number
  task_balance?: bigint | number
  task_withdraw?: number
  aff_balance?: number | null
}

export type nasso_accountsUpdateInput = {
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nasso_users?: Prisma.nasso_usersUpdateOneRequiredWithoutNasso_accountsNestedInput
}

export type nasso_accountsUncheckedUpdateInput = {
  ac_Id?: Prisma.IntFieldUpdateOperationsInput | number
  ac_usr?: Prisma.StringFieldUpdateOperationsInput | string
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
}

export type nasso_accountsCreateManyInput = {
  ac_Id?: number
  ac_usr?: string
  ac_bonus?: bigint | number
  ac_profit?: bigint | number
  ac_withdraw?: bigint | number
  ac_spin?: bigint | number
  ac_video?: bigint | number
  ac_trivia?: bigint | number
  ac_status?: bigint | number
  ac_balance?: bigint | number
  ac_expense?: bigint | number
  ac_media?: bigint | number
  ac_mshahara?: bigint | number | null
  paid_month?: string | null
  ac_ads?: bigint | number
  task_balance?: bigint | number
  task_withdraw?: number
  aff_balance?: number | null
}

export type nasso_accountsUpdateManyMutationInput = {
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
}

export type nasso_accountsUncheckedUpdateManyInput = {
  ac_Id?: Prisma.IntFieldUpdateOperationsInput | number
  ac_usr?: Prisma.StringFieldUpdateOperationsInput | string
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
}

export type nasso_accountsOrderByRelevanceInput = {
  fields: Prisma.nasso_accountsOrderByRelevanceFieldEnum | Prisma.nasso_accountsOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type nasso_accountsCountOrderByAggregateInput = {
  ac_Id?: Prisma.SortOrder
  ac_usr?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrder
  paid_month?: Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrder
}

export type nasso_accountsAvgOrderByAggregateInput = {
  ac_Id?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrder
}

export type nasso_accountsMaxOrderByAggregateInput = {
  ac_Id?: Prisma.SortOrder
  ac_usr?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrder
  paid_month?: Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrder
}

export type nasso_accountsMinOrderByAggregateInput = {
  ac_Id?: Prisma.SortOrder
  ac_usr?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrder
  paid_month?: Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrder
}

export type nasso_accountsSumOrderByAggregateInput = {
  ac_Id?: Prisma.SortOrder
  ac_bonus?: Prisma.SortOrder
  ac_profit?: Prisma.SortOrder
  ac_withdraw?: Prisma.SortOrder
  ac_spin?: Prisma.SortOrder
  ac_video?: Prisma.SortOrder
  ac_trivia?: Prisma.SortOrder
  ac_status?: Prisma.SortOrder
  ac_balance?: Prisma.SortOrder
  ac_expense?: Prisma.SortOrder
  ac_media?: Prisma.SortOrder
  ac_mshahara?: Prisma.SortOrder
  ac_ads?: Prisma.SortOrder
  task_balance?: Prisma.SortOrder
  task_withdraw?: Prisma.SortOrder
  aff_balance?: Prisma.SortOrder
}

export type Nasso_accountsListRelationFilter = {
  every?: Prisma.nasso_accountsWhereInput
  some?: Prisma.nasso_accountsWhereInput
  none?: Prisma.nasso_accountsWhereInput
}

export type nasso_accountsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type BigIntFieldUpdateOperationsInput = {
  set?: bigint | number
  increment?: bigint | number
  decrement?: bigint | number
  multiply?: bigint | number
  divide?: bigint | number
}

export type NullableBigIntFieldUpdateOperationsInput = {
  set?: bigint | number | null
  increment?: bigint | number
  decrement?: bigint | number
  multiply?: bigint | number
  divide?: bigint | number
}

export type NullableFloatFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type nasso_accountsCreateNestedManyWithoutNasso_usersInput = {
  create?: Prisma.XOR<Prisma.nasso_accountsCreateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput> | Prisma.nasso_accountsCreateWithoutNasso_usersInput[] | Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput | Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput[]
  createMany?: Prisma.nasso_accountsCreateManyNasso_usersInputEnvelope
  connect?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
}

export type nasso_accountsUncheckedCreateNestedManyWithoutNasso_usersInput = {
  create?: Prisma.XOR<Prisma.nasso_accountsCreateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput> | Prisma.nasso_accountsCreateWithoutNasso_usersInput[] | Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput | Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput[]
  createMany?: Prisma.nasso_accountsCreateManyNasso_usersInputEnvelope
  connect?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
}

export type nasso_accountsUpdateManyWithoutNasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.nasso_accountsCreateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput> | Prisma.nasso_accountsCreateWithoutNasso_usersInput[] | Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput | Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput[]
  upsert?: Prisma.nasso_accountsUpsertWithWhereUniqueWithoutNasso_usersInput | Prisma.nasso_accountsUpsertWithWhereUniqueWithoutNasso_usersInput[]
  createMany?: Prisma.nasso_accountsCreateManyNasso_usersInputEnvelope
  set?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  disconnect?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  delete?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  connect?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  update?: Prisma.nasso_accountsUpdateWithWhereUniqueWithoutNasso_usersInput | Prisma.nasso_accountsUpdateWithWhereUniqueWithoutNasso_usersInput[]
  updateMany?: Prisma.nasso_accountsUpdateManyWithWhereWithoutNasso_usersInput | Prisma.nasso_accountsUpdateManyWithWhereWithoutNasso_usersInput[]
  deleteMany?: Prisma.nasso_accountsScalarWhereInput | Prisma.nasso_accountsScalarWhereInput[]
}

export type nasso_accountsUncheckedUpdateManyWithoutNasso_usersNestedInput = {
  create?: Prisma.XOR<Prisma.nasso_accountsCreateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput> | Prisma.nasso_accountsCreateWithoutNasso_usersInput[] | Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput[]
  connectOrCreate?: Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput | Prisma.nasso_accountsCreateOrConnectWithoutNasso_usersInput[]
  upsert?: Prisma.nasso_accountsUpsertWithWhereUniqueWithoutNasso_usersInput | Prisma.nasso_accountsUpsertWithWhereUniqueWithoutNasso_usersInput[]
  createMany?: Prisma.nasso_accountsCreateManyNasso_usersInputEnvelope
  set?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  disconnect?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  delete?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  connect?: Prisma.nasso_accountsWhereUniqueInput | Prisma.nasso_accountsWhereUniqueInput[]
  update?: Prisma.nasso_accountsUpdateWithWhereUniqueWithoutNasso_usersInput | Prisma.nasso_accountsUpdateWithWhereUniqueWithoutNasso_usersInput[]
  updateMany?: Prisma.nasso_accountsUpdateManyWithWhereWithoutNasso_usersInput | Prisma.nasso_accountsUpdateManyWithWhereWithoutNasso_usersInput[]
  deleteMany?: Prisma.nasso_accountsScalarWhereInput | Prisma.nasso_accountsScalarWhereInput[]
}

export type nasso_accountsCreateWithoutNasso_usersInput = {
  ac_bonus?: bigint | number
  ac_profit?: bigint | number
  ac_withdraw?: bigint | number
  ac_spin?: bigint | number
  ac_video?: bigint | number
  ac_trivia?: bigint | number
  ac_status?: bigint | number
  ac_balance?: bigint | number
  ac_expense?: bigint | number
  ac_media?: bigint | number
  ac_mshahara?: bigint | number | null
  paid_month?: string | null
  ac_ads?: bigint | number
  task_balance?: bigint | number
  task_withdraw?: number
  aff_balance?: number | null
}

export type nasso_accountsUncheckedCreateWithoutNasso_usersInput = {
  ac_Id?: number
  ac_bonus?: bigint | number
  ac_profit?: bigint | number
  ac_withdraw?: bigint | number
  ac_spin?: bigint | number
  ac_video?: bigint | number
  ac_trivia?: bigint | number
  ac_status?: bigint | number
  ac_balance?: bigint | number
  ac_expense?: bigint | number
  ac_media?: bigint | number
  ac_mshahara?: bigint | number | null
  paid_month?: string | null
  ac_ads?: bigint | number
  task_balance?: bigint | number
  task_withdraw?: number
  aff_balance?: number | null
}

export type nasso_accountsCreateOrConnectWithoutNasso_usersInput = {
  where: Prisma.nasso_accountsWhereUniqueInput
  create: Prisma.XOR<Prisma.nasso_accountsCreateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput>
}

export type nasso_accountsCreateManyNasso_usersInputEnvelope = {
  data: Prisma.nasso_accountsCreateManyNasso_usersInput | Prisma.nasso_accountsCreateManyNasso_usersInput[]
  skipDuplicates?: boolean
}

export type nasso_accountsUpsertWithWhereUniqueWithoutNasso_usersInput = {
  where: Prisma.nasso_accountsWhereUniqueInput
  update: Prisma.XOR<Prisma.nasso_accountsUpdateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedUpdateWithoutNasso_usersInput>
  create: Prisma.XOR<Prisma.nasso_accountsCreateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedCreateWithoutNasso_usersInput>
}

export type nasso_accountsUpdateWithWhereUniqueWithoutNasso_usersInput = {
  where: Prisma.nasso_accountsWhereUniqueInput
  data: Prisma.XOR<Prisma.nasso_accountsUpdateWithoutNasso_usersInput, Prisma.nasso_accountsUncheckedUpdateWithoutNasso_usersInput>
}

export type nasso_accountsUpdateManyWithWhereWithoutNasso_usersInput = {
  where: Prisma.nasso_accountsScalarWhereInput
  data: Prisma.XOR<Prisma.nasso_accountsUpdateManyMutationInput, Prisma.nasso_accountsUncheckedUpdateManyWithoutNasso_usersInput>
}

export type nasso_accountsScalarWhereInput = {
  AND?: Prisma.nasso_accountsScalarWhereInput | Prisma.nasso_accountsScalarWhereInput[]
  OR?: Prisma.nasso_accountsScalarWhereInput[]
  NOT?: Prisma.nasso_accountsScalarWhereInput | Prisma.nasso_accountsScalarWhereInput[]
  ac_Id?: Prisma.IntFilter<"nasso_accounts"> | number
  ac_usr?: Prisma.StringFilter<"nasso_accounts"> | string
  ac_bonus?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_profit?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_withdraw?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_spin?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_video?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_trivia?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_status?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_balance?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_expense?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_media?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  ac_mshahara?: Prisma.BigIntNullableFilter<"nasso_accounts"> | bigint | number | null
  paid_month?: Prisma.StringNullableFilter<"nasso_accounts"> | string | null
  ac_ads?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  task_balance?: Prisma.BigIntFilter<"nasso_accounts"> | bigint | number
  task_withdraw?: Prisma.FloatFilter<"nasso_accounts"> | number
  aff_balance?: Prisma.FloatNullableFilter<"nasso_accounts"> | number | null
}

export type nasso_accountsCreateManyNasso_usersInput = {
  ac_Id?: number
  ac_bonus?: bigint | number
  ac_profit?: bigint | number
  ac_withdraw?: bigint | number
  ac_spin?: bigint | number
  ac_video?: bigint | number
  ac_trivia?: bigint | number
  ac_status?: bigint | number
  ac_balance?: bigint | number
  ac_expense?: bigint | number
  ac_media?: bigint | number
  ac_mshahara?: bigint | number | null
  paid_month?: string | null
  ac_ads?: bigint | number
  task_balance?: bigint | number
  task_withdraw?: number
  aff_balance?: number | null
}

export type nasso_accountsUpdateWithoutNasso_usersInput = {
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
}

export type nasso_accountsUncheckedUpdateWithoutNasso_usersInput = {
  ac_Id?: Prisma.IntFieldUpdateOperationsInput | number
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
}

export type nasso_accountsUncheckedUpdateManyWithoutNasso_usersInput = {
  ac_Id?: Prisma.IntFieldUpdateOperationsInput | number
  ac_bonus?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_profit?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_withdraw?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_spin?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_video?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_trivia?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_expense?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_media?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  ac_mshahara?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  paid_month?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ac_ads?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_balance?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  task_withdraw?: Prisma.FloatFieldUpdateOperationsInput | number
  aff_balance?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
}



export type nasso_accountsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ac_Id?: boolean
  ac_usr?: boolean
  ac_bonus?: boolean
  ac_profit?: boolean
  ac_withdraw?: boolean
  ac_spin?: boolean
  ac_video?: boolean
  ac_trivia?: boolean
  ac_status?: boolean
  ac_balance?: boolean
  ac_expense?: boolean
  ac_media?: boolean
  ac_mshahara?: boolean
  paid_month?: boolean
  ac_ads?: boolean
  task_balance?: boolean
  task_withdraw?: boolean
  aff_balance?: boolean
  nasso_users?: boolean | Prisma.nasso_usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["nasso_accounts"]>



export type nasso_accountsSelectScalar = {
  ac_Id?: boolean
  ac_usr?: boolean
  ac_bonus?: boolean
  ac_profit?: boolean
  ac_withdraw?: boolean
  ac_spin?: boolean
  ac_video?: boolean
  ac_trivia?: boolean
  ac_status?: boolean
  ac_balance?: boolean
  ac_expense?: boolean
  ac_media?: boolean
  ac_mshahara?: boolean
  paid_month?: boolean
  ac_ads?: boolean
  task_balance?: boolean
  task_withdraw?: boolean
  aff_balance?: boolean
}

export type nasso_accountsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"ac_Id" | "ac_usr" | "ac_bonus" | "ac_profit" | "ac_withdraw" | "ac_spin" | "ac_video" | "ac_trivia" | "ac_status" | "ac_balance" | "ac_expense" | "ac_media" | "ac_mshahara" | "paid_month" | "ac_ads" | "task_balance" | "task_withdraw" | "aff_balance", ExtArgs["result"]["nasso_accounts"]>
export type nasso_accountsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  nasso_users?: boolean | Prisma.nasso_usersDefaultArgs<ExtArgs>
}

export type $nasso_accountsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "nasso_accounts"
  objects: {
    nasso_users: Prisma.$nasso_usersPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    ac_Id: number
    ac_usr: string
    ac_bonus: bigint
    ac_profit: bigint
    ac_withdraw: bigint
    ac_spin: bigint
    ac_video: bigint
    ac_trivia: bigint
    ac_status: bigint
    ac_balance: bigint
    ac_expense: bigint
    ac_media: bigint
    ac_mshahara: bigint | null
    paid_month: string | null
    ac_ads: bigint
    task_balance: bigint
    task_withdraw: number
    aff_balance: number | null
  }, ExtArgs["result"]["nasso_accounts"]>
  composites: {}
}

export type nasso_accountsGetPayload<S extends boolean | null | undefined | nasso_accountsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload, S>

export type nasso_accountsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<nasso_accountsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Nasso_accountsCountAggregateInputType | true
  }

export interface nasso_accountsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nasso_accounts'], meta: { name: 'nasso_accounts' } }
  /**
   * Find zero or one Nasso_accounts that matches the filter.
   * @param {nasso_accountsFindUniqueArgs} args - Arguments to find a Nasso_accounts
   * @example
   * // Get one Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends nasso_accountsFindUniqueArgs>(args: Prisma.SelectSubset<T, nasso_accountsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Nasso_accounts that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {nasso_accountsFindUniqueOrThrowArgs} args - Arguments to find a Nasso_accounts
   * @example
   * // Get one Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends nasso_accountsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, nasso_accountsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Nasso_accounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_accountsFindFirstArgs} args - Arguments to find a Nasso_accounts
   * @example
   * // Get one Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends nasso_accountsFindFirstArgs>(args?: Prisma.SelectSubset<T, nasso_accountsFindFirstArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Nasso_accounts that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_accountsFindFirstOrThrowArgs} args - Arguments to find a Nasso_accounts
   * @example
   * // Get one Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends nasso_accountsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, nasso_accountsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Nasso_accounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_accountsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.findMany()
   * 
   * // Get first 10 Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.findMany({ take: 10 })
   * 
   * // Only select the `ac_Id`
   * const nasso_accountsWithAc_IdOnly = await prisma.nasso_accounts.findMany({ select: { ac_Id: true } })
   * 
   */
  findMany<T extends nasso_accountsFindManyArgs>(args?: Prisma.SelectSubset<T, nasso_accountsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Nasso_accounts.
   * @param {nasso_accountsCreateArgs} args - Arguments to create a Nasso_accounts.
   * @example
   * // Create one Nasso_accounts
   * const Nasso_accounts = await prisma.nasso_accounts.create({
   *   data: {
   *     // ... data to create a Nasso_accounts
   *   }
   * })
   * 
   */
  create<T extends nasso_accountsCreateArgs>(args: Prisma.SelectSubset<T, nasso_accountsCreateArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Nasso_accounts.
   * @param {nasso_accountsCreateManyArgs} args - Arguments to create many Nasso_accounts.
   * @example
   * // Create many Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends nasso_accountsCreateManyArgs>(args?: Prisma.SelectSubset<T, nasso_accountsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Nasso_accounts.
   * @param {nasso_accountsDeleteArgs} args - Arguments to delete one Nasso_accounts.
   * @example
   * // Delete one Nasso_accounts
   * const Nasso_accounts = await prisma.nasso_accounts.delete({
   *   where: {
   *     // ... filter to delete one Nasso_accounts
   *   }
   * })
   * 
   */
  delete<T extends nasso_accountsDeleteArgs>(args: Prisma.SelectSubset<T, nasso_accountsDeleteArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Nasso_accounts.
   * @param {nasso_accountsUpdateArgs} args - Arguments to update one Nasso_accounts.
   * @example
   * // Update one Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends nasso_accountsUpdateArgs>(args: Prisma.SelectSubset<T, nasso_accountsUpdateArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Nasso_accounts.
   * @param {nasso_accountsDeleteManyArgs} args - Arguments to filter Nasso_accounts to delete.
   * @example
   * // Delete a few Nasso_accounts
   * const { count } = await prisma.nasso_accounts.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends nasso_accountsDeleteManyArgs>(args?: Prisma.SelectSubset<T, nasso_accountsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Nasso_accounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_accountsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends nasso_accountsUpdateManyArgs>(args: Prisma.SelectSubset<T, nasso_accountsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Nasso_accounts.
   * @param {nasso_accountsUpsertArgs} args - Arguments to update or create a Nasso_accounts.
   * @example
   * // Update or create a Nasso_accounts
   * const nasso_accounts = await prisma.nasso_accounts.upsert({
   *   create: {
   *     // ... data to create a Nasso_accounts
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Nasso_accounts we want to update
   *   }
   * })
   */
  upsert<T extends nasso_accountsUpsertArgs>(args: Prisma.SelectSubset<T, nasso_accountsUpsertArgs<ExtArgs>>): Prisma.Prisma__nasso_accountsClient<runtime.Types.Result.GetResult<Prisma.$nasso_accountsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Nasso_accounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_accountsCountArgs} args - Arguments to filter Nasso_accounts to count.
   * @example
   * // Count the number of Nasso_accounts
   * const count = await prisma.nasso_accounts.count({
   *   where: {
   *     // ... the filter for the Nasso_accounts we want to count
   *   }
   * })
  **/
  count<T extends nasso_accountsCountArgs>(
    args?: Prisma.Subset<T, nasso_accountsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Nasso_accountsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Nasso_accounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Nasso_accountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Nasso_accountsAggregateArgs>(args: Prisma.Subset<T, Nasso_accountsAggregateArgs>): Prisma.PrismaPromise<GetNasso_accountsAggregateType<T>>

  /**
   * Group by Nasso_accounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_accountsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends nasso_accountsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: nasso_accountsGroupByArgs['orderBy'] }
      : { orderBy?: nasso_accountsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, nasso_accountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNasso_accountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the nasso_accounts model
 */
readonly fields: nasso_accountsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for nasso_accounts.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__nasso_accountsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  nasso_users<T extends Prisma.nasso_usersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.nasso_usersDefaultArgs<ExtArgs>>): Prisma.Prisma__nasso_usersClient<runtime.Types.Result.GetResult<Prisma.$nasso_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the nasso_accounts model
 */
export interface nasso_accountsFieldRefs {
  readonly ac_Id: Prisma.FieldRef<"nasso_accounts", 'Int'>
  readonly ac_usr: Prisma.FieldRef<"nasso_accounts", 'String'>
  readonly ac_bonus: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_profit: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_withdraw: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_spin: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_video: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_trivia: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_status: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_balance: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_expense: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_media: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly ac_mshahara: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly paid_month: Prisma.FieldRef<"nasso_accounts", 'String'>
  readonly ac_ads: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly task_balance: Prisma.FieldRef<"nasso_accounts", 'BigInt'>
  readonly task_withdraw: Prisma.FieldRef<"nasso_accounts", 'Float'>
  readonly aff_balance: Prisma.FieldRef<"nasso_accounts", 'Float'>
}
    

// Custom InputTypes
/**
 * nasso_accounts findUnique
 */
export type nasso_accountsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_accounts to fetch.
   */
  where: Prisma.nasso_accountsWhereUniqueInput
}

/**
 * nasso_accounts findUniqueOrThrow
 */
export type nasso_accountsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_accounts to fetch.
   */
  where: Prisma.nasso_accountsWhereUniqueInput
}

/**
 * nasso_accounts findFirst
 */
export type nasso_accountsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_accounts to fetch.
   */
  where?: Prisma.nasso_accountsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_accounts to fetch.
   */
  orderBy?: Prisma.nasso_accountsOrderByWithRelationInput | Prisma.nasso_accountsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for nasso_accounts.
   */
  cursor?: Prisma.nasso_accountsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_accounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of nasso_accounts.
   */
  distinct?: Prisma.Nasso_accountsScalarFieldEnum | Prisma.Nasso_accountsScalarFieldEnum[]
}

/**
 * nasso_accounts findFirstOrThrow
 */
export type nasso_accountsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_accounts to fetch.
   */
  where?: Prisma.nasso_accountsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_accounts to fetch.
   */
  orderBy?: Prisma.nasso_accountsOrderByWithRelationInput | Prisma.nasso_accountsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for nasso_accounts.
   */
  cursor?: Prisma.nasso_accountsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_accounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of nasso_accounts.
   */
  distinct?: Prisma.Nasso_accountsScalarFieldEnum | Prisma.Nasso_accountsScalarFieldEnum[]
}

/**
 * nasso_accounts findMany
 */
export type nasso_accountsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_accounts to fetch.
   */
  where?: Prisma.nasso_accountsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_accounts to fetch.
   */
  orderBy?: Prisma.nasso_accountsOrderByWithRelationInput | Prisma.nasso_accountsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing nasso_accounts.
   */
  cursor?: Prisma.nasso_accountsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_accounts.
   */
  skip?: number
  distinct?: Prisma.Nasso_accountsScalarFieldEnum | Prisma.Nasso_accountsScalarFieldEnum[]
}

/**
 * nasso_accounts create
 */
export type nasso_accountsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * The data needed to create a nasso_accounts.
   */
  data: Prisma.XOR<Prisma.nasso_accountsCreateInput, Prisma.nasso_accountsUncheckedCreateInput>
}

/**
 * nasso_accounts createMany
 */
export type nasso_accountsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many nasso_accounts.
   */
  data: Prisma.nasso_accountsCreateManyInput | Prisma.nasso_accountsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * nasso_accounts update
 */
export type nasso_accountsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * The data needed to update a nasso_accounts.
   */
  data: Prisma.XOR<Prisma.nasso_accountsUpdateInput, Prisma.nasso_accountsUncheckedUpdateInput>
  /**
   * Choose, which nasso_accounts to update.
   */
  where: Prisma.nasso_accountsWhereUniqueInput
}

/**
 * nasso_accounts updateMany
 */
export type nasso_accountsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update nasso_accounts.
   */
  data: Prisma.XOR<Prisma.nasso_accountsUpdateManyMutationInput, Prisma.nasso_accountsUncheckedUpdateManyInput>
  /**
   * Filter which nasso_accounts to update
   */
  where?: Prisma.nasso_accountsWhereInput
  /**
   * Limit how many nasso_accounts to update.
   */
  limit?: number
}

/**
 * nasso_accounts upsert
 */
export type nasso_accountsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * The filter to search for the nasso_accounts to update in case it exists.
   */
  where: Prisma.nasso_accountsWhereUniqueInput
  /**
   * In case the nasso_accounts found by the `where` argument doesn't exist, create a new nasso_accounts with this data.
   */
  create: Prisma.XOR<Prisma.nasso_accountsCreateInput, Prisma.nasso_accountsUncheckedCreateInput>
  /**
   * In case the nasso_accounts was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.nasso_accountsUpdateInput, Prisma.nasso_accountsUncheckedUpdateInput>
}

/**
 * nasso_accounts delete
 */
export type nasso_accountsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
  /**
   * Filter which nasso_accounts to delete.
   */
  where: Prisma.nasso_accountsWhereUniqueInput
}

/**
 * nasso_accounts deleteMany
 */
export type nasso_accountsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which nasso_accounts to delete
   */
  where?: Prisma.nasso_accountsWhereInput
  /**
   * Limit how many nasso_accounts to delete.
   */
  limit?: number
}

/**
 * nasso_accounts without action
 */
export type nasso_accountsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_accounts
   */
  select?: Prisma.nasso_accountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_accounts
   */
  omit?: Prisma.nasso_accountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_accountsInclude<ExtArgs> | null
}
