
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `tbl_video` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model tbl_video
 * 
 */
export type tbl_videoModel = runtime.Types.Result.DefaultSelection<Prisma.$tbl_videoPayload>

export type AggregateTbl_video = {
  _count: Tbl_videoCountAggregateOutputType | null
  _avg: Tbl_videoAvgAggregateOutputType | null
  _sum: Tbl_videoSumAggregateOutputType | null
  _min: Tbl_videoMinAggregateOutputType | null
  _max: Tbl_videoMaxAggregateOutputType | null
}

export type Tbl_videoAvgAggregateOutputType = {
  v_Id: number | null
  v_duration: number | null
}

export type Tbl_videoSumAggregateOutputType = {
  v_Id: number | null
  v_duration: number | null
}

export type Tbl_videoMinAggregateOutputType = {
  v_Id: number | null
  v_link: string | null
  v_del_date: string | null
  v_op: string | null
  v_type: string | null
  v_duration: number | null
}

export type Tbl_videoMaxAggregateOutputType = {
  v_Id: number | null
  v_link: string | null
  v_del_date: string | null
  v_op: string | null
  v_type: string | null
  v_duration: number | null
}

export type Tbl_videoCountAggregateOutputType = {
  v_Id: number
  v_link: number
  v_del_date: number
  v_op: number
  v_type: number
  v_duration: number
  _all: number
}


export type Tbl_videoAvgAggregateInputType = {
  v_Id?: true
  v_duration?: true
}

export type Tbl_videoSumAggregateInputType = {
  v_Id?: true
  v_duration?: true
}

export type Tbl_videoMinAggregateInputType = {
  v_Id?: true
  v_link?: true
  v_del_date?: true
  v_op?: true
  v_type?: true
  v_duration?: true
}

export type Tbl_videoMaxAggregateInputType = {
  v_Id?: true
  v_link?: true
  v_del_date?: true
  v_op?: true
  v_type?: true
  v_duration?: true
}

export type Tbl_videoCountAggregateInputType = {
  v_Id?: true
  v_link?: true
  v_del_date?: true
  v_op?: true
  v_type?: true
  v_duration?: true
  _all?: true
}

export type Tbl_videoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_video to aggregate.
   */
  where?: Prisma.tbl_videoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_videos to fetch.
   */
  orderBy?: Prisma.tbl_videoOrderByWithRelationInput | Prisma.tbl_videoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.tbl_videoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_videos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_videos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned tbl_videos
  **/
  _count?: true | Tbl_videoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Tbl_videoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Tbl_videoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Tbl_videoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Tbl_videoMaxAggregateInputType
}

export type GetTbl_videoAggregateType<T extends Tbl_videoAggregateArgs> = {
      [P in keyof T & keyof AggregateTbl_video]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTbl_video[P]>
    : Prisma.GetScalarType<T[P], AggregateTbl_video[P]>
}




export type tbl_videoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.tbl_videoWhereInput
  orderBy?: Prisma.tbl_videoOrderByWithAggregationInput | Prisma.tbl_videoOrderByWithAggregationInput[]
  by: Prisma.Tbl_videoScalarFieldEnum[] | Prisma.Tbl_videoScalarFieldEnum
  having?: Prisma.tbl_videoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Tbl_videoCountAggregateInputType | true
  _avg?: Tbl_videoAvgAggregateInputType
  _sum?: Tbl_videoSumAggregateInputType
  _min?: Tbl_videoMinAggregateInputType
  _max?: Tbl_videoMaxAggregateInputType
}

export type Tbl_videoGroupByOutputType = {
  v_Id: number
  v_link: string
  v_del_date: string
  v_op: string
  v_type: string | null
  v_duration: number | null
  _count: Tbl_videoCountAggregateOutputType | null
  _avg: Tbl_videoAvgAggregateOutputType | null
  _sum: Tbl_videoSumAggregateOutputType | null
  _min: Tbl_videoMinAggregateOutputType | null
  _max: Tbl_videoMaxAggregateOutputType | null
}

type GetTbl_videoGroupByPayload<T extends tbl_videoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Tbl_videoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Tbl_videoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Tbl_videoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Tbl_videoGroupByOutputType[P]>
      }
    >
  >



export type tbl_videoWhereInput = {
  AND?: Prisma.tbl_videoWhereInput | Prisma.tbl_videoWhereInput[]
  OR?: Prisma.tbl_videoWhereInput[]
  NOT?: Prisma.tbl_videoWhereInput | Prisma.tbl_videoWhereInput[]
  v_Id?: Prisma.IntFilter<"tbl_video"> | number
  v_link?: Prisma.StringFilter<"tbl_video"> | string
  v_del_date?: Prisma.StringFilter<"tbl_video"> | string
  v_op?: Prisma.StringFilter<"tbl_video"> | string
  v_type?: Prisma.StringNullableFilter<"tbl_video"> | string | null
  v_duration?: Prisma.IntNullableFilter<"tbl_video"> | number | null
}

export type tbl_videoOrderByWithRelationInput = {
  v_Id?: Prisma.SortOrder
  v_link?: Prisma.SortOrder
  v_del_date?: Prisma.SortOrder
  v_op?: Prisma.SortOrder
  v_type?: Prisma.SortOrderInput | Prisma.SortOrder
  v_duration?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.tbl_videoOrderByRelevanceInput
}

export type tbl_videoWhereUniqueInput = Prisma.AtLeast<{
  v_Id?: number
  AND?: Prisma.tbl_videoWhereInput | Prisma.tbl_videoWhereInput[]
  OR?: Prisma.tbl_videoWhereInput[]
  NOT?: Prisma.tbl_videoWhereInput | Prisma.tbl_videoWhereInput[]
  v_link?: Prisma.StringFilter<"tbl_video"> | string
  v_del_date?: Prisma.StringFilter<"tbl_video"> | string
  v_op?: Prisma.StringFilter<"tbl_video"> | string
  v_type?: Prisma.StringNullableFilter<"tbl_video"> | string | null
  v_duration?: Prisma.IntNullableFilter<"tbl_video"> | number | null
}, "v_Id">

export type tbl_videoOrderByWithAggregationInput = {
  v_Id?: Prisma.SortOrder
  v_link?: Prisma.SortOrder
  v_del_date?: Prisma.SortOrder
  v_op?: Prisma.SortOrder
  v_type?: Prisma.SortOrderInput | Prisma.SortOrder
  v_duration?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.tbl_videoCountOrderByAggregateInput
  _avg?: Prisma.tbl_videoAvgOrderByAggregateInput
  _max?: Prisma.tbl_videoMaxOrderByAggregateInput
  _min?: Prisma.tbl_videoMinOrderByAggregateInput
  _sum?: Prisma.tbl_videoSumOrderByAggregateInput
}

export type tbl_videoScalarWhereWithAggregatesInput = {
  AND?: Prisma.tbl_videoScalarWhereWithAggregatesInput | Prisma.tbl_videoScalarWhereWithAggregatesInput[]
  OR?: Prisma.tbl_videoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.tbl_videoScalarWhereWithAggregatesInput | Prisma.tbl_videoScalarWhereWithAggregatesInput[]
  v_Id?: Prisma.IntWithAggregatesFilter<"tbl_video"> | number
  v_link?: Prisma.StringWithAggregatesFilter<"tbl_video"> | string
  v_del_date?: Prisma.StringWithAggregatesFilter<"tbl_video"> | string
  v_op?: Prisma.StringWithAggregatesFilter<"tbl_video"> | string
  v_type?: Prisma.StringNullableWithAggregatesFilter<"tbl_video"> | string | null
  v_duration?: Prisma.IntNullableWithAggregatesFilter<"tbl_video"> | number | null
}

export type tbl_videoCreateInput = {
  v_link: string
  v_del_date?: string
  v_op?: string
  v_type?: string | null
  v_duration?: number | null
}

export type tbl_videoUncheckedCreateInput = {
  v_Id?: number
  v_link: string
  v_del_date?: string
  v_op?: string
  v_type?: string | null
  v_duration?: number | null
}

export type tbl_videoUpdateInput = {
  v_link?: Prisma.StringFieldUpdateOperationsInput | string
  v_del_date?: Prisma.StringFieldUpdateOperationsInput | string
  v_op?: Prisma.StringFieldUpdateOperationsInput | string
  v_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  v_duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_videoUncheckedUpdateInput = {
  v_Id?: Prisma.IntFieldUpdateOperationsInput | number
  v_link?: Prisma.StringFieldUpdateOperationsInput | string
  v_del_date?: Prisma.StringFieldUpdateOperationsInput | string
  v_op?: Prisma.StringFieldUpdateOperationsInput | string
  v_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  v_duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_videoCreateManyInput = {
  v_Id?: number
  v_link: string
  v_del_date?: string
  v_op?: string
  v_type?: string | null
  v_duration?: number | null
}

export type tbl_videoUpdateManyMutationInput = {
  v_link?: Prisma.StringFieldUpdateOperationsInput | string
  v_del_date?: Prisma.StringFieldUpdateOperationsInput | string
  v_op?: Prisma.StringFieldUpdateOperationsInput | string
  v_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  v_duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_videoUncheckedUpdateManyInput = {
  v_Id?: Prisma.IntFieldUpdateOperationsInput | number
  v_link?: Prisma.StringFieldUpdateOperationsInput | string
  v_del_date?: Prisma.StringFieldUpdateOperationsInput | string
  v_op?: Prisma.StringFieldUpdateOperationsInput | string
  v_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  v_duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_videoOrderByRelevanceInput = {
  fields: Prisma.tbl_videoOrderByRelevanceFieldEnum | Prisma.tbl_videoOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type tbl_videoCountOrderByAggregateInput = {
  v_Id?: Prisma.SortOrder
  v_link?: Prisma.SortOrder
  v_del_date?: Prisma.SortOrder
  v_op?: Prisma.SortOrder
  v_type?: Prisma.SortOrder
  v_duration?: Prisma.SortOrder
}

export type tbl_videoAvgOrderByAggregateInput = {
  v_Id?: Prisma.SortOrder
  v_duration?: Prisma.SortOrder
}

export type tbl_videoMaxOrderByAggregateInput = {
  v_Id?: Prisma.SortOrder
  v_link?: Prisma.SortOrder
  v_del_date?: Prisma.SortOrder
  v_op?: Prisma.SortOrder
  v_type?: Prisma.SortOrder
  v_duration?: Prisma.SortOrder
}

export type tbl_videoMinOrderByAggregateInput = {
  v_Id?: Prisma.SortOrder
  v_link?: Prisma.SortOrder
  v_del_date?: Prisma.SortOrder
  v_op?: Prisma.SortOrder
  v_type?: Prisma.SortOrder
  v_duration?: Prisma.SortOrder
}

export type tbl_videoSumOrderByAggregateInput = {
  v_Id?: Prisma.SortOrder
  v_duration?: Prisma.SortOrder
}



export type tbl_videoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  v_Id?: boolean
  v_link?: boolean
  v_del_date?: boolean
  v_op?: boolean
  v_type?: boolean
  v_duration?: boolean
}, ExtArgs["result"]["tbl_video"]>



export type tbl_videoSelectScalar = {
  v_Id?: boolean
  v_link?: boolean
  v_del_date?: boolean
  v_op?: boolean
  v_type?: boolean
  v_duration?: boolean
}

export type tbl_videoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"v_Id" | "v_link" | "v_del_date" | "v_op" | "v_type" | "v_duration", ExtArgs["result"]["tbl_video"]>

export type $tbl_videoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "tbl_video"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    v_Id: number
    v_link: string
    v_del_date: string
    v_op: string
    v_type: string | null
    v_duration: number | null
  }, ExtArgs["result"]["tbl_video"]>
  composites: {}
}

export type tbl_videoGetPayload<S extends boolean | null | undefined | tbl_videoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload, S>

export type tbl_videoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<tbl_videoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Tbl_videoCountAggregateInputType | true
  }

export interface tbl_videoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_video'], meta: { name: 'tbl_video' } }
  /**
   * Find zero or one Tbl_video that matches the filter.
   * @param {tbl_videoFindUniqueArgs} args - Arguments to find a Tbl_video
   * @example
   * // Get one Tbl_video
   * const tbl_video = await prisma.tbl_video.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends tbl_videoFindUniqueArgs>(args: Prisma.SelectSubset<T, tbl_videoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Tbl_video that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {tbl_videoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_video
   * @example
   * // Get one Tbl_video
   * const tbl_video = await prisma.tbl_video.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends tbl_videoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, tbl_videoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_video that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_videoFindFirstArgs} args - Arguments to find a Tbl_video
   * @example
   * // Get one Tbl_video
   * const tbl_video = await prisma.tbl_video.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends tbl_videoFindFirstArgs>(args?: Prisma.SelectSubset<T, tbl_videoFindFirstArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_video that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_videoFindFirstOrThrowArgs} args - Arguments to find a Tbl_video
   * @example
   * // Get one Tbl_video
   * const tbl_video = await prisma.tbl_video.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends tbl_videoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, tbl_videoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Tbl_videos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_videoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Tbl_videos
   * const tbl_videos = await prisma.tbl_video.findMany()
   * 
   * // Get first 10 Tbl_videos
   * const tbl_videos = await prisma.tbl_video.findMany({ take: 10 })
   * 
   * // Only select the `v_Id`
   * const tbl_videoWithV_IdOnly = await prisma.tbl_video.findMany({ select: { v_Id: true } })
   * 
   */
  findMany<T extends tbl_videoFindManyArgs>(args?: Prisma.SelectSubset<T, tbl_videoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Tbl_video.
   * @param {tbl_videoCreateArgs} args - Arguments to create a Tbl_video.
   * @example
   * // Create one Tbl_video
   * const Tbl_video = await prisma.tbl_video.create({
   *   data: {
   *     // ... data to create a Tbl_video
   *   }
   * })
   * 
   */
  create<T extends tbl_videoCreateArgs>(args: Prisma.SelectSubset<T, tbl_videoCreateArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Tbl_videos.
   * @param {tbl_videoCreateManyArgs} args - Arguments to create many Tbl_videos.
   * @example
   * // Create many Tbl_videos
   * const tbl_video = await prisma.tbl_video.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends tbl_videoCreateManyArgs>(args?: Prisma.SelectSubset<T, tbl_videoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Tbl_video.
   * @param {tbl_videoDeleteArgs} args - Arguments to delete one Tbl_video.
   * @example
   * // Delete one Tbl_video
   * const Tbl_video = await prisma.tbl_video.delete({
   *   where: {
   *     // ... filter to delete one Tbl_video
   *   }
   * })
   * 
   */
  delete<T extends tbl_videoDeleteArgs>(args: Prisma.SelectSubset<T, tbl_videoDeleteArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Tbl_video.
   * @param {tbl_videoUpdateArgs} args - Arguments to update one Tbl_video.
   * @example
   * // Update one Tbl_video
   * const tbl_video = await prisma.tbl_video.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends tbl_videoUpdateArgs>(args: Prisma.SelectSubset<T, tbl_videoUpdateArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Tbl_videos.
   * @param {tbl_videoDeleteManyArgs} args - Arguments to filter Tbl_videos to delete.
   * @example
   * // Delete a few Tbl_videos
   * const { count } = await prisma.tbl_video.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends tbl_videoDeleteManyArgs>(args?: Prisma.SelectSubset<T, tbl_videoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Tbl_videos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_videoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Tbl_videos
   * const tbl_video = await prisma.tbl_video.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends tbl_videoUpdateManyArgs>(args: Prisma.SelectSubset<T, tbl_videoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Tbl_video.
   * @param {tbl_videoUpsertArgs} args - Arguments to update or create a Tbl_video.
   * @example
   * // Update or create a Tbl_video
   * const tbl_video = await prisma.tbl_video.upsert({
   *   create: {
   *     // ... data to create a Tbl_video
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Tbl_video we want to update
   *   }
   * })
   */
  upsert<T extends tbl_videoUpsertArgs>(args: Prisma.SelectSubset<T, tbl_videoUpsertArgs<ExtArgs>>): Prisma.Prisma__tbl_videoClient<runtime.Types.Result.GetResult<Prisma.$tbl_videoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Tbl_videos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_videoCountArgs} args - Arguments to filter Tbl_videos to count.
   * @example
   * // Count the number of Tbl_videos
   * const count = await prisma.tbl_video.count({
   *   where: {
   *     // ... the filter for the Tbl_videos we want to count
   *   }
   * })
  **/
  count<T extends tbl_videoCountArgs>(
    args?: Prisma.Subset<T, tbl_videoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Tbl_videoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Tbl_video.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Tbl_videoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Tbl_videoAggregateArgs>(args: Prisma.Subset<T, Tbl_videoAggregateArgs>): Prisma.PrismaPromise<GetTbl_videoAggregateType<T>>

  /**
   * Group by Tbl_video.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_videoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends tbl_videoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: tbl_videoGroupByArgs['orderBy'] }
      : { orderBy?: tbl_videoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, tbl_videoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_videoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the tbl_video model
 */
readonly fields: tbl_videoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for tbl_video.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__tbl_videoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the tbl_video model
 */
export interface tbl_videoFieldRefs {
  readonly v_Id: Prisma.FieldRef<"tbl_video", 'Int'>
  readonly v_link: Prisma.FieldRef<"tbl_video", 'String'>
  readonly v_del_date: Prisma.FieldRef<"tbl_video", 'String'>
  readonly v_op: Prisma.FieldRef<"tbl_video", 'String'>
  readonly v_type: Prisma.FieldRef<"tbl_video", 'String'>
  readonly v_duration: Prisma.FieldRef<"tbl_video", 'Int'>
}
    

// Custom InputTypes
/**
 * tbl_video findUnique
 */
export type tbl_videoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * Filter, which tbl_video to fetch.
   */
  where: Prisma.tbl_videoWhereUniqueInput
}

/**
 * tbl_video findUniqueOrThrow
 */
export type tbl_videoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * Filter, which tbl_video to fetch.
   */
  where: Prisma.tbl_videoWhereUniqueInput
}

/**
 * tbl_video findFirst
 */
export type tbl_videoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * Filter, which tbl_video to fetch.
   */
  where?: Prisma.tbl_videoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_videos to fetch.
   */
  orderBy?: Prisma.tbl_videoOrderByWithRelationInput | Prisma.tbl_videoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_videos.
   */
  cursor?: Prisma.tbl_videoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_videos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_videos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_videos.
   */
  distinct?: Prisma.Tbl_videoScalarFieldEnum | Prisma.Tbl_videoScalarFieldEnum[]
}

/**
 * tbl_video findFirstOrThrow
 */
export type tbl_videoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * Filter, which tbl_video to fetch.
   */
  where?: Prisma.tbl_videoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_videos to fetch.
   */
  orderBy?: Prisma.tbl_videoOrderByWithRelationInput | Prisma.tbl_videoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_videos.
   */
  cursor?: Prisma.tbl_videoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_videos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_videos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_videos.
   */
  distinct?: Prisma.Tbl_videoScalarFieldEnum | Prisma.Tbl_videoScalarFieldEnum[]
}

/**
 * tbl_video findMany
 */
export type tbl_videoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * Filter, which tbl_videos to fetch.
   */
  where?: Prisma.tbl_videoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_videos to fetch.
   */
  orderBy?: Prisma.tbl_videoOrderByWithRelationInput | Prisma.tbl_videoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing tbl_videos.
   */
  cursor?: Prisma.tbl_videoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_videos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_videos.
   */
  skip?: number
  distinct?: Prisma.Tbl_videoScalarFieldEnum | Prisma.Tbl_videoScalarFieldEnum[]
}

/**
 * tbl_video create
 */
export type tbl_videoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * The data needed to create a tbl_video.
   */
  data: Prisma.XOR<Prisma.tbl_videoCreateInput, Prisma.tbl_videoUncheckedCreateInput>
}

/**
 * tbl_video createMany
 */
export type tbl_videoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many tbl_videos.
   */
  data: Prisma.tbl_videoCreateManyInput | Prisma.tbl_videoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * tbl_video update
 */
export type tbl_videoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * The data needed to update a tbl_video.
   */
  data: Prisma.XOR<Prisma.tbl_videoUpdateInput, Prisma.tbl_videoUncheckedUpdateInput>
  /**
   * Choose, which tbl_video to update.
   */
  where: Prisma.tbl_videoWhereUniqueInput
}

/**
 * tbl_video updateMany
 */
export type tbl_videoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update tbl_videos.
   */
  data: Prisma.XOR<Prisma.tbl_videoUpdateManyMutationInput, Prisma.tbl_videoUncheckedUpdateManyInput>
  /**
   * Filter which tbl_videos to update
   */
  where?: Prisma.tbl_videoWhereInput
  /**
   * Limit how many tbl_videos to update.
   */
  limit?: number
}

/**
 * tbl_video upsert
 */
export type tbl_videoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * The filter to search for the tbl_video to update in case it exists.
   */
  where: Prisma.tbl_videoWhereUniqueInput
  /**
   * In case the tbl_video found by the `where` argument doesn't exist, create a new tbl_video with this data.
   */
  create: Prisma.XOR<Prisma.tbl_videoCreateInput, Prisma.tbl_videoUncheckedCreateInput>
  /**
   * In case the tbl_video was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.tbl_videoUpdateInput, Prisma.tbl_videoUncheckedUpdateInput>
}

/**
 * tbl_video delete
 */
export type tbl_videoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
  /**
   * Filter which tbl_video to delete.
   */
  where: Prisma.tbl_videoWhereUniqueInput
}

/**
 * tbl_video deleteMany
 */
export type tbl_videoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_videos to delete
   */
  where?: Prisma.tbl_videoWhereInput
  /**
   * Limit how many tbl_videos to delete.
   */
  limit?: number
}

/**
 * tbl_video without action
 */
export type tbl_videoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_video
   */
  select?: Prisma.tbl_videoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_video
   */
  omit?: Prisma.tbl_videoOmit<ExtArgs> | null
}
