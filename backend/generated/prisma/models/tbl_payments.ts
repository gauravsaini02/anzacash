
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `tbl_payments` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model tbl_payments
 * 
 */
export type tbl_paymentsModel = runtime.Types.Result.DefaultSelection<Prisma.$tbl_paymentsPayload>

export type AggregateTbl_payments = {
  _count: Tbl_paymentsCountAggregateOutputType | null
  _avg: Tbl_paymentsAvgAggregateOutputType | null
  _sum: Tbl_paymentsSumAggregateOutputType | null
  _min: Tbl_paymentsMinAggregateOutputType | null
  _max: Tbl_paymentsMaxAggregateOutputType | null
}

export type Tbl_paymentsAvgAggregateOutputType = {
  pay_ID: number | null
  pay_amount: number | null
  sh_usr_ID: number | null
  sh_pro_Id: number | null
}

export type Tbl_paymentsSumAggregateOutputType = {
  pay_ID: number | null
  pay_amount: number | null
  sh_usr_ID: number | null
  sh_pro_Id: number | null
}

export type Tbl_paymentsMinAggregateOutputType = {
  pay_ID: number | null
  pay_user: string | null
  pay_amount: number | null
  pay_phone: string | null
  pay_email: string | null
  pay_refID: string | null
  pay_token: string | null
  pay_date: string | null
  pay_url: string | null
  pay_order_Id: string | null
  pay_method: string | null
  paid_ref: string | null
  paid_transId: string | null
  paid_date: string | null
  pay_status: string | null
  pay_today: string | null
  pay_types: string | null
  sh_usr_ID: number | null
  sh_pro_Id: number | null
}

export type Tbl_paymentsMaxAggregateOutputType = {
  pay_ID: number | null
  pay_user: string | null
  pay_amount: number | null
  pay_phone: string | null
  pay_email: string | null
  pay_refID: string | null
  pay_token: string | null
  pay_date: string | null
  pay_url: string | null
  pay_order_Id: string | null
  pay_method: string | null
  paid_ref: string | null
  paid_transId: string | null
  paid_date: string | null
  pay_status: string | null
  pay_today: string | null
  pay_types: string | null
  sh_usr_ID: number | null
  sh_pro_Id: number | null
}

export type Tbl_paymentsCountAggregateOutputType = {
  pay_ID: number
  pay_user: number
  pay_amount: number
  pay_phone: number
  pay_email: number
  pay_refID: number
  pay_token: number
  pay_date: number
  pay_url: number
  pay_order_Id: number
  pay_method: number
  paid_ref: number
  paid_transId: number
  paid_date: number
  pay_status: number
  pay_today: number
  pay_types: number
  sh_usr_ID: number
  sh_pro_Id: number
  _all: number
}


export type Tbl_paymentsAvgAggregateInputType = {
  pay_ID?: true
  pay_amount?: true
  sh_usr_ID?: true
  sh_pro_Id?: true
}

export type Tbl_paymentsSumAggregateInputType = {
  pay_ID?: true
  pay_amount?: true
  sh_usr_ID?: true
  sh_pro_Id?: true
}

export type Tbl_paymentsMinAggregateInputType = {
  pay_ID?: true
  pay_user?: true
  pay_amount?: true
  pay_phone?: true
  pay_email?: true
  pay_refID?: true
  pay_token?: true
  pay_date?: true
  pay_url?: true
  pay_order_Id?: true
  pay_method?: true
  paid_ref?: true
  paid_transId?: true
  paid_date?: true
  pay_status?: true
  pay_today?: true
  pay_types?: true
  sh_usr_ID?: true
  sh_pro_Id?: true
}

export type Tbl_paymentsMaxAggregateInputType = {
  pay_ID?: true
  pay_user?: true
  pay_amount?: true
  pay_phone?: true
  pay_email?: true
  pay_refID?: true
  pay_token?: true
  pay_date?: true
  pay_url?: true
  pay_order_Id?: true
  pay_method?: true
  paid_ref?: true
  paid_transId?: true
  paid_date?: true
  pay_status?: true
  pay_today?: true
  pay_types?: true
  sh_usr_ID?: true
  sh_pro_Id?: true
}

export type Tbl_paymentsCountAggregateInputType = {
  pay_ID?: true
  pay_user?: true
  pay_amount?: true
  pay_phone?: true
  pay_email?: true
  pay_refID?: true
  pay_token?: true
  pay_date?: true
  pay_url?: true
  pay_order_Id?: true
  pay_method?: true
  paid_ref?: true
  paid_transId?: true
  paid_date?: true
  pay_status?: true
  pay_today?: true
  pay_types?: true
  sh_usr_ID?: true
  sh_pro_Id?: true
  _all?: true
}

export type Tbl_paymentsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_payments to aggregate.
   */
  where?: Prisma.tbl_paymentsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_payments to fetch.
   */
  orderBy?: Prisma.tbl_paymentsOrderByWithRelationInput | Prisma.tbl_paymentsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.tbl_paymentsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_payments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_payments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned tbl_payments
  **/
  _count?: true | Tbl_paymentsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Tbl_paymentsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Tbl_paymentsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Tbl_paymentsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Tbl_paymentsMaxAggregateInputType
}

export type GetTbl_paymentsAggregateType<T extends Tbl_paymentsAggregateArgs> = {
      [P in keyof T & keyof AggregateTbl_payments]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTbl_payments[P]>
    : Prisma.GetScalarType<T[P], AggregateTbl_payments[P]>
}




export type tbl_paymentsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.tbl_paymentsWhereInput
  orderBy?: Prisma.tbl_paymentsOrderByWithAggregationInput | Prisma.tbl_paymentsOrderByWithAggregationInput[]
  by: Prisma.Tbl_paymentsScalarFieldEnum[] | Prisma.Tbl_paymentsScalarFieldEnum
  having?: Prisma.tbl_paymentsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Tbl_paymentsCountAggregateInputType | true
  _avg?: Tbl_paymentsAvgAggregateInputType
  _sum?: Tbl_paymentsSumAggregateInputType
  _min?: Tbl_paymentsMinAggregateInputType
  _max?: Tbl_paymentsMaxAggregateInputType
}

export type Tbl_paymentsGroupByOutputType = {
  pay_ID: number
  pay_user: string | null
  pay_amount: number | null
  pay_phone: string | null
  pay_email: string | null
  pay_refID: string | null
  pay_token: string | null
  pay_date: string | null
  pay_url: string | null
  pay_order_Id: string | null
  pay_method: string | null
  paid_ref: string | null
  paid_transId: string | null
  paid_date: string | null
  pay_status: string | null
  pay_today: string | null
  pay_types: string | null
  sh_usr_ID: number | null
  sh_pro_Id: number | null
  _count: Tbl_paymentsCountAggregateOutputType | null
  _avg: Tbl_paymentsAvgAggregateOutputType | null
  _sum: Tbl_paymentsSumAggregateOutputType | null
  _min: Tbl_paymentsMinAggregateOutputType | null
  _max: Tbl_paymentsMaxAggregateOutputType | null
}

type GetTbl_paymentsGroupByPayload<T extends tbl_paymentsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Tbl_paymentsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Tbl_paymentsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Tbl_paymentsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Tbl_paymentsGroupByOutputType[P]>
      }
    >
  >



export type tbl_paymentsWhereInput = {
  AND?: Prisma.tbl_paymentsWhereInput | Prisma.tbl_paymentsWhereInput[]
  OR?: Prisma.tbl_paymentsWhereInput[]
  NOT?: Prisma.tbl_paymentsWhereInput | Prisma.tbl_paymentsWhereInput[]
  pay_ID?: Prisma.IntFilter<"tbl_payments"> | number
  pay_user?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_amount?: Prisma.FloatNullableFilter<"tbl_payments"> | number | null
  pay_phone?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_email?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_refID?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_token?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_date?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_url?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_order_Id?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_method?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  paid_ref?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  paid_transId?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  paid_date?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_status?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_today?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_types?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  sh_usr_ID?: Prisma.IntNullableFilter<"tbl_payments"> | number | null
  sh_pro_Id?: Prisma.IntNullableFilter<"tbl_payments"> | number | null
}

export type tbl_paymentsOrderByWithRelationInput = {
  pay_ID?: Prisma.SortOrder
  pay_user?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_amount?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_phone?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_email?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_refID?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_token?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_date?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_url?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_order_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_method?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_ref?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_transId?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_date?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_status?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_today?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_types?: Prisma.SortOrderInput | Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrderInput | Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.tbl_paymentsOrderByRelevanceInput
}

export type tbl_paymentsWhereUniqueInput = Prisma.AtLeast<{
  pay_ID?: number
  AND?: Prisma.tbl_paymentsWhereInput | Prisma.tbl_paymentsWhereInput[]
  OR?: Prisma.tbl_paymentsWhereInput[]
  NOT?: Prisma.tbl_paymentsWhereInput | Prisma.tbl_paymentsWhereInput[]
  pay_user?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_amount?: Prisma.FloatNullableFilter<"tbl_payments"> | number | null
  pay_phone?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_email?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_refID?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_token?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_date?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_url?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_order_Id?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_method?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  paid_ref?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  paid_transId?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  paid_date?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_status?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_today?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  pay_types?: Prisma.StringNullableFilter<"tbl_payments"> | string | null
  sh_usr_ID?: Prisma.IntNullableFilter<"tbl_payments"> | number | null
  sh_pro_Id?: Prisma.IntNullableFilter<"tbl_payments"> | number | null
}, "pay_ID">

export type tbl_paymentsOrderByWithAggregationInput = {
  pay_ID?: Prisma.SortOrder
  pay_user?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_amount?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_phone?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_email?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_refID?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_token?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_date?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_url?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_order_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_method?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_ref?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_transId?: Prisma.SortOrderInput | Prisma.SortOrder
  paid_date?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_status?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_today?: Prisma.SortOrderInput | Prisma.SortOrder
  pay_types?: Prisma.SortOrderInput | Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrderInput | Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.tbl_paymentsCountOrderByAggregateInput
  _avg?: Prisma.tbl_paymentsAvgOrderByAggregateInput
  _max?: Prisma.tbl_paymentsMaxOrderByAggregateInput
  _min?: Prisma.tbl_paymentsMinOrderByAggregateInput
  _sum?: Prisma.tbl_paymentsSumOrderByAggregateInput
}

export type tbl_paymentsScalarWhereWithAggregatesInput = {
  AND?: Prisma.tbl_paymentsScalarWhereWithAggregatesInput | Prisma.tbl_paymentsScalarWhereWithAggregatesInput[]
  OR?: Prisma.tbl_paymentsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.tbl_paymentsScalarWhereWithAggregatesInput | Prisma.tbl_paymentsScalarWhereWithAggregatesInput[]
  pay_ID?: Prisma.IntWithAggregatesFilter<"tbl_payments"> | number
  pay_user?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_amount?: Prisma.FloatNullableWithAggregatesFilter<"tbl_payments"> | number | null
  pay_phone?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_email?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_refID?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_token?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_date?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_url?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_order_Id?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_method?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  paid_ref?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  paid_transId?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  paid_date?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_status?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_today?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  pay_types?: Prisma.StringNullableWithAggregatesFilter<"tbl_payments"> | string | null
  sh_usr_ID?: Prisma.IntNullableWithAggregatesFilter<"tbl_payments"> | number | null
  sh_pro_Id?: Prisma.IntNullableWithAggregatesFilter<"tbl_payments"> | number | null
}

export type tbl_paymentsCreateInput = {
  pay_user?: string | null
  pay_amount?: number | null
  pay_phone?: string | null
  pay_email?: string | null
  pay_refID?: string | null
  pay_token?: string | null
  pay_date?: string | null
  pay_url?: string | null
  pay_order_Id?: string | null
  pay_method?: string | null
  paid_ref?: string | null
  paid_transId?: string | null
  paid_date?: string | null
  pay_status?: string | null
  pay_today?: string | null
  pay_types?: string | null
  sh_usr_ID?: number | null
  sh_pro_Id?: number | null
}

export type tbl_paymentsUncheckedCreateInput = {
  pay_ID?: number
  pay_user?: string | null
  pay_amount?: number | null
  pay_phone?: string | null
  pay_email?: string | null
  pay_refID?: string | null
  pay_token?: string | null
  pay_date?: string | null
  pay_url?: string | null
  pay_order_Id?: string | null
  pay_method?: string | null
  paid_ref?: string | null
  paid_transId?: string | null
  paid_date?: string | null
  pay_status?: string | null
  pay_today?: string | null
  pay_types?: string | null
  sh_usr_ID?: number | null
  sh_pro_Id?: number | null
}

export type tbl_paymentsUpdateInput = {
  pay_user?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_amount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  pay_phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_refID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_token?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_order_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_method?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_ref?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_transId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_today?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_types?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sh_usr_ID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sh_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_paymentsUncheckedUpdateInput = {
  pay_ID?: Prisma.IntFieldUpdateOperationsInput | number
  pay_user?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_amount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  pay_phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_refID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_token?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_order_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_method?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_ref?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_transId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_today?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_types?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sh_usr_ID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sh_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_paymentsCreateManyInput = {
  pay_ID?: number
  pay_user?: string | null
  pay_amount?: number | null
  pay_phone?: string | null
  pay_email?: string | null
  pay_refID?: string | null
  pay_token?: string | null
  pay_date?: string | null
  pay_url?: string | null
  pay_order_Id?: string | null
  pay_method?: string | null
  paid_ref?: string | null
  paid_transId?: string | null
  paid_date?: string | null
  pay_status?: string | null
  pay_today?: string | null
  pay_types?: string | null
  sh_usr_ID?: number | null
  sh_pro_Id?: number | null
}

export type tbl_paymentsUpdateManyMutationInput = {
  pay_user?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_amount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  pay_phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_refID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_token?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_order_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_method?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_ref?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_transId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_today?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_types?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sh_usr_ID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sh_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_paymentsUncheckedUpdateManyInput = {
  pay_ID?: Prisma.IntFieldUpdateOperationsInput | number
  pay_user?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_amount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  pay_phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_refID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_token?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_order_Id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_method?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_ref?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_transId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  paid_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_today?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pay_types?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sh_usr_ID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sh_pro_Id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type tbl_paymentsOrderByRelevanceInput = {
  fields: Prisma.tbl_paymentsOrderByRelevanceFieldEnum | Prisma.tbl_paymentsOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type tbl_paymentsCountOrderByAggregateInput = {
  pay_ID?: Prisma.SortOrder
  pay_user?: Prisma.SortOrder
  pay_amount?: Prisma.SortOrder
  pay_phone?: Prisma.SortOrder
  pay_email?: Prisma.SortOrder
  pay_refID?: Prisma.SortOrder
  pay_token?: Prisma.SortOrder
  pay_date?: Prisma.SortOrder
  pay_url?: Prisma.SortOrder
  pay_order_Id?: Prisma.SortOrder
  pay_method?: Prisma.SortOrder
  paid_ref?: Prisma.SortOrder
  paid_transId?: Prisma.SortOrder
  paid_date?: Prisma.SortOrder
  pay_status?: Prisma.SortOrder
  pay_today?: Prisma.SortOrder
  pay_types?: Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrder
}

export type tbl_paymentsAvgOrderByAggregateInput = {
  pay_ID?: Prisma.SortOrder
  pay_amount?: Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrder
}

export type tbl_paymentsMaxOrderByAggregateInput = {
  pay_ID?: Prisma.SortOrder
  pay_user?: Prisma.SortOrder
  pay_amount?: Prisma.SortOrder
  pay_phone?: Prisma.SortOrder
  pay_email?: Prisma.SortOrder
  pay_refID?: Prisma.SortOrder
  pay_token?: Prisma.SortOrder
  pay_date?: Prisma.SortOrder
  pay_url?: Prisma.SortOrder
  pay_order_Id?: Prisma.SortOrder
  pay_method?: Prisma.SortOrder
  paid_ref?: Prisma.SortOrder
  paid_transId?: Prisma.SortOrder
  paid_date?: Prisma.SortOrder
  pay_status?: Prisma.SortOrder
  pay_today?: Prisma.SortOrder
  pay_types?: Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrder
}

export type tbl_paymentsMinOrderByAggregateInput = {
  pay_ID?: Prisma.SortOrder
  pay_user?: Prisma.SortOrder
  pay_amount?: Prisma.SortOrder
  pay_phone?: Prisma.SortOrder
  pay_email?: Prisma.SortOrder
  pay_refID?: Prisma.SortOrder
  pay_token?: Prisma.SortOrder
  pay_date?: Prisma.SortOrder
  pay_url?: Prisma.SortOrder
  pay_order_Id?: Prisma.SortOrder
  pay_method?: Prisma.SortOrder
  paid_ref?: Prisma.SortOrder
  paid_transId?: Prisma.SortOrder
  paid_date?: Prisma.SortOrder
  pay_status?: Prisma.SortOrder
  pay_today?: Prisma.SortOrder
  pay_types?: Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrder
}

export type tbl_paymentsSumOrderByAggregateInput = {
  pay_ID?: Prisma.SortOrder
  pay_amount?: Prisma.SortOrder
  sh_usr_ID?: Prisma.SortOrder
  sh_pro_Id?: Prisma.SortOrder
}



export type tbl_paymentsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  pay_ID?: boolean
  pay_user?: boolean
  pay_amount?: boolean
  pay_phone?: boolean
  pay_email?: boolean
  pay_refID?: boolean
  pay_token?: boolean
  pay_date?: boolean
  pay_url?: boolean
  pay_order_Id?: boolean
  pay_method?: boolean
  paid_ref?: boolean
  paid_transId?: boolean
  paid_date?: boolean
  pay_status?: boolean
  pay_today?: boolean
  pay_types?: boolean
  sh_usr_ID?: boolean
  sh_pro_Id?: boolean
}, ExtArgs["result"]["tbl_payments"]>



export type tbl_paymentsSelectScalar = {
  pay_ID?: boolean
  pay_user?: boolean
  pay_amount?: boolean
  pay_phone?: boolean
  pay_email?: boolean
  pay_refID?: boolean
  pay_token?: boolean
  pay_date?: boolean
  pay_url?: boolean
  pay_order_Id?: boolean
  pay_method?: boolean
  paid_ref?: boolean
  paid_transId?: boolean
  paid_date?: boolean
  pay_status?: boolean
  pay_today?: boolean
  pay_types?: boolean
  sh_usr_ID?: boolean
  sh_pro_Id?: boolean
}

export type tbl_paymentsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"pay_ID" | "pay_user" | "pay_amount" | "pay_phone" | "pay_email" | "pay_refID" | "pay_token" | "pay_date" | "pay_url" | "pay_order_Id" | "pay_method" | "paid_ref" | "paid_transId" | "paid_date" | "pay_status" | "pay_today" | "pay_types" | "sh_usr_ID" | "sh_pro_Id", ExtArgs["result"]["tbl_payments"]>

export type $tbl_paymentsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "tbl_payments"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    pay_ID: number
    pay_user: string | null
    pay_amount: number | null
    pay_phone: string | null
    pay_email: string | null
    pay_refID: string | null
    pay_token: string | null
    pay_date: string | null
    pay_url: string | null
    pay_order_Id: string | null
    pay_method: string | null
    paid_ref: string | null
    paid_transId: string | null
    paid_date: string | null
    pay_status: string | null
    pay_today: string | null
    pay_types: string | null
    sh_usr_ID: number | null
    sh_pro_Id: number | null
  }, ExtArgs["result"]["tbl_payments"]>
  composites: {}
}

export type tbl_paymentsGetPayload<S extends boolean | null | undefined | tbl_paymentsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload, S>

export type tbl_paymentsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<tbl_paymentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Tbl_paymentsCountAggregateInputType | true
  }

export interface tbl_paymentsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_payments'], meta: { name: 'tbl_payments' } }
  /**
   * Find zero or one Tbl_payments that matches the filter.
   * @param {tbl_paymentsFindUniqueArgs} args - Arguments to find a Tbl_payments
   * @example
   * // Get one Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends tbl_paymentsFindUniqueArgs>(args: Prisma.SelectSubset<T, tbl_paymentsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Tbl_payments that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {tbl_paymentsFindUniqueOrThrowArgs} args - Arguments to find a Tbl_payments
   * @example
   * // Get one Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends tbl_paymentsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, tbl_paymentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_payments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_paymentsFindFirstArgs} args - Arguments to find a Tbl_payments
   * @example
   * // Get one Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends tbl_paymentsFindFirstArgs>(args?: Prisma.SelectSubset<T, tbl_paymentsFindFirstArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tbl_payments that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_paymentsFindFirstOrThrowArgs} args - Arguments to find a Tbl_payments
   * @example
   * // Get one Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends tbl_paymentsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, tbl_paymentsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Tbl_payments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_paymentsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.findMany()
   * 
   * // Get first 10 Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.findMany({ take: 10 })
   * 
   * // Only select the `pay_ID`
   * const tbl_paymentsWithPay_IDOnly = await prisma.tbl_payments.findMany({ select: { pay_ID: true } })
   * 
   */
  findMany<T extends tbl_paymentsFindManyArgs>(args?: Prisma.SelectSubset<T, tbl_paymentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Tbl_payments.
   * @param {tbl_paymentsCreateArgs} args - Arguments to create a Tbl_payments.
   * @example
   * // Create one Tbl_payments
   * const Tbl_payments = await prisma.tbl_payments.create({
   *   data: {
   *     // ... data to create a Tbl_payments
   *   }
   * })
   * 
   */
  create<T extends tbl_paymentsCreateArgs>(args: Prisma.SelectSubset<T, tbl_paymentsCreateArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Tbl_payments.
   * @param {tbl_paymentsCreateManyArgs} args - Arguments to create many Tbl_payments.
   * @example
   * // Create many Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends tbl_paymentsCreateManyArgs>(args?: Prisma.SelectSubset<T, tbl_paymentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Tbl_payments.
   * @param {tbl_paymentsDeleteArgs} args - Arguments to delete one Tbl_payments.
   * @example
   * // Delete one Tbl_payments
   * const Tbl_payments = await prisma.tbl_payments.delete({
   *   where: {
   *     // ... filter to delete one Tbl_payments
   *   }
   * })
   * 
   */
  delete<T extends tbl_paymentsDeleteArgs>(args: Prisma.SelectSubset<T, tbl_paymentsDeleteArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Tbl_payments.
   * @param {tbl_paymentsUpdateArgs} args - Arguments to update one Tbl_payments.
   * @example
   * // Update one Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends tbl_paymentsUpdateArgs>(args: Prisma.SelectSubset<T, tbl_paymentsUpdateArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Tbl_payments.
   * @param {tbl_paymentsDeleteManyArgs} args - Arguments to filter Tbl_payments to delete.
   * @example
   * // Delete a few Tbl_payments
   * const { count } = await prisma.tbl_payments.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends tbl_paymentsDeleteManyArgs>(args?: Prisma.SelectSubset<T, tbl_paymentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Tbl_payments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_paymentsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends tbl_paymentsUpdateManyArgs>(args: Prisma.SelectSubset<T, tbl_paymentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Tbl_payments.
   * @param {tbl_paymentsUpsertArgs} args - Arguments to update or create a Tbl_payments.
   * @example
   * // Update or create a Tbl_payments
   * const tbl_payments = await prisma.tbl_payments.upsert({
   *   create: {
   *     // ... data to create a Tbl_payments
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Tbl_payments we want to update
   *   }
   * })
   */
  upsert<T extends tbl_paymentsUpsertArgs>(args: Prisma.SelectSubset<T, tbl_paymentsUpsertArgs<ExtArgs>>): Prisma.Prisma__tbl_paymentsClient<runtime.Types.Result.GetResult<Prisma.$tbl_paymentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Tbl_payments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_paymentsCountArgs} args - Arguments to filter Tbl_payments to count.
   * @example
   * // Count the number of Tbl_payments
   * const count = await prisma.tbl_payments.count({
   *   where: {
   *     // ... the filter for the Tbl_payments we want to count
   *   }
   * })
  **/
  count<T extends tbl_paymentsCountArgs>(
    args?: Prisma.Subset<T, tbl_paymentsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Tbl_paymentsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Tbl_payments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Tbl_paymentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Tbl_paymentsAggregateArgs>(args: Prisma.Subset<T, Tbl_paymentsAggregateArgs>): Prisma.PrismaPromise<GetTbl_paymentsAggregateType<T>>

  /**
   * Group by Tbl_payments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {tbl_paymentsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends tbl_paymentsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: tbl_paymentsGroupByArgs['orderBy'] }
      : { orderBy?: tbl_paymentsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, tbl_paymentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_paymentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the tbl_payments model
 */
readonly fields: tbl_paymentsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for tbl_payments.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__tbl_paymentsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the tbl_payments model
 */
export interface tbl_paymentsFieldRefs {
  readonly pay_ID: Prisma.FieldRef<"tbl_payments", 'Int'>
  readonly pay_user: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_amount: Prisma.FieldRef<"tbl_payments", 'Float'>
  readonly pay_phone: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_email: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_refID: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_token: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_date: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_url: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_order_Id: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_method: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly paid_ref: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly paid_transId: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly paid_date: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_status: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_today: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly pay_types: Prisma.FieldRef<"tbl_payments", 'String'>
  readonly sh_usr_ID: Prisma.FieldRef<"tbl_payments", 'Int'>
  readonly sh_pro_Id: Prisma.FieldRef<"tbl_payments", 'Int'>
}
    

// Custom InputTypes
/**
 * tbl_payments findUnique
 */
export type tbl_paymentsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * Filter, which tbl_payments to fetch.
   */
  where: Prisma.tbl_paymentsWhereUniqueInput
}

/**
 * tbl_payments findUniqueOrThrow
 */
export type tbl_paymentsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * Filter, which tbl_payments to fetch.
   */
  where: Prisma.tbl_paymentsWhereUniqueInput
}

/**
 * tbl_payments findFirst
 */
export type tbl_paymentsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * Filter, which tbl_payments to fetch.
   */
  where?: Prisma.tbl_paymentsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_payments to fetch.
   */
  orderBy?: Prisma.tbl_paymentsOrderByWithRelationInput | Prisma.tbl_paymentsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_payments.
   */
  cursor?: Prisma.tbl_paymentsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_payments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_payments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_payments.
   */
  distinct?: Prisma.Tbl_paymentsScalarFieldEnum | Prisma.Tbl_paymentsScalarFieldEnum[]
}

/**
 * tbl_payments findFirstOrThrow
 */
export type tbl_paymentsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * Filter, which tbl_payments to fetch.
   */
  where?: Prisma.tbl_paymentsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_payments to fetch.
   */
  orderBy?: Prisma.tbl_paymentsOrderByWithRelationInput | Prisma.tbl_paymentsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for tbl_payments.
   */
  cursor?: Prisma.tbl_paymentsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_payments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_payments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of tbl_payments.
   */
  distinct?: Prisma.Tbl_paymentsScalarFieldEnum | Prisma.Tbl_paymentsScalarFieldEnum[]
}

/**
 * tbl_payments findMany
 */
export type tbl_paymentsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * Filter, which tbl_payments to fetch.
   */
  where?: Prisma.tbl_paymentsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of tbl_payments to fetch.
   */
  orderBy?: Prisma.tbl_paymentsOrderByWithRelationInput | Prisma.tbl_paymentsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing tbl_payments.
   */
  cursor?: Prisma.tbl_paymentsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` tbl_payments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` tbl_payments.
   */
  skip?: number
  distinct?: Prisma.Tbl_paymentsScalarFieldEnum | Prisma.Tbl_paymentsScalarFieldEnum[]
}

/**
 * tbl_payments create
 */
export type tbl_paymentsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * The data needed to create a tbl_payments.
   */
  data?: Prisma.XOR<Prisma.tbl_paymentsCreateInput, Prisma.tbl_paymentsUncheckedCreateInput>
}

/**
 * tbl_payments createMany
 */
export type tbl_paymentsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many tbl_payments.
   */
  data: Prisma.tbl_paymentsCreateManyInput | Prisma.tbl_paymentsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * tbl_payments update
 */
export type tbl_paymentsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * The data needed to update a tbl_payments.
   */
  data: Prisma.XOR<Prisma.tbl_paymentsUpdateInput, Prisma.tbl_paymentsUncheckedUpdateInput>
  /**
   * Choose, which tbl_payments to update.
   */
  where: Prisma.tbl_paymentsWhereUniqueInput
}

/**
 * tbl_payments updateMany
 */
export type tbl_paymentsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update tbl_payments.
   */
  data: Prisma.XOR<Prisma.tbl_paymentsUpdateManyMutationInput, Prisma.tbl_paymentsUncheckedUpdateManyInput>
  /**
   * Filter which tbl_payments to update
   */
  where?: Prisma.tbl_paymentsWhereInput
  /**
   * Limit how many tbl_payments to update.
   */
  limit?: number
}

/**
 * tbl_payments upsert
 */
export type tbl_paymentsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * The filter to search for the tbl_payments to update in case it exists.
   */
  where: Prisma.tbl_paymentsWhereUniqueInput
  /**
   * In case the tbl_payments found by the `where` argument doesn't exist, create a new tbl_payments with this data.
   */
  create: Prisma.XOR<Prisma.tbl_paymentsCreateInput, Prisma.tbl_paymentsUncheckedCreateInput>
  /**
   * In case the tbl_payments was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.tbl_paymentsUpdateInput, Prisma.tbl_paymentsUncheckedUpdateInput>
}

/**
 * tbl_payments delete
 */
export type tbl_paymentsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
  /**
   * Filter which tbl_payments to delete.
   */
  where: Prisma.tbl_paymentsWhereUniqueInput
}

/**
 * tbl_payments deleteMany
 */
export type tbl_paymentsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which tbl_payments to delete
   */
  where?: Prisma.tbl_paymentsWhereInput
  /**
   * Limit how many tbl_payments to delete.
   */
  limit?: number
}

/**
 * tbl_payments without action
 */
export type tbl_paymentsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tbl_payments
   */
  select?: Prisma.tbl_paymentsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tbl_payments
   */
  omit?: Prisma.tbl_paymentsOmit<ExtArgs> | null
}
