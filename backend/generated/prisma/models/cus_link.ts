
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `cus_link` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model cus_link
 * 
 */
export type cus_linkModel = runtime.Types.Result.DefaultSelection<Prisma.$cus_linkPayload>

export type AggregateCus_link = {
  _count: Cus_linkCountAggregateOutputType | null
  _avg: Cus_linkAvgAggregateOutputType | null
  _sum: Cus_linkSumAggregateOutputType | null
  _min: Cus_linkMinAggregateOutputType | null
  _max: Cus_linkMaxAggregateOutputType | null
}

export type Cus_linkAvgAggregateOutputType = {
  ln_ID: number | null
}

export type Cus_linkSumAggregateOutputType = {
  ln_ID: number | null
}

export type Cus_linkMinAggregateOutputType = {
  ln_ID: number | null
  help_link: string | null
  g_link: string | null
  dash_link: string | null
}

export type Cus_linkMaxAggregateOutputType = {
  ln_ID: number | null
  help_link: string | null
  g_link: string | null
  dash_link: string | null
}

export type Cus_linkCountAggregateOutputType = {
  ln_ID: number
  help_link: number
  g_link: number
  dash_link: number
  _all: number
}


export type Cus_linkAvgAggregateInputType = {
  ln_ID?: true
}

export type Cus_linkSumAggregateInputType = {
  ln_ID?: true
}

export type Cus_linkMinAggregateInputType = {
  ln_ID?: true
  help_link?: true
  g_link?: true
  dash_link?: true
}

export type Cus_linkMaxAggregateInputType = {
  ln_ID?: true
  help_link?: true
  g_link?: true
  dash_link?: true
}

export type Cus_linkCountAggregateInputType = {
  ln_ID?: true
  help_link?: true
  g_link?: true
  dash_link?: true
  _all?: true
}

export type Cus_linkAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cus_link to aggregate.
   */
  where?: Prisma.cus_linkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cus_links to fetch.
   */
  orderBy?: Prisma.cus_linkOrderByWithRelationInput | Prisma.cus_linkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.cus_linkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cus_links from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cus_links.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned cus_links
  **/
  _count?: true | Cus_linkCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Cus_linkAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Cus_linkSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Cus_linkMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Cus_linkMaxAggregateInputType
}

export type GetCus_linkAggregateType<T extends Cus_linkAggregateArgs> = {
      [P in keyof T & keyof AggregateCus_link]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCus_link[P]>
    : Prisma.GetScalarType<T[P], AggregateCus_link[P]>
}




export type cus_linkGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.cus_linkWhereInput
  orderBy?: Prisma.cus_linkOrderByWithAggregationInput | Prisma.cus_linkOrderByWithAggregationInput[]
  by: Prisma.Cus_linkScalarFieldEnum[] | Prisma.Cus_linkScalarFieldEnum
  having?: Prisma.cus_linkScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Cus_linkCountAggregateInputType | true
  _avg?: Cus_linkAvgAggregateInputType
  _sum?: Cus_linkSumAggregateInputType
  _min?: Cus_linkMinAggregateInputType
  _max?: Cus_linkMaxAggregateInputType
}

export type Cus_linkGroupByOutputType = {
  ln_ID: number
  help_link: string | null
  g_link: string | null
  dash_link: string
  _count: Cus_linkCountAggregateOutputType | null
  _avg: Cus_linkAvgAggregateOutputType | null
  _sum: Cus_linkSumAggregateOutputType | null
  _min: Cus_linkMinAggregateOutputType | null
  _max: Cus_linkMaxAggregateOutputType | null
}

type GetCus_linkGroupByPayload<T extends cus_linkGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Cus_linkGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Cus_linkGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Cus_linkGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Cus_linkGroupByOutputType[P]>
      }
    >
  >



export type cus_linkWhereInput = {
  AND?: Prisma.cus_linkWhereInput | Prisma.cus_linkWhereInput[]
  OR?: Prisma.cus_linkWhereInput[]
  NOT?: Prisma.cus_linkWhereInput | Prisma.cus_linkWhereInput[]
  ln_ID?: Prisma.IntFilter<"cus_link"> | number
  help_link?: Prisma.StringNullableFilter<"cus_link"> | string | null
  g_link?: Prisma.StringNullableFilter<"cus_link"> | string | null
  dash_link?: Prisma.StringFilter<"cus_link"> | string
}

export type cus_linkOrderByWithRelationInput = {
  ln_ID?: Prisma.SortOrder
  help_link?: Prisma.SortOrderInput | Prisma.SortOrder
  g_link?: Prisma.SortOrderInput | Prisma.SortOrder
  dash_link?: Prisma.SortOrder
  _relevance?: Prisma.cus_linkOrderByRelevanceInput
}

export type cus_linkWhereUniqueInput = Prisma.AtLeast<{
  ln_ID?: number
  AND?: Prisma.cus_linkWhereInput | Prisma.cus_linkWhereInput[]
  OR?: Prisma.cus_linkWhereInput[]
  NOT?: Prisma.cus_linkWhereInput | Prisma.cus_linkWhereInput[]
  help_link?: Prisma.StringNullableFilter<"cus_link"> | string | null
  g_link?: Prisma.StringNullableFilter<"cus_link"> | string | null
  dash_link?: Prisma.StringFilter<"cus_link"> | string
}, "ln_ID">

export type cus_linkOrderByWithAggregationInput = {
  ln_ID?: Prisma.SortOrder
  help_link?: Prisma.SortOrderInput | Prisma.SortOrder
  g_link?: Prisma.SortOrderInput | Prisma.SortOrder
  dash_link?: Prisma.SortOrder
  _count?: Prisma.cus_linkCountOrderByAggregateInput
  _avg?: Prisma.cus_linkAvgOrderByAggregateInput
  _max?: Prisma.cus_linkMaxOrderByAggregateInput
  _min?: Prisma.cus_linkMinOrderByAggregateInput
  _sum?: Prisma.cus_linkSumOrderByAggregateInput
}

export type cus_linkScalarWhereWithAggregatesInput = {
  AND?: Prisma.cus_linkScalarWhereWithAggregatesInput | Prisma.cus_linkScalarWhereWithAggregatesInput[]
  OR?: Prisma.cus_linkScalarWhereWithAggregatesInput[]
  NOT?: Prisma.cus_linkScalarWhereWithAggregatesInput | Prisma.cus_linkScalarWhereWithAggregatesInput[]
  ln_ID?: Prisma.IntWithAggregatesFilter<"cus_link"> | number
  help_link?: Prisma.StringNullableWithAggregatesFilter<"cus_link"> | string | null
  g_link?: Prisma.StringNullableWithAggregatesFilter<"cus_link"> | string | null
  dash_link?: Prisma.StringWithAggregatesFilter<"cus_link"> | string
}

export type cus_linkCreateInput = {
  help_link?: string | null
  g_link?: string | null
  dash_link: string
}

export type cus_linkUncheckedCreateInput = {
  ln_ID?: number
  help_link?: string | null
  g_link?: string | null
  dash_link: string
}

export type cus_linkUpdateInput = {
  help_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  g_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dash_link?: Prisma.StringFieldUpdateOperationsInput | string
}

export type cus_linkUncheckedUpdateInput = {
  ln_ID?: Prisma.IntFieldUpdateOperationsInput | number
  help_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  g_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dash_link?: Prisma.StringFieldUpdateOperationsInput | string
}

export type cus_linkCreateManyInput = {
  ln_ID?: number
  help_link?: string | null
  g_link?: string | null
  dash_link: string
}

export type cus_linkUpdateManyMutationInput = {
  help_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  g_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dash_link?: Prisma.StringFieldUpdateOperationsInput | string
}

export type cus_linkUncheckedUpdateManyInput = {
  ln_ID?: Prisma.IntFieldUpdateOperationsInput | number
  help_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  g_link?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dash_link?: Prisma.StringFieldUpdateOperationsInput | string
}

export type cus_linkOrderByRelevanceInput = {
  fields: Prisma.cus_linkOrderByRelevanceFieldEnum | Prisma.cus_linkOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type cus_linkCountOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  help_link?: Prisma.SortOrder
  g_link?: Prisma.SortOrder
  dash_link?: Prisma.SortOrder
}

export type cus_linkAvgOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
}

export type cus_linkMaxOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  help_link?: Prisma.SortOrder
  g_link?: Prisma.SortOrder
  dash_link?: Prisma.SortOrder
}

export type cus_linkMinOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
  help_link?: Prisma.SortOrder
  g_link?: Prisma.SortOrder
  dash_link?: Prisma.SortOrder
}

export type cus_linkSumOrderByAggregateInput = {
  ln_ID?: Prisma.SortOrder
}



export type cus_linkSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ln_ID?: boolean
  help_link?: boolean
  g_link?: boolean
  dash_link?: boolean
}, ExtArgs["result"]["cus_link"]>



export type cus_linkSelectScalar = {
  ln_ID?: boolean
  help_link?: boolean
  g_link?: boolean
  dash_link?: boolean
}

export type cus_linkOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"ln_ID" | "help_link" | "g_link" | "dash_link", ExtArgs["result"]["cus_link"]>

export type $cus_linkPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "cus_link"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    ln_ID: number
    help_link: string | null
    g_link: string | null
    dash_link: string
  }, ExtArgs["result"]["cus_link"]>
  composites: {}
}

export type cus_linkGetPayload<S extends boolean | null | undefined | cus_linkDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$cus_linkPayload, S>

export type cus_linkCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<cus_linkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Cus_linkCountAggregateInputType | true
  }

export interface cus_linkDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cus_link'], meta: { name: 'cus_link' } }
  /**
   * Find zero or one Cus_link that matches the filter.
   * @param {cus_linkFindUniqueArgs} args - Arguments to find a Cus_link
   * @example
   * // Get one Cus_link
   * const cus_link = await prisma.cus_link.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends cus_linkFindUniqueArgs>(args: Prisma.SelectSubset<T, cus_linkFindUniqueArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Cus_link that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {cus_linkFindUniqueOrThrowArgs} args - Arguments to find a Cus_link
   * @example
   * // Get one Cus_link
   * const cus_link = await prisma.cus_link.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends cus_linkFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, cus_linkFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cus_link that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cus_linkFindFirstArgs} args - Arguments to find a Cus_link
   * @example
   * // Get one Cus_link
   * const cus_link = await prisma.cus_link.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends cus_linkFindFirstArgs>(args?: Prisma.SelectSubset<T, cus_linkFindFirstArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cus_link that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cus_linkFindFirstOrThrowArgs} args - Arguments to find a Cus_link
   * @example
   * // Get one Cus_link
   * const cus_link = await prisma.cus_link.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends cus_linkFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, cus_linkFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Cus_links that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cus_linkFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Cus_links
   * const cus_links = await prisma.cus_link.findMany()
   * 
   * // Get first 10 Cus_links
   * const cus_links = await prisma.cus_link.findMany({ take: 10 })
   * 
   * // Only select the `ln_ID`
   * const cus_linkWithLn_IDOnly = await prisma.cus_link.findMany({ select: { ln_ID: true } })
   * 
   */
  findMany<T extends cus_linkFindManyArgs>(args?: Prisma.SelectSubset<T, cus_linkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Cus_link.
   * @param {cus_linkCreateArgs} args - Arguments to create a Cus_link.
   * @example
   * // Create one Cus_link
   * const Cus_link = await prisma.cus_link.create({
   *   data: {
   *     // ... data to create a Cus_link
   *   }
   * })
   * 
   */
  create<T extends cus_linkCreateArgs>(args: Prisma.SelectSubset<T, cus_linkCreateArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Cus_links.
   * @param {cus_linkCreateManyArgs} args - Arguments to create many Cus_links.
   * @example
   * // Create many Cus_links
   * const cus_link = await prisma.cus_link.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends cus_linkCreateManyArgs>(args?: Prisma.SelectSubset<T, cus_linkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Cus_link.
   * @param {cus_linkDeleteArgs} args - Arguments to delete one Cus_link.
   * @example
   * // Delete one Cus_link
   * const Cus_link = await prisma.cus_link.delete({
   *   where: {
   *     // ... filter to delete one Cus_link
   *   }
   * })
   * 
   */
  delete<T extends cus_linkDeleteArgs>(args: Prisma.SelectSubset<T, cus_linkDeleteArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Cus_link.
   * @param {cus_linkUpdateArgs} args - Arguments to update one Cus_link.
   * @example
   * // Update one Cus_link
   * const cus_link = await prisma.cus_link.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends cus_linkUpdateArgs>(args: Prisma.SelectSubset<T, cus_linkUpdateArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Cus_links.
   * @param {cus_linkDeleteManyArgs} args - Arguments to filter Cus_links to delete.
   * @example
   * // Delete a few Cus_links
   * const { count } = await prisma.cus_link.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends cus_linkDeleteManyArgs>(args?: Prisma.SelectSubset<T, cus_linkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Cus_links.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cus_linkUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Cus_links
   * const cus_link = await prisma.cus_link.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends cus_linkUpdateManyArgs>(args: Prisma.SelectSubset<T, cus_linkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Cus_link.
   * @param {cus_linkUpsertArgs} args - Arguments to update or create a Cus_link.
   * @example
   * // Update or create a Cus_link
   * const cus_link = await prisma.cus_link.upsert({
   *   create: {
   *     // ... data to create a Cus_link
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Cus_link we want to update
   *   }
   * })
   */
  upsert<T extends cus_linkUpsertArgs>(args: Prisma.SelectSubset<T, cus_linkUpsertArgs<ExtArgs>>): Prisma.Prisma__cus_linkClient<runtime.Types.Result.GetResult<Prisma.$cus_linkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Cus_links.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cus_linkCountArgs} args - Arguments to filter Cus_links to count.
   * @example
   * // Count the number of Cus_links
   * const count = await prisma.cus_link.count({
   *   where: {
   *     // ... the filter for the Cus_links we want to count
   *   }
   * })
  **/
  count<T extends cus_linkCountArgs>(
    args?: Prisma.Subset<T, cus_linkCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Cus_linkCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Cus_link.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Cus_linkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Cus_linkAggregateArgs>(args: Prisma.Subset<T, Cus_linkAggregateArgs>): Prisma.PrismaPromise<GetCus_linkAggregateType<T>>

  /**
   * Group by Cus_link.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cus_linkGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends cus_linkGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: cus_linkGroupByArgs['orderBy'] }
      : { orderBy?: cus_linkGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, cus_linkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCus_linkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the cus_link model
 */
readonly fields: cus_linkFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for cus_link.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__cus_linkClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the cus_link model
 */
export interface cus_linkFieldRefs {
  readonly ln_ID: Prisma.FieldRef<"cus_link", 'Int'>
  readonly help_link: Prisma.FieldRef<"cus_link", 'String'>
  readonly g_link: Prisma.FieldRef<"cus_link", 'String'>
  readonly dash_link: Prisma.FieldRef<"cus_link", 'String'>
}
    

// Custom InputTypes
/**
 * cus_link findUnique
 */
export type cus_linkFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * Filter, which cus_link to fetch.
   */
  where: Prisma.cus_linkWhereUniqueInput
}

/**
 * cus_link findUniqueOrThrow
 */
export type cus_linkFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * Filter, which cus_link to fetch.
   */
  where: Prisma.cus_linkWhereUniqueInput
}

/**
 * cus_link findFirst
 */
export type cus_linkFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * Filter, which cus_link to fetch.
   */
  where?: Prisma.cus_linkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cus_links to fetch.
   */
  orderBy?: Prisma.cus_linkOrderByWithRelationInput | Prisma.cus_linkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cus_links.
   */
  cursor?: Prisma.cus_linkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cus_links from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cus_links.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cus_links.
   */
  distinct?: Prisma.Cus_linkScalarFieldEnum | Prisma.Cus_linkScalarFieldEnum[]
}

/**
 * cus_link findFirstOrThrow
 */
export type cus_linkFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * Filter, which cus_link to fetch.
   */
  where?: Prisma.cus_linkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cus_links to fetch.
   */
  orderBy?: Prisma.cus_linkOrderByWithRelationInput | Prisma.cus_linkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cus_links.
   */
  cursor?: Prisma.cus_linkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cus_links from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cus_links.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cus_links.
   */
  distinct?: Prisma.Cus_linkScalarFieldEnum | Prisma.Cus_linkScalarFieldEnum[]
}

/**
 * cus_link findMany
 */
export type cus_linkFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * Filter, which cus_links to fetch.
   */
  where?: Prisma.cus_linkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cus_links to fetch.
   */
  orderBy?: Prisma.cus_linkOrderByWithRelationInput | Prisma.cus_linkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing cus_links.
   */
  cursor?: Prisma.cus_linkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cus_links from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cus_links.
   */
  skip?: number
  distinct?: Prisma.Cus_linkScalarFieldEnum | Prisma.Cus_linkScalarFieldEnum[]
}

/**
 * cus_link create
 */
export type cus_linkCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * The data needed to create a cus_link.
   */
  data: Prisma.XOR<Prisma.cus_linkCreateInput, Prisma.cus_linkUncheckedCreateInput>
}

/**
 * cus_link createMany
 */
export type cus_linkCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many cus_links.
   */
  data: Prisma.cus_linkCreateManyInput | Prisma.cus_linkCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * cus_link update
 */
export type cus_linkUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * The data needed to update a cus_link.
   */
  data: Prisma.XOR<Prisma.cus_linkUpdateInput, Prisma.cus_linkUncheckedUpdateInput>
  /**
   * Choose, which cus_link to update.
   */
  where: Prisma.cus_linkWhereUniqueInput
}

/**
 * cus_link updateMany
 */
export type cus_linkUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update cus_links.
   */
  data: Prisma.XOR<Prisma.cus_linkUpdateManyMutationInput, Prisma.cus_linkUncheckedUpdateManyInput>
  /**
   * Filter which cus_links to update
   */
  where?: Prisma.cus_linkWhereInput
  /**
   * Limit how many cus_links to update.
   */
  limit?: number
}

/**
 * cus_link upsert
 */
export type cus_linkUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * The filter to search for the cus_link to update in case it exists.
   */
  where: Prisma.cus_linkWhereUniqueInput
  /**
   * In case the cus_link found by the `where` argument doesn't exist, create a new cus_link with this data.
   */
  create: Prisma.XOR<Prisma.cus_linkCreateInput, Prisma.cus_linkUncheckedCreateInput>
  /**
   * In case the cus_link was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.cus_linkUpdateInput, Prisma.cus_linkUncheckedUpdateInput>
}

/**
 * cus_link delete
 */
export type cus_linkDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
  /**
   * Filter which cus_link to delete.
   */
  where: Prisma.cus_linkWhereUniqueInput
}

/**
 * cus_link deleteMany
 */
export type cus_linkDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cus_links to delete
   */
  where?: Prisma.cus_linkWhereInput
  /**
   * Limit how many cus_links to delete.
   */
  limit?: number
}

/**
 * cus_link without action
 */
export type cus_linkDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cus_link
   */
  select?: Prisma.cus_linkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cus_link
   */
  omit?: Prisma.cus_linkOmit<ExtArgs> | null
}
