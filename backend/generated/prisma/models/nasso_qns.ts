
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `nasso_qns` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model nasso_qns
 * 
 */
export type nasso_qnsModel = runtime.Types.Result.DefaultSelection<Prisma.$nasso_qnsPayload>

export type AggregateNasso_qns = {
  _count: Nasso_qnsCountAggregateOutputType | null
  _avg: Nasso_qnsAvgAggregateOutputType | null
  _sum: Nasso_qnsSumAggregateOutputType | null
  _min: Nasso_qnsMinAggregateOutputType | null
  _max: Nasso_qnsMaxAggregateOutputType | null
}

export type Nasso_qnsAvgAggregateOutputType = {
  qns_Id: number | null
  quiz_Id: number | null
}

export type Nasso_qnsSumAggregateOutputType = {
  qns_Id: number | null
  quiz_Id: number | null
}

export type Nasso_qnsMinAggregateOutputType = {
  qns_Id: number | null
  qns_name: string | null
  quiz_Id: number | null
}

export type Nasso_qnsMaxAggregateOutputType = {
  qns_Id: number | null
  qns_name: string | null
  quiz_Id: number | null
}

export type Nasso_qnsCountAggregateOutputType = {
  qns_Id: number
  qns_name: number
  quiz_Id: number
  _all: number
}


export type Nasso_qnsAvgAggregateInputType = {
  qns_Id?: true
  quiz_Id?: true
}

export type Nasso_qnsSumAggregateInputType = {
  qns_Id?: true
  quiz_Id?: true
}

export type Nasso_qnsMinAggregateInputType = {
  qns_Id?: true
  qns_name?: true
  quiz_Id?: true
}

export type Nasso_qnsMaxAggregateInputType = {
  qns_Id?: true
  qns_name?: true
  quiz_Id?: true
}

export type Nasso_qnsCountAggregateInputType = {
  qns_Id?: true
  qns_name?: true
  quiz_Id?: true
  _all?: true
}

export type Nasso_qnsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which nasso_qns to aggregate.
   */
  where?: Prisma.nasso_qnsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_qns to fetch.
   */
  orderBy?: Prisma.nasso_qnsOrderByWithRelationInput | Prisma.nasso_qnsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.nasso_qnsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_qns from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_qns.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned nasso_qns
  **/
  _count?: true | Nasso_qnsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Nasso_qnsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Nasso_qnsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Nasso_qnsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Nasso_qnsMaxAggregateInputType
}

export type GetNasso_qnsAggregateType<T extends Nasso_qnsAggregateArgs> = {
      [P in keyof T & keyof AggregateNasso_qns]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateNasso_qns[P]>
    : Prisma.GetScalarType<T[P], AggregateNasso_qns[P]>
}




export type nasso_qnsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.nasso_qnsWhereInput
  orderBy?: Prisma.nasso_qnsOrderByWithAggregationInput | Prisma.nasso_qnsOrderByWithAggregationInput[]
  by: Prisma.Nasso_qnsScalarFieldEnum[] | Prisma.Nasso_qnsScalarFieldEnum
  having?: Prisma.nasso_qnsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Nasso_qnsCountAggregateInputType | true
  _avg?: Nasso_qnsAvgAggregateInputType
  _sum?: Nasso_qnsSumAggregateInputType
  _min?: Nasso_qnsMinAggregateInputType
  _max?: Nasso_qnsMaxAggregateInputType
}

export type Nasso_qnsGroupByOutputType = {
  qns_Id: number
  qns_name: string
  quiz_Id: number
  _count: Nasso_qnsCountAggregateOutputType | null
  _avg: Nasso_qnsAvgAggregateOutputType | null
  _sum: Nasso_qnsSumAggregateOutputType | null
  _min: Nasso_qnsMinAggregateOutputType | null
  _max: Nasso_qnsMaxAggregateOutputType | null
}

type GetNasso_qnsGroupByPayload<T extends nasso_qnsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Nasso_qnsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Nasso_qnsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Nasso_qnsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Nasso_qnsGroupByOutputType[P]>
      }
    >
  >



export type nasso_qnsWhereInput = {
  AND?: Prisma.nasso_qnsWhereInput | Prisma.nasso_qnsWhereInput[]
  OR?: Prisma.nasso_qnsWhereInput[]
  NOT?: Prisma.nasso_qnsWhereInput | Prisma.nasso_qnsWhereInput[]
  qns_Id?: Prisma.IntFilter<"nasso_qns"> | number
  qns_name?: Prisma.StringFilter<"nasso_qns"> | string
  quiz_Id?: Prisma.IntFilter<"nasso_qns"> | number
  nasso_answer?: Prisma.Nasso_answerListRelationFilter
  uza_answers?: Prisma.Uza_answersListRelationFilter
}

export type nasso_qnsOrderByWithRelationInput = {
  qns_Id?: Prisma.SortOrder
  qns_name?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
  nasso_answer?: Prisma.nasso_answerOrderByRelationAggregateInput
  uza_answers?: Prisma.uza_answersOrderByRelationAggregateInput
  _relevance?: Prisma.nasso_qnsOrderByRelevanceInput
}

export type nasso_qnsWhereUniqueInput = Prisma.AtLeast<{
  qns_Id?: number
  AND?: Prisma.nasso_qnsWhereInput | Prisma.nasso_qnsWhereInput[]
  OR?: Prisma.nasso_qnsWhereInput[]
  NOT?: Prisma.nasso_qnsWhereInput | Prisma.nasso_qnsWhereInput[]
  qns_name?: Prisma.StringFilter<"nasso_qns"> | string
  quiz_Id?: Prisma.IntFilter<"nasso_qns"> | number
  nasso_answer?: Prisma.Nasso_answerListRelationFilter
  uza_answers?: Prisma.Uza_answersListRelationFilter
}, "qns_Id">

export type nasso_qnsOrderByWithAggregationInput = {
  qns_Id?: Prisma.SortOrder
  qns_name?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
  _count?: Prisma.nasso_qnsCountOrderByAggregateInput
  _avg?: Prisma.nasso_qnsAvgOrderByAggregateInput
  _max?: Prisma.nasso_qnsMaxOrderByAggregateInput
  _min?: Prisma.nasso_qnsMinOrderByAggregateInput
  _sum?: Prisma.nasso_qnsSumOrderByAggregateInput
}

export type nasso_qnsScalarWhereWithAggregatesInput = {
  AND?: Prisma.nasso_qnsScalarWhereWithAggregatesInput | Prisma.nasso_qnsScalarWhereWithAggregatesInput[]
  OR?: Prisma.nasso_qnsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.nasso_qnsScalarWhereWithAggregatesInput | Prisma.nasso_qnsScalarWhereWithAggregatesInput[]
  qns_Id?: Prisma.IntWithAggregatesFilter<"nasso_qns"> | number
  qns_name?: Prisma.StringWithAggregatesFilter<"nasso_qns"> | string
  quiz_Id?: Prisma.IntWithAggregatesFilter<"nasso_qns"> | number
}

export type nasso_qnsCreateInput = {
  qns_name: string
  quiz_Id: number
  nasso_answer?: Prisma.nasso_answerCreateNestedManyWithoutNasso_qnsInput
  uza_answers?: Prisma.uza_answersCreateNestedManyWithoutNasso_qnsInput
}

export type nasso_qnsUncheckedCreateInput = {
  qns_Id?: number
  qns_name: string
  quiz_Id: number
  nasso_answer?: Prisma.nasso_answerUncheckedCreateNestedManyWithoutNasso_qnsInput
  uza_answers?: Prisma.uza_answersUncheckedCreateNestedManyWithoutNasso_qnsInput
}

export type nasso_qnsUpdateInput = {
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
  nasso_answer?: Prisma.nasso_answerUpdateManyWithoutNasso_qnsNestedInput
  uza_answers?: Prisma.uza_answersUpdateManyWithoutNasso_qnsNestedInput
}

export type nasso_qnsUncheckedUpdateInput = {
  qns_Id?: Prisma.IntFieldUpdateOperationsInput | number
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
  nasso_answer?: Prisma.nasso_answerUncheckedUpdateManyWithoutNasso_qnsNestedInput
  uza_answers?: Prisma.uza_answersUncheckedUpdateManyWithoutNasso_qnsNestedInput
}

export type nasso_qnsCreateManyInput = {
  qns_Id?: number
  qns_name: string
  quiz_Id: number
}

export type nasso_qnsUpdateManyMutationInput = {
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
}

export type nasso_qnsUncheckedUpdateManyInput = {
  qns_Id?: Prisma.IntFieldUpdateOperationsInput | number
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
}

export type Nasso_qnsNullableScalarRelationFilter = {
  is?: Prisma.nasso_qnsWhereInput | null
  isNot?: Prisma.nasso_qnsWhereInput | null
}

export type nasso_qnsOrderByRelevanceInput = {
  fields: Prisma.nasso_qnsOrderByRelevanceFieldEnum | Prisma.nasso_qnsOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type nasso_qnsCountOrderByAggregateInput = {
  qns_Id?: Prisma.SortOrder
  qns_name?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
}

export type nasso_qnsAvgOrderByAggregateInput = {
  qns_Id?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
}

export type nasso_qnsMaxOrderByAggregateInput = {
  qns_Id?: Prisma.SortOrder
  qns_name?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
}

export type nasso_qnsMinOrderByAggregateInput = {
  qns_Id?: Prisma.SortOrder
  qns_name?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
}

export type nasso_qnsSumOrderByAggregateInput = {
  qns_Id?: Prisma.SortOrder
  quiz_Id?: Prisma.SortOrder
}

export type nasso_qnsCreateNestedOneWithoutNasso_answerInput = {
  create?: Prisma.XOR<Prisma.nasso_qnsCreateWithoutNasso_answerInput, Prisma.nasso_qnsUncheckedCreateWithoutNasso_answerInput>
  connectOrCreate?: Prisma.nasso_qnsCreateOrConnectWithoutNasso_answerInput
  connect?: Prisma.nasso_qnsWhereUniqueInput
}

export type nasso_qnsUpdateOneWithoutNasso_answerNestedInput = {
  create?: Prisma.XOR<Prisma.nasso_qnsCreateWithoutNasso_answerInput, Prisma.nasso_qnsUncheckedCreateWithoutNasso_answerInput>
  connectOrCreate?: Prisma.nasso_qnsCreateOrConnectWithoutNasso_answerInput
  upsert?: Prisma.nasso_qnsUpsertWithoutNasso_answerInput
  disconnect?: Prisma.nasso_qnsWhereInput | boolean
  delete?: Prisma.nasso_qnsWhereInput | boolean
  connect?: Prisma.nasso_qnsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.nasso_qnsUpdateToOneWithWhereWithoutNasso_answerInput, Prisma.nasso_qnsUpdateWithoutNasso_answerInput>, Prisma.nasso_qnsUncheckedUpdateWithoutNasso_answerInput>
}

export type nasso_qnsCreateNestedOneWithoutUza_answersInput = {
  create?: Prisma.XOR<Prisma.nasso_qnsCreateWithoutUza_answersInput, Prisma.nasso_qnsUncheckedCreateWithoutUza_answersInput>
  connectOrCreate?: Prisma.nasso_qnsCreateOrConnectWithoutUza_answersInput
  connect?: Prisma.nasso_qnsWhereUniqueInput
}

export type nasso_qnsUpdateOneWithoutUza_answersNestedInput = {
  create?: Prisma.XOR<Prisma.nasso_qnsCreateWithoutUza_answersInput, Prisma.nasso_qnsUncheckedCreateWithoutUza_answersInput>
  connectOrCreate?: Prisma.nasso_qnsCreateOrConnectWithoutUza_answersInput
  upsert?: Prisma.nasso_qnsUpsertWithoutUza_answersInput
  disconnect?: Prisma.nasso_qnsWhereInput | boolean
  delete?: Prisma.nasso_qnsWhereInput | boolean
  connect?: Prisma.nasso_qnsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.nasso_qnsUpdateToOneWithWhereWithoutUza_answersInput, Prisma.nasso_qnsUpdateWithoutUza_answersInput>, Prisma.nasso_qnsUncheckedUpdateWithoutUza_answersInput>
}

export type nasso_qnsCreateWithoutNasso_answerInput = {
  qns_name: string
  quiz_Id: number
  uza_answers?: Prisma.uza_answersCreateNestedManyWithoutNasso_qnsInput
}

export type nasso_qnsUncheckedCreateWithoutNasso_answerInput = {
  qns_Id?: number
  qns_name: string
  quiz_Id: number
  uza_answers?: Prisma.uza_answersUncheckedCreateNestedManyWithoutNasso_qnsInput
}

export type nasso_qnsCreateOrConnectWithoutNasso_answerInput = {
  where: Prisma.nasso_qnsWhereUniqueInput
  create: Prisma.XOR<Prisma.nasso_qnsCreateWithoutNasso_answerInput, Prisma.nasso_qnsUncheckedCreateWithoutNasso_answerInput>
}

export type nasso_qnsUpsertWithoutNasso_answerInput = {
  update: Prisma.XOR<Prisma.nasso_qnsUpdateWithoutNasso_answerInput, Prisma.nasso_qnsUncheckedUpdateWithoutNasso_answerInput>
  create: Prisma.XOR<Prisma.nasso_qnsCreateWithoutNasso_answerInput, Prisma.nasso_qnsUncheckedCreateWithoutNasso_answerInput>
  where?: Prisma.nasso_qnsWhereInput
}

export type nasso_qnsUpdateToOneWithWhereWithoutNasso_answerInput = {
  where?: Prisma.nasso_qnsWhereInput
  data: Prisma.XOR<Prisma.nasso_qnsUpdateWithoutNasso_answerInput, Prisma.nasso_qnsUncheckedUpdateWithoutNasso_answerInput>
}

export type nasso_qnsUpdateWithoutNasso_answerInput = {
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
  uza_answers?: Prisma.uza_answersUpdateManyWithoutNasso_qnsNestedInput
}

export type nasso_qnsUncheckedUpdateWithoutNasso_answerInput = {
  qns_Id?: Prisma.IntFieldUpdateOperationsInput | number
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
  uza_answers?: Prisma.uza_answersUncheckedUpdateManyWithoutNasso_qnsNestedInput
}

export type nasso_qnsCreateWithoutUza_answersInput = {
  qns_name: string
  quiz_Id: number
  nasso_answer?: Prisma.nasso_answerCreateNestedManyWithoutNasso_qnsInput
}

export type nasso_qnsUncheckedCreateWithoutUza_answersInput = {
  qns_Id?: number
  qns_name: string
  quiz_Id: number
  nasso_answer?: Prisma.nasso_answerUncheckedCreateNestedManyWithoutNasso_qnsInput
}

export type nasso_qnsCreateOrConnectWithoutUza_answersInput = {
  where: Prisma.nasso_qnsWhereUniqueInput
  create: Prisma.XOR<Prisma.nasso_qnsCreateWithoutUza_answersInput, Prisma.nasso_qnsUncheckedCreateWithoutUza_answersInput>
}

export type nasso_qnsUpsertWithoutUza_answersInput = {
  update: Prisma.XOR<Prisma.nasso_qnsUpdateWithoutUza_answersInput, Prisma.nasso_qnsUncheckedUpdateWithoutUza_answersInput>
  create: Prisma.XOR<Prisma.nasso_qnsCreateWithoutUza_answersInput, Prisma.nasso_qnsUncheckedCreateWithoutUza_answersInput>
  where?: Prisma.nasso_qnsWhereInput
}

export type nasso_qnsUpdateToOneWithWhereWithoutUza_answersInput = {
  where?: Prisma.nasso_qnsWhereInput
  data: Prisma.XOR<Prisma.nasso_qnsUpdateWithoutUza_answersInput, Prisma.nasso_qnsUncheckedUpdateWithoutUza_answersInput>
}

export type nasso_qnsUpdateWithoutUza_answersInput = {
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
  nasso_answer?: Prisma.nasso_answerUpdateManyWithoutNasso_qnsNestedInput
}

export type nasso_qnsUncheckedUpdateWithoutUza_answersInput = {
  qns_Id?: Prisma.IntFieldUpdateOperationsInput | number
  qns_name?: Prisma.StringFieldUpdateOperationsInput | string
  quiz_Id?: Prisma.IntFieldUpdateOperationsInput | number
  nasso_answer?: Prisma.nasso_answerUncheckedUpdateManyWithoutNasso_qnsNestedInput
}


/**
 * Count Type Nasso_qnsCountOutputType
 */

export type Nasso_qnsCountOutputType = {
  nasso_answer: number
  uza_answers: number
}

export type Nasso_qnsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  nasso_answer?: boolean | Nasso_qnsCountOutputTypeCountNasso_answerArgs
  uza_answers?: boolean | Nasso_qnsCountOutputTypeCountUza_answersArgs
}

/**
 * Nasso_qnsCountOutputType without action
 */
export type Nasso_qnsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Nasso_qnsCountOutputType
   */
  select?: Prisma.Nasso_qnsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Nasso_qnsCountOutputType without action
 */
export type Nasso_qnsCountOutputTypeCountNasso_answerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.nasso_answerWhereInput
}

/**
 * Nasso_qnsCountOutputType without action
 */
export type Nasso_qnsCountOutputTypeCountUza_answersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.uza_answersWhereInput
}


export type nasso_qnsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  qns_Id?: boolean
  qns_name?: boolean
  quiz_Id?: boolean
  nasso_answer?: boolean | Prisma.nasso_qns$nasso_answerArgs<ExtArgs>
  uza_answers?: boolean | Prisma.nasso_qns$uza_answersArgs<ExtArgs>
  _count?: boolean | Prisma.Nasso_qnsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["nasso_qns"]>



export type nasso_qnsSelectScalar = {
  qns_Id?: boolean
  qns_name?: boolean
  quiz_Id?: boolean
}

export type nasso_qnsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"qns_Id" | "qns_name" | "quiz_Id", ExtArgs["result"]["nasso_qns"]>
export type nasso_qnsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  nasso_answer?: boolean | Prisma.nasso_qns$nasso_answerArgs<ExtArgs>
  uza_answers?: boolean | Prisma.nasso_qns$uza_answersArgs<ExtArgs>
  _count?: boolean | Prisma.Nasso_qnsCountOutputTypeDefaultArgs<ExtArgs>
}

export type $nasso_qnsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "nasso_qns"
  objects: {
    nasso_answer: Prisma.$nasso_answerPayload<ExtArgs>[]
    uza_answers: Prisma.$uza_answersPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    qns_Id: number
    qns_name: string
    quiz_Id: number
  }, ExtArgs["result"]["nasso_qns"]>
  composites: {}
}

export type nasso_qnsGetPayload<S extends boolean | null | undefined | nasso_qnsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload, S>

export type nasso_qnsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<nasso_qnsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Nasso_qnsCountAggregateInputType | true
  }

export interface nasso_qnsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nasso_qns'], meta: { name: 'nasso_qns' } }
  /**
   * Find zero or one Nasso_qns that matches the filter.
   * @param {nasso_qnsFindUniqueArgs} args - Arguments to find a Nasso_qns
   * @example
   * // Get one Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends nasso_qnsFindUniqueArgs>(args: Prisma.SelectSubset<T, nasso_qnsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Nasso_qns that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {nasso_qnsFindUniqueOrThrowArgs} args - Arguments to find a Nasso_qns
   * @example
   * // Get one Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends nasso_qnsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, nasso_qnsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Nasso_qns that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_qnsFindFirstArgs} args - Arguments to find a Nasso_qns
   * @example
   * // Get one Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends nasso_qnsFindFirstArgs>(args?: Prisma.SelectSubset<T, nasso_qnsFindFirstArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Nasso_qns that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_qnsFindFirstOrThrowArgs} args - Arguments to find a Nasso_qns
   * @example
   * // Get one Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends nasso_qnsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, nasso_qnsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Nasso_qns that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_qnsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.findMany()
   * 
   * // Get first 10 Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.findMany({ take: 10 })
   * 
   * // Only select the `qns_Id`
   * const nasso_qnsWithQns_IdOnly = await prisma.nasso_qns.findMany({ select: { qns_Id: true } })
   * 
   */
  findMany<T extends nasso_qnsFindManyArgs>(args?: Prisma.SelectSubset<T, nasso_qnsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Nasso_qns.
   * @param {nasso_qnsCreateArgs} args - Arguments to create a Nasso_qns.
   * @example
   * // Create one Nasso_qns
   * const Nasso_qns = await prisma.nasso_qns.create({
   *   data: {
   *     // ... data to create a Nasso_qns
   *   }
   * })
   * 
   */
  create<T extends nasso_qnsCreateArgs>(args: Prisma.SelectSubset<T, nasso_qnsCreateArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Nasso_qns.
   * @param {nasso_qnsCreateManyArgs} args - Arguments to create many Nasso_qns.
   * @example
   * // Create many Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends nasso_qnsCreateManyArgs>(args?: Prisma.SelectSubset<T, nasso_qnsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Nasso_qns.
   * @param {nasso_qnsDeleteArgs} args - Arguments to delete one Nasso_qns.
   * @example
   * // Delete one Nasso_qns
   * const Nasso_qns = await prisma.nasso_qns.delete({
   *   where: {
   *     // ... filter to delete one Nasso_qns
   *   }
   * })
   * 
   */
  delete<T extends nasso_qnsDeleteArgs>(args: Prisma.SelectSubset<T, nasso_qnsDeleteArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Nasso_qns.
   * @param {nasso_qnsUpdateArgs} args - Arguments to update one Nasso_qns.
   * @example
   * // Update one Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends nasso_qnsUpdateArgs>(args: Prisma.SelectSubset<T, nasso_qnsUpdateArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Nasso_qns.
   * @param {nasso_qnsDeleteManyArgs} args - Arguments to filter Nasso_qns to delete.
   * @example
   * // Delete a few Nasso_qns
   * const { count } = await prisma.nasso_qns.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends nasso_qnsDeleteManyArgs>(args?: Prisma.SelectSubset<T, nasso_qnsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Nasso_qns.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_qnsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends nasso_qnsUpdateManyArgs>(args: Prisma.SelectSubset<T, nasso_qnsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Nasso_qns.
   * @param {nasso_qnsUpsertArgs} args - Arguments to update or create a Nasso_qns.
   * @example
   * // Update or create a Nasso_qns
   * const nasso_qns = await prisma.nasso_qns.upsert({
   *   create: {
   *     // ... data to create a Nasso_qns
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Nasso_qns we want to update
   *   }
   * })
   */
  upsert<T extends nasso_qnsUpsertArgs>(args: Prisma.SelectSubset<T, nasso_qnsUpsertArgs<ExtArgs>>): Prisma.Prisma__nasso_qnsClient<runtime.Types.Result.GetResult<Prisma.$nasso_qnsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Nasso_qns.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_qnsCountArgs} args - Arguments to filter Nasso_qns to count.
   * @example
   * // Count the number of Nasso_qns
   * const count = await prisma.nasso_qns.count({
   *   where: {
   *     // ... the filter for the Nasso_qns we want to count
   *   }
   * })
  **/
  count<T extends nasso_qnsCountArgs>(
    args?: Prisma.Subset<T, nasso_qnsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Nasso_qnsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Nasso_qns.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Nasso_qnsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Nasso_qnsAggregateArgs>(args: Prisma.Subset<T, Nasso_qnsAggregateArgs>): Prisma.PrismaPromise<GetNasso_qnsAggregateType<T>>

  /**
   * Group by Nasso_qns.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {nasso_qnsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends nasso_qnsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: nasso_qnsGroupByArgs['orderBy'] }
      : { orderBy?: nasso_qnsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, nasso_qnsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNasso_qnsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the nasso_qns model
 */
readonly fields: nasso_qnsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for nasso_qns.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__nasso_qnsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  nasso_answer<T extends Prisma.nasso_qns$nasso_answerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.nasso_qns$nasso_answerArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$nasso_answerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  uza_answers<T extends Prisma.nasso_qns$uza_answersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.nasso_qns$uza_answersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$uza_answersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the nasso_qns model
 */
export interface nasso_qnsFieldRefs {
  readonly qns_Id: Prisma.FieldRef<"nasso_qns", 'Int'>
  readonly qns_name: Prisma.FieldRef<"nasso_qns", 'String'>
  readonly quiz_Id: Prisma.FieldRef<"nasso_qns", 'Int'>
}
    

// Custom InputTypes
/**
 * nasso_qns findUnique
 */
export type nasso_qnsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_qns to fetch.
   */
  where: Prisma.nasso_qnsWhereUniqueInput
}

/**
 * nasso_qns findUniqueOrThrow
 */
export type nasso_qnsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_qns to fetch.
   */
  where: Prisma.nasso_qnsWhereUniqueInput
}

/**
 * nasso_qns findFirst
 */
export type nasso_qnsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_qns to fetch.
   */
  where?: Prisma.nasso_qnsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_qns to fetch.
   */
  orderBy?: Prisma.nasso_qnsOrderByWithRelationInput | Prisma.nasso_qnsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for nasso_qns.
   */
  cursor?: Prisma.nasso_qnsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_qns from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_qns.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of nasso_qns.
   */
  distinct?: Prisma.Nasso_qnsScalarFieldEnum | Prisma.Nasso_qnsScalarFieldEnum[]
}

/**
 * nasso_qns findFirstOrThrow
 */
export type nasso_qnsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_qns to fetch.
   */
  where?: Prisma.nasso_qnsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_qns to fetch.
   */
  orderBy?: Prisma.nasso_qnsOrderByWithRelationInput | Prisma.nasso_qnsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for nasso_qns.
   */
  cursor?: Prisma.nasso_qnsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_qns from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_qns.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of nasso_qns.
   */
  distinct?: Prisma.Nasso_qnsScalarFieldEnum | Prisma.Nasso_qnsScalarFieldEnum[]
}

/**
 * nasso_qns findMany
 */
export type nasso_qnsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * Filter, which nasso_qns to fetch.
   */
  where?: Prisma.nasso_qnsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of nasso_qns to fetch.
   */
  orderBy?: Prisma.nasso_qnsOrderByWithRelationInput | Prisma.nasso_qnsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing nasso_qns.
   */
  cursor?: Prisma.nasso_qnsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` nasso_qns from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` nasso_qns.
   */
  skip?: number
  distinct?: Prisma.Nasso_qnsScalarFieldEnum | Prisma.Nasso_qnsScalarFieldEnum[]
}

/**
 * nasso_qns create
 */
export type nasso_qnsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * The data needed to create a nasso_qns.
   */
  data: Prisma.XOR<Prisma.nasso_qnsCreateInput, Prisma.nasso_qnsUncheckedCreateInput>
}

/**
 * nasso_qns createMany
 */
export type nasso_qnsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many nasso_qns.
   */
  data: Prisma.nasso_qnsCreateManyInput | Prisma.nasso_qnsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * nasso_qns update
 */
export type nasso_qnsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * The data needed to update a nasso_qns.
   */
  data: Prisma.XOR<Prisma.nasso_qnsUpdateInput, Prisma.nasso_qnsUncheckedUpdateInput>
  /**
   * Choose, which nasso_qns to update.
   */
  where: Prisma.nasso_qnsWhereUniqueInput
}

/**
 * nasso_qns updateMany
 */
export type nasso_qnsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update nasso_qns.
   */
  data: Prisma.XOR<Prisma.nasso_qnsUpdateManyMutationInput, Prisma.nasso_qnsUncheckedUpdateManyInput>
  /**
   * Filter which nasso_qns to update
   */
  where?: Prisma.nasso_qnsWhereInput
  /**
   * Limit how many nasso_qns to update.
   */
  limit?: number
}

/**
 * nasso_qns upsert
 */
export type nasso_qnsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * The filter to search for the nasso_qns to update in case it exists.
   */
  where: Prisma.nasso_qnsWhereUniqueInput
  /**
   * In case the nasso_qns found by the `where` argument doesn't exist, create a new nasso_qns with this data.
   */
  create: Prisma.XOR<Prisma.nasso_qnsCreateInput, Prisma.nasso_qnsUncheckedCreateInput>
  /**
   * In case the nasso_qns was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.nasso_qnsUpdateInput, Prisma.nasso_qnsUncheckedUpdateInput>
}

/**
 * nasso_qns delete
 */
export type nasso_qnsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
  /**
   * Filter which nasso_qns to delete.
   */
  where: Prisma.nasso_qnsWhereUniqueInput
}

/**
 * nasso_qns deleteMany
 */
export type nasso_qnsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which nasso_qns to delete
   */
  where?: Prisma.nasso_qnsWhereInput
  /**
   * Limit how many nasso_qns to delete.
   */
  limit?: number
}

/**
 * nasso_qns.nasso_answer
 */
export type nasso_qns$nasso_answerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_answer
   */
  select?: Prisma.nasso_answerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_answer
   */
  omit?: Prisma.nasso_answerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_answerInclude<ExtArgs> | null
  where?: Prisma.nasso_answerWhereInput
  orderBy?: Prisma.nasso_answerOrderByWithRelationInput | Prisma.nasso_answerOrderByWithRelationInput[]
  cursor?: Prisma.nasso_answerWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Nasso_answerScalarFieldEnum | Prisma.Nasso_answerScalarFieldEnum[]
}

/**
 * nasso_qns.uza_answers
 */
export type nasso_qns$uza_answersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the uza_answers
   */
  select?: Prisma.uza_answersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the uza_answers
   */
  omit?: Prisma.uza_answersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.uza_answersInclude<ExtArgs> | null
  where?: Prisma.uza_answersWhereInput
  orderBy?: Prisma.uza_answersOrderByWithRelationInput | Prisma.uza_answersOrderByWithRelationInput[]
  cursor?: Prisma.uza_answersWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Uza_answersScalarFieldEnum | Prisma.Uza_answersScalarFieldEnum[]
}

/**
 * nasso_qns without action
 */
export type nasso_qnsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the nasso_qns
   */
  select?: Prisma.nasso_qnsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the nasso_qns
   */
  omit?: Prisma.nasso_qnsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.nasso_qnsInclude<ExtArgs> | null
}
